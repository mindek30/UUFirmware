ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_cortex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_NVIC_SetPriorityGrouping
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_NVIC_SetPriorityGrouping:
  27              	.LVL0:
  28              	.LFB288:
  29              		.file 1 "../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c"
   1:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
   2:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
   3:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @file    stm32l4xx_hal_cortex.c
   4:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @author  MCD Application Team
   5:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   6:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
   7:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          functionalities of the CORTEX:
   8:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Initialization and Configuration functions
   9:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           + Peripheral Control functions
  10:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  11:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @verbatim
  12:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  13:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                         ##### How to use this driver #####
  14:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
  15:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  16:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  17:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure Interrupts using CORTEX HAL driver ***
  18:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===========================================================
  19:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  20:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     This section provides functions allowing to configure the NVIC interrupts (IRQ).
  21:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     The Cortex-M4 exceptions are managed by CMSIS functions.
  22:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  23:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping() function.
  24:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority().
  25:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     (#) Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ().
  26:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  27:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible.
  28:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  29:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 2


  30:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  31:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest pre-emption priority
  32:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest sub priority
  33:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  34:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  35:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  36:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     *** How to configure SysTick using CORTEX HAL driver ***
  37:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ========================================================
  38:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
  39:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     Setup SysTick Timer for time base.
  40:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  41:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config() function calls the SysTick_Config() function which
  42:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        is a CMSIS function that:
  43:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  44:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  45:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  46:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  47:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  48:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  49:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  50:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the macro
  51:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        __HAL_CORTEX_SYSTICKCLK_CONFIG(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  52:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call. The __HAL_CORTEX_SYSTICKCLK_CONFIG() macro is defined
  53:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        inside the stm32l4xx_hal_cortex.h file.
  54:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  55:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  56:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  57:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  58:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  59:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  60:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  61:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  62:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
  63:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  64:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  65:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   @endverbatim
  66:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  67:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  68:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   The table below gives the allowed values of the pre-emption priority and subpriority according
  69:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   to the Priority Grouping configuration performed by HAL_NVIC_SetPriorityGrouping() function.
  70:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
  71:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  72:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |     
  73:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  74:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_0  |                0                  |            0-15             | 0 bi
  75:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 4 bi
  76:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  77:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_1  |                0-1                |            0-7              | 1 bi
  78:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 3 bi
  79:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  80:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_2  |                0-3                |            0-3              | 2 bi
  81:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 2 bi
  82:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  83:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_3  |                0-7                |            0-1              | 3 bi
  84:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 1 bi
  85:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     -----------------------------------------------------------------------------------------------
  86:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****      NVIC_PRIORITYGROUP_4  |                0-15               |            0                | 4 bi
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 3


  87:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                            |                                   |                             | 0 bi
  88:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     ===============================================================================================
  89:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
  90:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
  91:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @attention
  92:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  93:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * Copyright (c) 2017 STMicroelectronics.
  94:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * All rights reserved.
  95:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
  96:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  97:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * the root directory of this software component.
  98:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  99:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *
 100:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ******************************************************************************
 101:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 102:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 103:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 104:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #include "stm32l4xx_hal.h"
 105:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 106:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup STM32L4xx_HAL_Driver
 107:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 108:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 109:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 110:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX
 111:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 112:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 113:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 114:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 115:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 116:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private types -------------------------------------------------------------*/
 117:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 118:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private constants ---------------------------------------------------------*/
 119:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private macros ------------------------------------------------------------*/
 120:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 121:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /* Exported functions --------------------------------------------------------*/
 122:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 123:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions
 124:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 125:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 126:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 127:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 128:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group1
 129:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions
 130:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 131:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
 132:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 133:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****               ##### Initialization and Configuration functions #####
 134:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 135:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 136:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This section provides the CORTEX HAL driver functions allowing to configure Interrupts
 137:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       SysTick functionalities
 138:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 139:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 140:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 141:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 142:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 143:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 4


 144:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 145:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority grouping field (pre-emption priority and subpriority)
 146:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         using the required unlock sequence.
 147:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length.
 148:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 149:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bit  for pre-emption priority,
 150:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    4 bits for subpriority
 151:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bit  for pre-emption priority,
 152:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    3 bits for subpriority
 153:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 154:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    2 bits for subpriority
 155:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 156:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    1 bit  for subpriority
 157:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 158:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                    0 bit  for subpriority
 159:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible.
 160:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority.
 161:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 162:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 163:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 164:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
  30              		.loc 1 164 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
 165:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 166:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  35              		.loc 1 166 3 view .LVU1
 167:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 168:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 169:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
  36              		.loc 1 169 3 view .LVU2
  37              	.LBB36:
  38              	.LBI36:
  39              		.file 2 "../03_Drivers/CMSIS/Include/core_cm4.h"
   1:../03_Drivers/CMSIS/Include/core_cm4.h **** /**************************************************************************//**
   2:../03_Drivers/CMSIS/Include/core_cm4.h ****  * @file     core_cm4.h
   3:../03_Drivers/CMSIS/Include/core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:../03_Drivers/CMSIS/Include/core_cm4.h ****  * @version  V5.1.0
   5:../03_Drivers/CMSIS/Include/core_cm4.h ****  * @date     13. March 2019
   6:../03_Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
   7:../03_Drivers/CMSIS/Include/core_cm4.h **** /*
   8:../03_Drivers/CMSIS/Include/core_cm4.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../03_Drivers/CMSIS/Include/core_cm4.h ****  *
  10:../03_Drivers/CMSIS/Include/core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../03_Drivers/CMSIS/Include/core_cm4.h ****  *
  12:../03_Drivers/CMSIS/Include/core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../03_Drivers/CMSIS/Include/core_cm4.h ****  * not use this file except in compliance with the License.
  14:../03_Drivers/CMSIS/Include/core_cm4.h ****  * You may obtain a copy of the License at
  15:../03_Drivers/CMSIS/Include/core_cm4.h ****  *
  16:../03_Drivers/CMSIS/Include/core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../03_Drivers/CMSIS/Include/core_cm4.h ****  *
  18:../03_Drivers/CMSIS/Include/core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../03_Drivers/CMSIS/Include/core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../03_Drivers/CMSIS/Include/core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../03_Drivers/CMSIS/Include/core_cm4.h ****  * See the License for the specific language governing permissions and
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 5


  22:../03_Drivers/CMSIS/Include/core_cm4.h ****  * limitations under the License.
  23:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
  24:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  25:../03_Drivers/CMSIS/Include/core_cm4.h **** #if   defined ( __ICCARM__ )
  26:../03_Drivers/CMSIS/Include/core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:../03_Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__clang__)
  28:../03_Drivers/CMSIS/Include/core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif
  30:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  31:../03_Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:../03_Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  34:../03_Drivers/CMSIS/Include/core_cm4.h **** #include <stdint.h>
  35:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  36:../03_Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
  37:../03_Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
  38:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif
  39:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  40:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
  41:../03_Drivers/CMSIS/Include/core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:../03_Drivers/CMSIS/Include/core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  44:../03_Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:../03_Drivers/CMSIS/Include/core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  47:../03_Drivers/CMSIS/Include/core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:../03_Drivers/CMSIS/Include/core_cm4.h ****      Unions are used for effective representation of core registers.
  49:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  50:../03_Drivers/CMSIS/Include/core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:../03_Drivers/CMSIS/Include/core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
  53:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  54:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  55:../03_Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
  56:../03_Drivers/CMSIS/Include/core_cm4.h ****  *                 CMSIS definitions
  57:../03_Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
  58:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
  59:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup Cortex_M4
  60:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
  61:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
  62:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  63:../03_Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_version.h"
  64:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  65:../03_Drivers/CMSIS/Include/core_cm4.h **** /* CMSIS CM4 definitions */
  66:../03_Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:../03_Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:../03_Drivers/CMSIS/Include/core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:../03_Drivers/CMSIS/Include/core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  71:../03_Drivers/CMSIS/Include/core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  73:../03_Drivers/CMSIS/Include/core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:../03_Drivers/CMSIS/Include/core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:../03_Drivers/CMSIS/Include/core_cm4.h **** */
  76:../03_Drivers/CMSIS/Include/core_cm4.h **** #if defined ( __CC_ARM )
  77:../03_Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:../03_Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 6


  79:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  80:../03_Drivers/CMSIS/Include/core_cm4.h ****     #else
  81:../03_Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  83:../03_Drivers/CMSIS/Include/core_cm4.h ****     #endif
  84:../03_Drivers/CMSIS/Include/core_cm4.h ****   #else
  85:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  86:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
  87:../03_Drivers/CMSIS/Include/core_cm4.h **** 
  88:../03_Drivers/CMSIS/Include/core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:../03_Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARM_FP
  90:../03_Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
  92:../03_Drivers/CMSIS/Include/core_cm4.h ****     #else
  93:../03_Drivers/CMSIS/Include/core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
  95:../03_Drivers/CMSIS/Include/core_cm4.h ****     #endif
  96:../03_Drivers/CMSIS/Include/core_cm4.h ****   #else
  97:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
  98:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
  99:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 100:../03_Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __GNUC__ )
 101:../03_Drivers/CMSIS/Include/core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:../03_Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 104:../03_Drivers/CMSIS/Include/core_cm4.h ****     #else
 105:../03_Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 107:../03_Drivers/CMSIS/Include/core_cm4.h ****     #endif
 108:../03_Drivers/CMSIS/Include/core_cm4.h ****   #else
 109:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 110:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 111:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 112:../03_Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __ICCARM__ )
 113:../03_Drivers/CMSIS/Include/core_cm4.h ****   #if defined __ARMVFP__
 114:../03_Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 116:../03_Drivers/CMSIS/Include/core_cm4.h ****     #else
 117:../03_Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 119:../03_Drivers/CMSIS/Include/core_cm4.h ****     #endif
 120:../03_Drivers/CMSIS/Include/core_cm4.h ****   #else
 121:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 122:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 123:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 124:../03_Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:../03_Drivers/CMSIS/Include/core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:../03_Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 128:../03_Drivers/CMSIS/Include/core_cm4.h ****     #else
 129:../03_Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 131:../03_Drivers/CMSIS/Include/core_cm4.h ****     #endif
 132:../03_Drivers/CMSIS/Include/core_cm4.h ****   #else
 133:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 134:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 135:../03_Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 7


 136:../03_Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __TASKING__ )
 137:../03_Drivers/CMSIS/Include/core_cm4.h ****   #if defined __FPU_VFP__
 138:../03_Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 140:../03_Drivers/CMSIS/Include/core_cm4.h ****     #else
 141:../03_Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 143:../03_Drivers/CMSIS/Include/core_cm4.h ****     #endif
 144:../03_Drivers/CMSIS/Include/core_cm4.h ****   #else
 145:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 146:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 147:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 148:../03_Drivers/CMSIS/Include/core_cm4.h **** #elif defined ( __CSMC__ )
 149:../03_Drivers/CMSIS/Include/core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:../03_Drivers/CMSIS/Include/core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       1U
 152:../03_Drivers/CMSIS/Include/core_cm4.h ****     #else
 153:../03_Drivers/CMSIS/Include/core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:../03_Drivers/CMSIS/Include/core_cm4.h ****       #define __FPU_USED       0U
 155:../03_Drivers/CMSIS/Include/core_cm4.h ****     #endif
 156:../03_Drivers/CMSIS/Include/core_cm4.h ****   #else
 157:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_USED         0U
 158:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 159:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 160:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif
 161:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 162:../03_Drivers/CMSIS/Include/core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 164:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 165:../03_Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 166:../03_Drivers/CMSIS/Include/core_cm4.h **** }
 167:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif
 168:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 169:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 171:../03_Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 173:../03_Drivers/CMSIS/Include/core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:../03_Drivers/CMSIS/Include/core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 176:../03_Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 177:../03_Drivers/CMSIS/Include/core_cm4.h ****  extern "C" {
 178:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif
 179:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 180:../03_Drivers/CMSIS/Include/core_cm4.h **** /* check device defines and use defaults */
 181:../03_Drivers/CMSIS/Include/core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:../03_Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __CM4_REV
 183:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __CM4_REV               0x0000U
 184:../03_Drivers/CMSIS/Include/core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 186:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 187:../03_Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __FPU_PRESENT
 188:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __FPU_PRESENT             0U
 189:../03_Drivers/CMSIS/Include/core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 191:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 192:../03_Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __MPU_PRESENT
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 8


 193:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __MPU_PRESENT             0U
 194:../03_Drivers/CMSIS/Include/core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 196:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 197:../03_Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:../03_Drivers/CMSIS/Include/core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 201:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 202:../03_Drivers/CMSIS/Include/core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:../03_Drivers/CMSIS/Include/core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
 206:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif
 207:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 208:../03_Drivers/CMSIS/Include/core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 210:../03_Drivers/CMSIS/Include/core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 212:../03_Drivers/CMSIS/Include/core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:../03_Drivers/CMSIS/Include/core_cm4.h ****     \li to specify the access to peripheral variables.
 214:../03_Drivers/CMSIS/Include/core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:../03_Drivers/CMSIS/Include/core_cm4.h **** */
 216:../03_Drivers/CMSIS/Include/core_cm4.h **** #ifdef __cplusplus
 217:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:../03_Drivers/CMSIS/Include/core_cm4.h **** #else
 219:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif
 221:../03_Drivers/CMSIS/Include/core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:../03_Drivers/CMSIS/Include/core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 224:../03_Drivers/CMSIS/Include/core_cm4.h **** /* following defines should be used for structure members */
 225:../03_Drivers/CMSIS/Include/core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:../03_Drivers/CMSIS/Include/core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:../03_Drivers/CMSIS/Include/core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 229:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group Cortex_M4 */
 230:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 231:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 232:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 233:../03_Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
 234:../03_Drivers/CMSIS/Include/core_cm4.h ****  *                 Register Abstraction
 235:../03_Drivers/CMSIS/Include/core_cm4.h ****   Core Register contain:
 236:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core Register
 237:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Register
 238:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core SCB Register
 239:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Register
 240:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Register
 241:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core MPU Register
 242:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core FPU Register
 243:../03_Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
 244:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 245:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:../03_Drivers/CMSIS/Include/core_cm4.h **** */
 248:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 249:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 9


 250:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 251:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief      Core Register type definitions.
 253:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
 254:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 255:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 256:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 257:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 259:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef union
 260:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 261:../03_Drivers/CMSIS/Include/core_cm4.h ****   struct
 262:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 263:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:../03_Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:../03_Drivers/CMSIS/Include/core_cm4.h **** } APSR_Type;
 274:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 275:../03_Drivers/CMSIS/Include/core_cm4.h **** /* APSR Register Definitions */
 276:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 279:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 282:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 285:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 288:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 291:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:../03_Drivers/CMSIS/Include/core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 294:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 295:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 296:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 298:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef union
 299:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 300:../03_Drivers/CMSIS/Include/core_cm4.h ****   struct
 301:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 302:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:../03_Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:../03_Drivers/CMSIS/Include/core_cm4.h **** } IPSR_Type;
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 10


 307:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 308:../03_Drivers/CMSIS/Include/core_cm4.h **** /* IPSR Register Definitions */
 309:../03_Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:../03_Drivers/CMSIS/Include/core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 312:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 313:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 314:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 316:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef union
 317:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 318:../03_Drivers/CMSIS/Include/core_cm4.h ****   struct
 319:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 320:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:../03_Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:../03_Drivers/CMSIS/Include/core_cm4.h **** } xPSR_Type;
 335:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 336:../03_Drivers/CMSIS/Include/core_cm4.h **** /* xPSR Register Definitions */
 337:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 340:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 343:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 346:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 349:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 352:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 355:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 358:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 361:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:../03_Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 11


 364:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:../03_Drivers/CMSIS/Include/core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 367:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 368:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 369:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 371:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef union
 372:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 373:../03_Drivers/CMSIS/Include/core_cm4.h ****   struct
 374:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 375:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:../03_Drivers/CMSIS/Include/core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:../03_Drivers/CMSIS/Include/core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:../03_Drivers/CMSIS/Include/core_cm4.h **** } CONTROL_Type;
 382:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 383:../03_Drivers/CMSIS/Include/core_cm4.h **** /* CONTROL Register Definitions */
 384:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 387:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 390:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 393:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 395:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 396:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 397:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
 398:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
 401:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 402:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 403:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 404:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 406:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 407:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 408:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[24U];
 410:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[24U];
 412:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[24U];
 414:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[24U];
 416:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[56U];
 418:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[644U];
 420:../03_Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 12


 421:../03_Drivers/CMSIS/Include/core_cm4.h **** }  NVIC_Type;
 422:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 423:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:../03_Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:../03_Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 427:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 429:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 430:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 431:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 432:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
 435:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 436:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 437:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 438:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 440:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 441:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 442:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[5U];
 462:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:../03_Drivers/CMSIS/Include/core_cm4.h **** } SCB_Type;
 464:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 465:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB CPUID Register Definitions */
 466:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 469:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 472:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 475:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:../03_Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 13


 478:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 481:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 485:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 488:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 491:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 494:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 497:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 500:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 503:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 506:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 509:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 512:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 516:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 520:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 523:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 526:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 529:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 532:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:../03_Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 14


 535:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 538:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Control Register Definitions */
 539:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 542:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 545:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 548:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 552:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 555:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 558:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 561:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 564:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 567:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 571:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 574:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 577:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 580:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 583:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 586:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 589:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:../03_Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 15


 592:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 595:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 598:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 601:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 604:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 607:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 610:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 614:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 617:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 620:../03_Drivers/CMSIS/Include/core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 624:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 627:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 630:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 633:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 636:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 639:../03_Drivers/CMSIS/Include/core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 643:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 646:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:../03_Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 16


 649:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 652:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 655:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 658:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 661:../03_Drivers/CMSIS/Include/core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 665:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 668:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 671:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 674:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 677:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 680:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 684:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 687:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 690:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 694:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 697:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 700:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 703:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:../03_Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 17


 706:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 708:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 709:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 710:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 711:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
 714:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 715:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 716:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 717:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 719:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 720:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 721:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 722:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:../03_Drivers/CMSIS/Include/core_cm4.h **** } SCnSCB_Type;
 725:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 726:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 730:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 734:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 737:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 740:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 743:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 746:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 748:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 749:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 750:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 751:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
 754:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 755:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 756:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 757:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 759:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 760:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 761:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 18


 763:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:../03_Drivers/CMSIS/Include/core_cm4.h **** } SysTick_Type;
 766:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 767:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 771:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 774:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 777:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 780:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Reload Register Definitions */
 781:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 784:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Current Register Definitions */
 785:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 788:../03_Drivers/CMSIS/Include/core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 792:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 795:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 798:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 800:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 801:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 802:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 803:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
 806:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 807:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 808:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 809:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 811:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 812:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 813:../03_Drivers/CMSIS/Include/core_cm4.h ****   __OM  union
 814:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 815:../03_Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:../03_Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:../03_Drivers/CMSIS/Include/core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:../03_Drivers/CMSIS/Include/core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[864U];
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 19


 820:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[15U];
 822:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[15U];
 824:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[32U];
 826:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[43U];
 827:../03_Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 828:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 829:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[6U];
 830:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 831:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 832:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 833:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 834:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 835:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 836:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 837:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 838:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 839:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 840:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 841:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 842:../03_Drivers/CMSIS/Include/core_cm4.h **** } ITM_Type;
 843:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 844:../03_Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 845:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 846:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 847:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 848:../03_Drivers/CMSIS/Include/core_cm4.h **** /* ITM Trace Control Register Definitions */
 849:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 850:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 851:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 852:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 853:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 854:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 855:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 856:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 857:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 858:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 859:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 860:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 861:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 862:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 863:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 864:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 865:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 866:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 867:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 868:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 869:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 870:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 871:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 872:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 873:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 874:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 875:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 876:../03_Drivers/CMSIS/Include/core_cm4.h **** /* ITM Lock Status Register Definitions */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 20


 877:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 878:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 879:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 880:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 881:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 882:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 883:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 884:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 885:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 886:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 887:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 888:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 889:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 890:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
 891:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 892:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 893:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
 894:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 895:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 896:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
 897:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 898:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
 899:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
 900:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 901:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 902:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 903:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 904:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 905:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 906:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 907:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 908:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 909:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 910:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 911:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 912:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
 913:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 914:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 915:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 916:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[1U];
 917:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 918:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 919:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 920:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[1U];
 921:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 922:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 923:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 924:../03_Drivers/CMSIS/Include/core_cm4.h **** } DWT_Type;
 925:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 926:../03_Drivers/CMSIS/Include/core_cm4.h **** /* DWT Control Register Definitions */
 927:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 928:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 929:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 930:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 931:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 932:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 933:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 21


 934:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 935:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 936:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 937:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 938:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 939:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 940:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 941:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 942:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 943:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 944:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 945:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 946:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 947:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 948:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 949:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 950:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 951:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 952:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 953:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 954:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 955:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 956:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 957:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 958:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 959:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 960:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 961:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 962:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 963:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 964:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 965:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 966:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 967:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 968:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 969:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 970:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 971:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 972:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 973:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 974:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 975:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 976:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 977:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 978:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 979:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 980:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 981:../03_Drivers/CMSIS/Include/core_cm4.h **** /* DWT CPI Count Register Definitions */
 982:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 983:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 984:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 985:../03_Drivers/CMSIS/Include/core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
 986:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 987:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 988:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 989:../03_Drivers/CMSIS/Include/core_cm4.h **** /* DWT Sleep Count Register Definitions */
 990:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 22


 991:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 992:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 993:../03_Drivers/CMSIS/Include/core_cm4.h **** /* DWT LSU Count Register Definitions */
 994:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 995:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 996:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 997:../03_Drivers/CMSIS/Include/core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
 998:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 999:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1000:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1001:../03_Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1002:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1003:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1004:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1005:../03_Drivers/CMSIS/Include/core_cm4.h **** /* DWT Comparator Function Register Definitions */
1006:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1007:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1008:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1009:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1010:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1011:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1012:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1013:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1014:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1015:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1016:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1017:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1018:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1019:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1020:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1021:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1022:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1023:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1024:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1025:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1026:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1027:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1028:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1029:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1030:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1031:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1032:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1033:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1034:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1035:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1036:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1037:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1038:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1039:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1040:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
1041:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1042:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1043:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1044:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1045:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1046:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1047:../03_Drivers/CMSIS/Include/core_cm4.h **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 23


1048:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1049:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1050:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[2U];
1051:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1052:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED1[55U];
1053:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1054:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED2[131U];
1055:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1056:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1057:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1058:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED3[759U];
1059:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1060:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1061:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1062:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED4[1U];
1063:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1064:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1065:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1066:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED5[39U];
1067:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1068:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1069:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED7[8U];
1070:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1071:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1072:../03_Drivers/CMSIS/Include/core_cm4.h **** } TPI_Type;
1073:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1074:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1075:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1076:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1077:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1078:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1079:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1080:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1081:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1082:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1083:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1084:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1085:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1086:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1087:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1088:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1089:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1090:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1091:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1092:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1093:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1094:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1095:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1096:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1097:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1098:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1099:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1100:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1101:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1102:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI TRIGGER Register Definitions */
1103:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1104:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 24


1105:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1106:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1107:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1108:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1109:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1110:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1111:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1112:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1113:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1114:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1115:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1116:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1117:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1118:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1119:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1120:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1121:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1122:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1123:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1124:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1125:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1126:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1127:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1128:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1129:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1130:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1131:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1132:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1133:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1134:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1135:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1136:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1137:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1138:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1139:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1140:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1141:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1142:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1143:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x1UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1144:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1145:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1146:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1147:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1148:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1149:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1150:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1151:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1152:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1153:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1154:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1155:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1156:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1157:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1158:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1159:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1160:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1161:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 25


1162:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1163:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1164:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1165:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1166:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1167:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1168:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVID Register Definitions */
1169:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1170:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1171:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1172:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1173:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1174:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1175:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1176:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1177:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1178:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1179:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1180:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1181:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1182:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1183:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1184:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1185:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1186:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1187:../03_Drivers/CMSIS/Include/core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1188:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1189:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1190:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1191:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1192:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1193:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1194:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1195:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1196:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1197:../03_Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1198:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1199:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1200:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1201:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1202:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
1203:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1204:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1205:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1206:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1207:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1208:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1209:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1210:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1211:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1212:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1213:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1214:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1215:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1216:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1217:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1218:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 26


1219:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1220:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1221:../03_Drivers/CMSIS/Include/core_cm4.h **** } MPU_Type;
1222:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1223:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1224:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1225:../03_Drivers/CMSIS/Include/core_cm4.h **** /* MPU Type Register Definitions */
1226:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1227:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1228:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1229:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1230:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1231:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1232:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1233:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1234:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1235:../03_Drivers/CMSIS/Include/core_cm4.h **** /* MPU Control Register Definitions */
1236:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1237:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1238:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1239:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1240:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1241:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1242:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1243:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1244:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1245:../03_Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Number Register Definitions */
1246:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1247:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1248:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1249:../03_Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Base Address Register Definitions */
1250:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1251:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1252:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1253:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1254:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1255:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1256:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1257:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1258:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1259:../03_Drivers/CMSIS/Include/core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1260:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1261:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1262:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1263:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1264:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1265:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1266:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1267:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1268:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1269:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1270:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1271:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1272:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1273:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1274:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1275:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 27


1276:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1277:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1278:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1279:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1280:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1281:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1282:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1283:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1284:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1285:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1286:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1287:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1288:../03_Drivers/CMSIS/Include/core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1289:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1290:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_MPU */
1291:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1292:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1293:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1294:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1295:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1296:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1297:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1298:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
1299:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1300:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1301:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1302:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1303:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1304:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1305:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1306:../03_Drivers/CMSIS/Include/core_cm4.h ****         uint32_t RESERVED0[1U];
1307:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1308:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1309:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1310:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1311:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1312:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IM  uint32_t MVFR2;                  /*!< Offset: 0x018 (R/ )  Media and FP Feature Register 2 
1313:../03_Drivers/CMSIS/Include/core_cm4.h **** } FPU_Type;
1314:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1315:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1316:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1317:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1318:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1319:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1320:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1321:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1322:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1323:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1324:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1325:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1326:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1327:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1328:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1329:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1330:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1331:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1332:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 28


1333:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1334:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1335:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1336:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1337:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1338:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1339:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1340:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1341:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1342:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1343:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1344:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1345:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1346:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1347:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1348:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1349:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1350:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1351:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1352:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1353:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1354:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1355:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1356:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1357:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1358:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1359:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1360:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1361:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1362:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1363:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1364:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1365:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1366:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1367:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1368:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1369:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1370:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1371:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1372:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1373:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1374:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1375:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1376:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1377:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1378:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1379:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1380:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1381:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1382:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1383:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1384:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1385:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1386:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1387:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1388:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1389:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 29


1390:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1391:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1392:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1393:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1394:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1395:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1396:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1397:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1398:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Media and FP Feature Register 2 Definitions */
1399:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1400:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Pos              4U                                            /*!< MVFR
1401:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_MVFR2_VFP_Misc_Msk             (0xFUL << FPU_MVFR2_VFP_Misc_Pos)              /*!< MVFR
1402:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1403:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_FPU */
1404:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1405:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1406:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1407:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_core_register
1408:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1409:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1410:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
1411:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1412:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1413:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1414:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1415:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1416:../03_Drivers/CMSIS/Include/core_cm4.h **** typedef struct
1417:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1418:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1419:../03_Drivers/CMSIS/Include/core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1420:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1421:../03_Drivers/CMSIS/Include/core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1422:../03_Drivers/CMSIS/Include/core_cm4.h **** } CoreDebug_Type;
1423:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1424:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1425:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1426:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1427:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1428:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1429:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1430:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1431:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1432:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1433:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1434:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1435:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1436:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1437:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1438:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1439:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1440:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1441:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1442:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1443:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1444:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1445:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1446:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 30


1447:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1448:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1449:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1450:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1451:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1452:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1453:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1454:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1455:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1456:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1457:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1458:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1459:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1460:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1461:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1462:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1463:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1464:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1465:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1466:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1467:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1468:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1469:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1470:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1471:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1472:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1473:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1474:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1475:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1476:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1477:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1478:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1479:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1480:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1481:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1482:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1483:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1484:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1485:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1486:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1487:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1488:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1489:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1490:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1491:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1492:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1493:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1494:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1495:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1496:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1497:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1498:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1499:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1500:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1501:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1502:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1503:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 31


1504:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1505:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1506:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1507:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1508:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1509:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1510:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1511:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1512:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1513:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1514:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1515:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
1516:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1517:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1518:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1519:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1520:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1521:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1522:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted value.
1523:../03_Drivers/CMSIS/Include/core_cm4.h **** */
1524:../03_Drivers/CMSIS/Include/core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1525:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1526:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1527:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1528:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param[in] field  Name of the register bit field.
1529:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1530:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return           Masked and shifted bit field value.
1531:../03_Drivers/CMSIS/Include/core_cm4.h **** */
1532:../03_Drivers/CMSIS/Include/core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1533:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1534:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1535:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1536:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1537:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1538:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup    CMSIS_core_register
1539:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1540:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1541:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
1542:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1543:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1544:../03_Drivers/CMSIS/Include/core_cm4.h **** /* Memory mapping of Core Hardware */
1545:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1546:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1547:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1548:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1549:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1550:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1551:../03_Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1552:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1553:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1554:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1555:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1556:../03_Drivers/CMSIS/Include/core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1557:../03_Drivers/CMSIS/Include/core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1558:../03_Drivers/CMSIS/Include/core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1559:../03_Drivers/CMSIS/Include/core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1560:../03_Drivers/CMSIS/Include/core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 32


1561:../03_Drivers/CMSIS/Include/core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1562:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1563:../03_Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1564:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1565:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1566:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif
1567:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1568:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1569:../03_Drivers/CMSIS/Include/core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1570:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1571:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} */
1572:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1573:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1574:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1575:../03_Drivers/CMSIS/Include/core_cm4.h **** /*******************************************************************************
1576:../03_Drivers/CMSIS/Include/core_cm4.h ****  *                Hardware Abstraction Layer
1577:../03_Drivers/CMSIS/Include/core_cm4.h ****   Core Function Interface contains:
1578:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core NVIC Functions
1579:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core SysTick Functions
1580:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core Debug Functions
1581:../03_Drivers/CMSIS/Include/core_cm4.h ****   - Core Register Access Functions
1582:../03_Drivers/CMSIS/Include/core_cm4.h ****  ******************************************************************************/
1583:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1584:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1585:../03_Drivers/CMSIS/Include/core_cm4.h **** */
1586:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1587:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1588:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1589:../03_Drivers/CMSIS/Include/core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1590:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1591:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1592:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1593:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1594:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
1595:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1596:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1597:../03_Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1598:../03_Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1599:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1600:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
1601:../03_Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1602:../03_Drivers/CMSIS/Include/core_cm4.h **** #else
1603:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1604:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1605:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1606:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1607:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1608:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1609:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1610:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1611:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1612:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1613:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1614:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1615:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1616:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1617:../03_Drivers/CMSIS/Include/core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 33


1618:../03_Drivers/CMSIS/Include/core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1619:../03_Drivers/CMSIS/Include/core_cm4.h ****     #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1620:../03_Drivers/CMSIS/Include/core_cm4.h ****   #endif
1621:../03_Drivers/CMSIS/Include/core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1622:../03_Drivers/CMSIS/Include/core_cm4.h **** #else
1623:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1624:../03_Drivers/CMSIS/Include/core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1625:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1626:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1627:../03_Drivers/CMSIS/Include/core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1628:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1629:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1630:../03_Drivers/CMSIS/Include/core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1631:../03_Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1632:../03_Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1633:../03_Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1634:../03_Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1635:../03_Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1636:../03_Drivers/CMSIS/Include/core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1637:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1638:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1639:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1640:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Priority Grouping
1641:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1642:../03_Drivers/CMSIS/Include/core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1643:../03_Drivers/CMSIS/Include/core_cm4.h ****            Only values from 0..7 are used.
1644:../03_Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1645:../03_Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1646:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1647:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1648:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
  40              		.loc 2 1648 22 view .LVU3
  41              	.LBB37:
1649:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1650:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t reg_value;
  42              		.loc 2 1650 3 view .LVU4
1651:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
  43              		.loc 2 1651 3 view .LVU5
1652:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1653:../03_Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  44              		.loc 2 1653 3 view .LVU6
  45              		.loc 2 1653 14 is_stmt 0 view .LVU7
  46 0000 074A     		ldr	r2, .L2
  47 0002 D368     		ldr	r3, [r2, #12]
  48              	.LVL1:
1654:../03_Drivers/CMSIS/Include/core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  49              		.loc 2 1654 3 is_stmt 1 view .LVU8
  50              		.loc 2 1654 13 is_stmt 0 view .LVU9
  51 0004 23F4E063 		bic	r3, r3, #1792
  52              	.LVL2:
  53              		.loc 2 1654 13 view .LVU10
  54 0008 1B04     		lsls	r3, r3, #16
  55 000a 1B0C     		lsrs	r3, r3, #16
  56              	.LVL3:
1655:../03_Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  57              		.loc 2 1655 3 is_stmt 1 view .LVU11
1656:../03_Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 34


1657:../03_Drivers/CMSIS/Include/core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
  58              		.loc 2 1657 35 is_stmt 0 view .LVU12
  59 000c 0002     		lsls	r0, r0, #8
  60              	.LVL4:
  61              		.loc 2 1657 35 view .LVU13
  62 000e 00F4E060 		and	r0, r0, #1792
1656:../03_Drivers/CMSIS/Include/core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
  63              		.loc 2 1656 62 view .LVU14
  64 0012 0343     		orrs	r3, r3, r0
  65              	.LVL5:
1655:../03_Drivers/CMSIS/Include/core_cm4.h ****   reg_value  =  (reg_value                                   |
  66              		.loc 2 1655 14 view .LVU15
  67 0014 43F0BF63 		orr	r3, r3, #100139008
  68 0018 43F40033 		orr	r3, r3, #131072
  69              	.LVL6:
1658:../03_Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR =  reg_value;
  70              		.loc 2 1658 3 is_stmt 1 view .LVU16
  71              		.loc 2 1658 14 is_stmt 0 view .LVU17
  72 001c D360     		str	r3, [r2, #12]
  73              	.LVL7:
  74              		.loc 2 1658 14 view .LVU18
  75              	.LBE37:
  76              	.LBE36:
 170:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
  77              		.loc 1 170 1 view .LVU19
  78 001e 7047     		bx	lr
  79              	.L3:
  80              		.align	2
  81              	.L2:
  82 0020 00ED00E0 		.word	-536810240
  83              		.cfi_endproc
  84              	.LFE288:
  86              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  87              		.align	1
  88              		.global	HAL_NVIC_SetPriority
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  93              	HAL_NVIC_SetPriority:
  94              	.LVL8:
  95              	.LFB289:
 171:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 172:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 173:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set the priority of an interrupt.
 174:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 175:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 176:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 177:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  PreemptPriority: The pre-emption priority for the IRQn channel.
 178:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 179:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority
 180:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 181:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 182:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.
 183:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 184:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 185:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 186:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 35


  96              		.loc 1 186 1 is_stmt 1 view -0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100              		.loc 1 186 1 is_stmt 0 view .LVU21
 101 0000 00B5     		push	{lr}
 102              	.LCFI0:
 103              		.cfi_def_cfa_offset 4
 104              		.cfi_offset 14, -4
 187:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 105              		.loc 1 187 3 is_stmt 1 view .LVU22
 106              	.LVL9:
 188:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 189:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 190:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 107              		.loc 1 190 3 view .LVU23
 191:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 108              		.loc 1 191 3 view .LVU24
 192:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 193:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 109              		.loc 1 193 3 view .LVU25
 110              	.LBB44:
 111              	.LBI44:
1659:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1660:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1661:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1662:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1663:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Priority Grouping
1664:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1665:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1666:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1667:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
 112              		.loc 2 1667 26 view .LVU26
 113              	.LBB45:
1668:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1669:../03_Drivers/CMSIS/Include/core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 114              		.loc 2 1669 3 view .LVU27
 115              		.loc 2 1669 26 is_stmt 0 view .LVU28
 116 0002 194B     		ldr	r3, .L10
 117 0004 DB68     		ldr	r3, [r3, #12]
 118              		.loc 2 1669 11 view .LVU29
 119 0006 C3F30223 		ubfx	r3, r3, #8, #3
 120              	.LVL10:
 121              		.loc 2 1669 11 view .LVU30
 122              	.LBE45:
 123              	.LBE44:
 194:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 195:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 124              		.loc 1 195 3 is_stmt 1 view .LVU31
 125              	.LBB46:
 126              	.LBI46:
1670:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1671:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1672:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1673:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1674:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Enable Interrupt
1675:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 36


1676:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1677:../03_Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1678:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1679:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1680:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1681:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1682:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1683:../03_Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1684:../03_Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1685:../03_Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
1686:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1687:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1688:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1689:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1690:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1691:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Enable status
1692:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1693:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1694:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt is not enabled.
1695:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt is enabled.
1696:../03_Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1697:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1698:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1699:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1700:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1701:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1702:../03_Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1703:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1704:../03_Drivers/CMSIS/Include/core_cm4.h ****   else
1705:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1706:../03_Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1707:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1708:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1709:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1710:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1711:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1712:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Disable Interrupt
1713:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1714:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1715:../03_Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1716:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1717:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1718:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1719:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1720:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1721:../03_Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1722:../03_Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
1723:../03_Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
1724:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1725:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1726:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1727:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1728:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1729:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Pending Interrupt
1730:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1731:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1732:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not pending.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 37


1733:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is pending.
1734:../03_Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1735:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1736:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1737:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1738:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1739:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1740:../03_Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1741:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1742:../03_Drivers/CMSIS/Include/core_cm4.h ****   else
1743:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1744:../03_Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1745:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1746:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1747:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1748:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1749:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1750:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Pending Interrupt
1751:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1752:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1753:../03_Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1754:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1755:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1756:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1757:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1758:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1759:../03_Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1760:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1761:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1762:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1763:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1764:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1765:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Clear Pending Interrupt
1766:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1767:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1768:../03_Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1769:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1770:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1771:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1772:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1773:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1774:../03_Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1775:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1776:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1777:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1778:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1779:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1780:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Active Interrupt
1781:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1782:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1783:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return             0  Interrupt status is not active.
1784:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return             1  Interrupt status is active.
1785:../03_Drivers/CMSIS/Include/core_cm4.h ****   \note    IRQn must not be negative.
1786:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1787:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1788:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1789:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 38


1790:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1791:../03_Drivers/CMSIS/Include/core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1792:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1793:../03_Drivers/CMSIS/Include/core_cm4.h ****   else
1794:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1795:../03_Drivers/CMSIS/Include/core_cm4.h ****     return(0U);
1796:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1797:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1798:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1799:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1800:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1801:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Priority
1802:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1803:../03_Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1804:../03_Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1805:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1806:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  priority  Priority to set.
1807:../03_Drivers/CMSIS/Include/core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1808:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1809:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1810:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1811:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1812:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1813:../03_Drivers/CMSIS/Include/core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1814:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1815:../03_Drivers/CMSIS/Include/core_cm4.h ****   else
1816:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1817:../03_Drivers/CMSIS/Include/core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
1818:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1819:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1820:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1821:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1822:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1823:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Priority
1824:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1825:../03_Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1826:../03_Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1827:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1828:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return             Interrupt Priority.
1829:../03_Drivers/CMSIS/Include/core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1830:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1831:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1832:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1833:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1834:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1835:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1836:../03_Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1837:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1838:../03_Drivers/CMSIS/Include/core_cm4.h ****   else
1839:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1840:../03_Drivers/CMSIS/Include/core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1841:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1842:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1843:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1844:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1845:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1846:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Encode Priority
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 39


1847:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1848:../03_Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value, and subpriority value.
1849:../03_Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1850:../03_Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1851:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1852:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1853:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1854:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1855:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1856:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
 127              		.loc 2 1856 26 view .LVU32
 128              	.LBB47:
1857:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1858:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 129              		.loc 2 1858 3 view .LVU33
1859:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 130              		.loc 2 1859 3 view .LVU34
1860:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 131              		.loc 2 1860 3 view .LVU35
1861:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1862:../03_Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 132              		.loc 2 1862 3 view .LVU36
 133              		.loc 2 1862 31 is_stmt 0 view .LVU37
 134 000a C3F1070C 		rsb	ip, r3, #7
 135              		.loc 2 1862 23 view .LVU38
 136 000e BCF1040F 		cmp	ip, #4
 137 0012 28BF     		it	cs
 138 0014 4FF0040C 		movcs	ip, #4
 139              	.LVL11:
1863:../03_Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 140              		.loc 2 1863 3 is_stmt 1 view .LVU39
 141              		.loc 2 1863 44 is_stmt 0 view .LVU40
 142 0018 03F1040E 		add	lr, r3, #4
 143              		.loc 2 1863 109 view .LVU41
 144 001c BEF1060F 		cmp	lr, #6
 145 0020 18D9     		bls	.L8
 146 0022 033B     		subs	r3, r3, #3
 147              	.LVL12:
 148              	.L5:
1864:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1865:../03_Drivers/CMSIS/Include/core_cm4.h ****   return (
 149              		.loc 2 1865 3 is_stmt 1 view .LVU42
1866:../03_Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 150              		.loc 2 1866 30 is_stmt 0 view .LVU43
 151 0024 4FF0FF3E 		mov	lr, #-1
 152              	.LVL13:
 153              		.loc 2 1866 30 view .LVU44
 154 0028 0EFA0CFC 		lsl	ip, lr, ip
 155              	.LVL14:
 156              		.loc 2 1866 30 view .LVU45
 157 002c 21EA0C01 		bic	r1, r1, ip
 158              	.LVL15:
 159              		.loc 2 1866 82 view .LVU46
 160 0030 9940     		lsls	r1, r1, r3
1867:../03_Drivers/CMSIS/Include/core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 161              		.loc 2 1867 30 view .LVU47
 162 0032 0EFA03F3 		lsl	r3, lr, r3
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 40


 163              	.LVL16:
 164              		.loc 2 1867 30 view .LVU48
 165 0036 22EA0303 		bic	r3, r2, r3
1866:../03_Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 166              		.loc 2 1866 102 view .LVU49
 167 003a 1943     		orrs	r1, r1, r3
 168              	.LVL17:
1866:../03_Drivers/CMSIS/Include/core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 169              		.loc 2 1866 102 view .LVU50
 170              	.LBE47:
 171              	.LBE46:
 172              	.LBB49:
 173              	.LBI49:
1809:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 174              		.loc 2 1809 22 is_stmt 1 view .LVU51
 175              	.LBB50:
1811:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 176              		.loc 2 1811 3 view .LVU52
1811:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 177              		.loc 2 1811 6 is_stmt 0 view .LVU53
 178 003c 0028     		cmp	r0, #0
 179 003e 0BDB     		blt	.L6
1813:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 180              		.loc 2 1813 5 is_stmt 1 view .LVU54
1813:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 181              		.loc 2 1813 48 is_stmt 0 view .LVU55
 182 0040 0901     		lsls	r1, r1, #4
 183              	.LVL18:
1813:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 184              		.loc 2 1813 48 view .LVU56
 185 0042 C9B2     		uxtb	r1, r1
1813:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 186              		.loc 2 1813 46 view .LVU57
 187 0044 00F16040 		add	r0, r0, #-536870912
 188              	.LVL19:
1813:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 189              		.loc 2 1813 46 view .LVU58
 190 0048 00F56140 		add	r0, r0, #57600
 191 004c 80F80013 		strb	r1, [r0, #768]
 192              	.LVL20:
 193              	.L4:
1813:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 194              		.loc 2 1813 46 view .LVU59
 195              	.LBE50:
 196              	.LBE49:
 196:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 197              		.loc 1 196 1 view .LVU60
 198 0050 5DF804FB 		ldr	pc, [sp], #4
 199              	.LVL21:
 200              	.L8:
 201              	.LBB52:
 202              	.LBB48:
1863:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 203              		.loc 2 1863 109 view .LVU61
 204 0054 0023     		movs	r3, #0
 205              	.LVL22:
1863:../03_Drivers/CMSIS/Include/core_cm4.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 41


 206              		.loc 2 1863 109 view .LVU62
 207 0056 E5E7     		b	.L5
 208              	.LVL23:
 209              	.L6:
1863:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 210              		.loc 2 1863 109 view .LVU63
 211              	.LBE48:
 212              	.LBE52:
 213              	.LBB53:
 214              	.LBB51:
1817:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 215              		.loc 2 1817 5 is_stmt 1 view .LVU64
1817:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 216              		.loc 2 1817 32 is_stmt 0 view .LVU65
 217 0058 00F00F00 		and	r0, r0, #15
 218              	.LVL24:
1817:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 219              		.loc 2 1817 48 view .LVU66
 220 005c 0901     		lsls	r1, r1, #4
 221              	.LVL25:
1817:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 222              		.loc 2 1817 48 view .LVU67
 223 005e C9B2     		uxtb	r1, r1
1817:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 224              		.loc 2 1817 46 view .LVU68
 225 0060 024B     		ldr	r3, .L10+4
 226 0062 1954     		strb	r1, [r3, r0]
 227              	.LVL26:
1817:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 228              		.loc 2 1817 46 view .LVU69
 229              	.LBE51:
 230              	.LBE53:
 231              		.loc 1 196 1 view .LVU70
 232 0064 F4E7     		b	.L4
 233              	.L11:
 234 0066 00BF     		.align	2
 235              	.L10:
 236 0068 00ED00E0 		.word	-536810240
 237 006c 14ED00E0 		.word	-536810220
 238              		.cfi_endproc
 239              	.LFE289:
 241              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 242              		.align	1
 243              		.global	HAL_NVIC_EnableIRQ
 244              		.syntax unified
 245              		.thumb
 246              		.thumb_func
 248              	HAL_NVIC_EnableIRQ:
 249              	.LVL27:
 250              	.LFB290:
 197:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 198:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 199:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable a device specific interrupt in the NVIC interrupt controller.
 200:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 201:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         function should be called before.
 202:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 203:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 42


 204:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 205:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 206:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 207:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 208:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 251              		.loc 1 208 1 is_stmt 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
 255              		@ link register save eliminated.
 209:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 210:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 256              		.loc 1 210 3 view .LVU72
 211:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 212:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable interrupt */
 213:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 257              		.loc 1 213 3 view .LVU73
 258              	.LBB56:
 259              	.LBI56:
1679:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 260              		.loc 2 1679 22 view .LVU74
 261              	.LBB57:
1681:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 262              		.loc 2 1681 3 view .LVU75
1681:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 263              		.loc 2 1681 6 is_stmt 0 view .LVU76
 264 0000 0028     		cmp	r0, #0
 265              	.LVL28:
1681:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 266              		.loc 2 1681 6 view .LVU77
 267 0002 07DB     		blt	.L12
1683:../03_Drivers/CMSIS/Include/core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 268              		.loc 2 1683 5 is_stmt 1 view .LVU78
1684:../03_Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 269              		.loc 2 1684 5 view .LVU79
1684:../03_Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 270              		.loc 2 1684 81 is_stmt 0 view .LVU80
 271 0004 00F01F02 		and	r2, r0, #31
1684:../03_Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 272              		.loc 2 1684 34 view .LVU81
 273 0008 4009     		lsrs	r0, r0, #5
1684:../03_Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 274              		.loc 2 1684 45 view .LVU82
 275 000a 0123     		movs	r3, #1
 276 000c 9340     		lsls	r3, r3, r2
1684:../03_Drivers/CMSIS/Include/core_cm4.h ****     __COMPILER_BARRIER();
 277              		.loc 2 1684 43 view .LVU83
 278 000e 024A     		ldr	r2, .L14
 279 0010 42F82030 		str	r3, [r2, r0, lsl #2]
1685:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 280              		.loc 2 1685 5 is_stmt 1 view .LVU84
 281              	.LVL29:
 282              	.L12:
1685:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 283              		.loc 2 1685 5 is_stmt 0 view .LVU85
 284              	.LBE57:
 285              	.LBE56:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 43


 214:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 286              		.loc 1 214 1 view .LVU86
 287 0014 7047     		bx	lr
 288              	.L15:
 289 0016 00BF     		.align	2
 290              	.L14:
 291 0018 00E100E0 		.word	-536813312
 292              		.cfi_endproc
 293              	.LFE290:
 295              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 296              		.align	1
 297              		.global	HAL_NVIC_DisableIRQ
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	HAL_NVIC_DisableIRQ:
 303              	.LVL30:
 304              	.LFB291:
 215:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 216:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 217:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable a device specific interrupt in the NVIC interrupt controller.
 218:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 219:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 220:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 221:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 222:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 223:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 224:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 305              		.loc 1 224 1 is_stmt 1 view -0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 225:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 226:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 310              		.loc 1 226 3 view .LVU88
 227:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 228:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable interrupt */
 229:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 311              		.loc 1 229 3 view .LVU89
 312              	.LBB64:
 313              	.LBI64:
1717:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 314              		.loc 2 1717 22 view .LVU90
 315              	.LBB65:
1719:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 316              		.loc 2 1719 3 view .LVU91
1719:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 317              		.loc 2 1719 6 is_stmt 0 view .LVU92
 318 0000 0028     		cmp	r0, #0
 319              	.LVL31:
1719:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 320              		.loc 2 1719 6 view .LVU93
 321 0002 0CDB     		blt	.L16
1721:../03_Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 322              		.loc 2 1721 5 is_stmt 1 view .LVU94
1721:../03_Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 44


 323              		.loc 2 1721 81 is_stmt 0 view .LVU95
 324 0004 00F01F02 		and	r2, r0, #31
1721:../03_Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 325              		.loc 2 1721 34 view .LVU96
 326 0008 4009     		lsrs	r0, r0, #5
1721:../03_Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 327              		.loc 2 1721 45 view .LVU97
 328 000a 0123     		movs	r3, #1
 329 000c 9340     		lsls	r3, r3, r2
1721:../03_Drivers/CMSIS/Include/core_cm4.h ****     __DSB();
 330              		.loc 2 1721 43 view .LVU98
 331 000e 2030     		adds	r0, r0, #32
 332 0010 034A     		ldr	r2, .L18
 333 0012 42F82030 		str	r3, [r2, r0, lsl #2]
1722:../03_Drivers/CMSIS/Include/core_cm4.h ****     __ISB();
 334              		.loc 2 1722 5 is_stmt 1 view .LVU99
 335              	.LBB66:
 336              	.LBI66:
 337              		.file 3 "../03_Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 45


  39:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 46


  96:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 47


 153:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 48


 210:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 49


 267:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 50


 324:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 51


 381:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 52


 438:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 441:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 53


 495:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 498:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 54


 552:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 555:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 55


 609:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 612:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 56


 666:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 669:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 57


 723:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 58


 780:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 783:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 59


 837:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 60


 894:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 338              		.loc 3 944 27 view .LVU100
 339              	.LBB67:
 945:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 340              		.loc 3 946 3 view .LVU101
 341              		.syntax unified
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 61


 342              	@ 946 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 343 0016 BFF34F8F 		dsb 0xF
 344              	@ 0 "" 2
 345              		.thumb
 346              		.syntax unified
 347              	.LBE67:
 348              	.LBE66:
1723:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 349              		.loc 2 1723 5 view .LVU102
 350              	.LBB68:
 351              	.LBI68:
 933:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 352              		.loc 3 933 27 view .LVU103
 353              	.LBB69:
 935:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 354              		.loc 3 935 3 view .LVU104
 355              		.syntax unified
 356              	@ 935 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 357 001a BFF36F8F 		isb 0xF
 358              	@ 0 "" 2
 359              	.LVL32:
 360              		.thumb
 361              		.syntax unified
 362              	.L16:
 935:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363              		.loc 3 935 3 is_stmt 0 view .LVU105
 364              	.LBE69:
 365              	.LBE68:
 366              	.LBE65:
 367              	.LBE64:
 230:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 368              		.loc 1 230 1 view .LVU106
 369 001e 7047     		bx	lr
 370              	.L19:
 371              		.align	2
 372              	.L18:
 373 0020 00E100E0 		.word	-536813312
 374              		.cfi_endproc
 375              	.LFE291:
 377              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 378              		.align	1
 379              		.global	HAL_NVIC_SystemReset
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	HAL_NVIC_SystemReset:
 385              	.LFB292:
 231:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 232:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 233:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initiate a system reset request to reset the MCU.
 234:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 235:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 236:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 237:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 386              		.loc 1 237 1 is_stmt 1 view -0
 387              		.cfi_startproc
 388              		@ Volatile: function does not return.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 62


 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 238:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* System Reset */
 239:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SystemReset();
 392              		.loc 1 239 3 view .LVU108
 393              	.LBB76:
 394              	.LBI76:
1868:../03_Drivers/CMSIS/Include/core_cm4.h ****          );
1869:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1870:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1871:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1872:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1873:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Decode Priority
1874:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Decodes an interrupt priority value with a given priority group to
1875:../03_Drivers/CMSIS/Include/core_cm4.h ****            preemptive priority value and subpriority value.
1876:../03_Drivers/CMSIS/Include/core_cm4.h ****            In case of a conflict between priority grouping and available
1877:../03_Drivers/CMSIS/Include/core_cm4.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1878:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1879:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1880:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1881:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1882:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1883:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1884:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1885:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1886:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
1887:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
1888:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1889:../03_Drivers/CMSIS/Include/core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
1890:../03_Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1891:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1892:../03_Drivers/CMSIS/Include/core_cm4.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1893:../03_Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1894:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1895:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1896:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1897:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1898:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Set Interrupt Vector
1899:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Sets an interrupt vector in SRAM based interrupt vector table.
1900:../03_Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1901:../03_Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1902:../03_Drivers/CMSIS/Include/core_cm4.h ****            VTOR must been relocated to SRAM before.
1903:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number
1904:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   vector    Address of interrupt handler function
1905:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1906:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE void __NVIC_SetVector(IRQn_Type IRQn, uint32_t vector)
1907:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1908:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1909:../03_Drivers/CMSIS/Include/core_cm4.h ****   (* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4)) = vector;
1910:../03_Drivers/CMSIS/Include/core_cm4.h ****   /* ARM Application Note 321 states that the M4 does not require the architectural barrier */
1911:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1912:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1913:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1914:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1915:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   Get Interrupt Vector
1916:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Reads an interrupt vector from interrupt vector table.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 63


1917:../03_Drivers/CMSIS/Include/core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1918:../03_Drivers/CMSIS/Include/core_cm4.h ****            or negative to specify a processor exception.
1919:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]   IRQn      Interrupt number.
1920:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return                 Address of interrupt handler function
1921:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1922:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetVector(IRQn_Type IRQn)
1923:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1924:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t vectors = (uint32_t )SCB->VTOR;
1925:../03_Drivers/CMSIS/Include/core_cm4.h ****   return (uint32_t)(* (int *) (vectors + ((int32_t)IRQn + NVIC_USER_IRQ_OFFSET) * 4));
1926:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1927:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1928:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1929:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1930:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Reset
1931:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Initiates a system reset request to reset the MCU.
1932:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1933:../03_Drivers/CMSIS/Include/core_cm4.h **** __NO_RETURN __STATIC_INLINE void __NVIC_SystemReset(void)
 395              		.loc 2 1933 34 view .LVU109
 396              	.LBB77:
1934:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1935:../03_Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure all outstanding memor
 397              		.loc 2 1935 3 view .LVU110
 398              	.LBB78:
 399              	.LBI78:
 944:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400              		.loc 3 944 27 view .LVU111
 401              	.LBB79:
 402              		.loc 3 946 3 view .LVU112
 403              		.syntax unified
 404              	@ 946 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 405 0000 BFF34F8F 		dsb 0xF
 406              	@ 0 "" 2
 407              		.thumb
 408              		.syntax unified
 409              	.LBE79:
 410              	.LBE78:
1936:../03_Drivers/CMSIS/Include/core_cm4.h ****                                                                        buffered write are completed
1937:../03_Drivers/CMSIS/Include/core_cm4.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
 411              		.loc 2 1937 3 view .LVU113
1938:../03_Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 412              		.loc 2 1938 32 is_stmt 0 view .LVU114
 413 0004 0549     		ldr	r1, .L22
 414 0006 CA68     		ldr	r2, [r1, #12]
 415              		.loc 2 1938 40 view .LVU115
 416 0008 02F4E062 		and	r2, r2, #1792
1937:../03_Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 417              		.loc 2 1937 17 view .LVU116
 418 000c 044B     		ldr	r3, .L22+4
 419 000e 1343     		orrs	r3, r3, r2
1937:../03_Drivers/CMSIS/Include/core_cm4.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 420              		.loc 2 1937 15 view .LVU117
 421 0010 CB60     		str	r3, [r1, #12]
1939:../03_Drivers/CMSIS/Include/core_cm4.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1940:../03_Drivers/CMSIS/Include/core_cm4.h ****   __DSB();                                                          /* Ensure completion of memory 
 422              		.loc 2 1940 3 is_stmt 1 view .LVU118
 423              	.LBB80:
 424              	.LBI80:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 64


 944:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425              		.loc 3 944 27 view .LVU119
 426              	.LBB81:
 427              		.loc 3 946 3 view .LVU120
 428              		.syntax unified
 429              	@ 946 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 430 0012 BFF34F8F 		dsb 0xF
 431              	@ 0 "" 2
 432              		.thumb
 433              		.syntax unified
 434              	.L21:
 435              	.LBE81:
 436              	.LBE80:
1941:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1942:../03_Drivers/CMSIS/Include/core_cm4.h ****   for(;;)                                                           /* wait until reset */
 437              		.loc 2 1942 3 view .LVU121
1943:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1944:../03_Drivers/CMSIS/Include/core_cm4.h ****     __NOP();
 438              		.loc 2 1944 5 view .LVU122
 439              		.syntax unified
 440              	@ 1944 "../03_Drivers/CMSIS/Include/core_cm4.h" 1
 441 0016 00BF     		nop
 442              	@ 0 "" 2
1942:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 443              		.loc 2 1942 8 view .LVU123
 444              		.thumb
 445              		.syntax unified
 446 0018 FDE7     		b	.L21
 447              	.L23:
 448 001a 00BF     		.align	2
 449              	.L22:
 450 001c 00ED00E0 		.word	-536810240
 451 0020 0400FA05 		.word	100270084
 452              	.LBE77:
 453              	.LBE76:
 454              		.cfi_endproc
 455              	.LFE292:
 457              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 458              		.align	1
 459              		.global	HAL_SYSTICK_Config
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 464              	HAL_SYSTICK_Config:
 465              	.LVL33:
 466              	.LFB293:
 240:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 241:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 242:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 243:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize the System Timer with interrupt enabled and start the System Tick Timer (Sys
 244:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 245:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 246:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 247:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                  - 1  Function failed.
 248:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 249:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 250:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 65


 467              		.loc 1 250 1 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471              		@ link register save eliminated.
 251:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 472              		.loc 1 251 4 view .LVU125
 473              	.LBB82:
 474              	.LBI82:
1945:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1946:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1947:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1948:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_NVICFunctions */
1949:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1950:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1951:../03_Drivers/CMSIS/Include/core_cm4.h **** /* ##########################  MPU functions  #################################### */
1952:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1953:../03_Drivers/CMSIS/Include/core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1954:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1955:../03_Drivers/CMSIS/Include/core_cm4.h **** #include "mpu_armv7.h"
1956:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1957:../03_Drivers/CMSIS/Include/core_cm4.h **** #endif
1958:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1959:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1960:../03_Drivers/CMSIS/Include/core_cm4.h **** /* ##########################  FPU functions  #################################### */
1961:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1962:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1963:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_FpuFunctions FPU Functions
1964:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Function that provides FPU type.
1965:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
1966:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1967:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1968:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1969:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   get FPU type
1970:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details returns the FPU type
1971:../03_Drivers/CMSIS/Include/core_cm4.h ****   \returns
1972:../03_Drivers/CMSIS/Include/core_cm4.h ****    - \b  0: No FPU
1973:../03_Drivers/CMSIS/Include/core_cm4.h ****    - \b  1: Single precision FPU
1974:../03_Drivers/CMSIS/Include/core_cm4.h ****    - \b  2: Double + Single precision FPU
1975:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
1976:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SCB_GetFPUType(void)
1977:../03_Drivers/CMSIS/Include/core_cm4.h **** {
1978:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t mvfr0;
1979:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1980:../03_Drivers/CMSIS/Include/core_cm4.h ****   mvfr0 = FPU->MVFR0;
1981:../03_Drivers/CMSIS/Include/core_cm4.h ****   if      ((mvfr0 & (FPU_MVFR0_Single_precision_Msk | FPU_MVFR0_Double_precision_Msk)) == 0x020U)
1982:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1983:../03_Drivers/CMSIS/Include/core_cm4.h ****     return 1U;           /* Single precision FPU */
1984:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1985:../03_Drivers/CMSIS/Include/core_cm4.h ****   else
1986:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
1987:../03_Drivers/CMSIS/Include/core_cm4.h ****     return 0U;           /* No FPU */
1988:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
1989:../03_Drivers/CMSIS/Include/core_cm4.h **** }
1990:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1991:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1992:../03_Drivers/CMSIS/Include/core_cm4.h **** /*@} end of CMSIS_Core_FpuFunctions */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 66


1993:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1994:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1995:../03_Drivers/CMSIS/Include/core_cm4.h **** 
1996:../03_Drivers/CMSIS/Include/core_cm4.h **** /* ##################################    SysTick function  ########################################
1997:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
1998:../03_Drivers/CMSIS/Include/core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1999:../03_Drivers/CMSIS/Include/core_cm4.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
2000:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief    Functions that configure the System.
2001:../03_Drivers/CMSIS/Include/core_cm4.h ****   @{
2002:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
2003:../03_Drivers/CMSIS/Include/core_cm4.h **** 
2004:../03_Drivers/CMSIS/Include/core_cm4.h **** #if defined (__Vendor_SysTickConfig) && (__Vendor_SysTickConfig == 0U)
2005:../03_Drivers/CMSIS/Include/core_cm4.h **** 
2006:../03_Drivers/CMSIS/Include/core_cm4.h **** /**
2007:../03_Drivers/CMSIS/Include/core_cm4.h ****   \brief   System Tick Configuration
2008:../03_Drivers/CMSIS/Include/core_cm4.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
2009:../03_Drivers/CMSIS/Include/core_cm4.h ****            Counter is in free running mode to generate periodic interrupts.
2010:../03_Drivers/CMSIS/Include/core_cm4.h ****   \param [in]  ticks  Number of ticks between two interrupts.
2011:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return          0  Function succeeded.
2012:../03_Drivers/CMSIS/Include/core_cm4.h ****   \return          1  Function failed.
2013:../03_Drivers/CMSIS/Include/core_cm4.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
2014:../03_Drivers/CMSIS/Include/core_cm4.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
2015:../03_Drivers/CMSIS/Include/core_cm4.h ****            must contain a vendor-specific implementation of this function.
2016:../03_Drivers/CMSIS/Include/core_cm4.h ****  */
2017:../03_Drivers/CMSIS/Include/core_cm4.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
 475              		.loc 2 2017 26 view .LVU126
 476              	.LBB83:
2018:../03_Drivers/CMSIS/Include/core_cm4.h **** {
2019:../03_Drivers/CMSIS/Include/core_cm4.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 477              		.loc 2 2019 3 view .LVU127
 478              		.loc 2 2019 14 is_stmt 0 view .LVU128
 479 0000 0138     		subs	r0, r0, #1
 480              	.LVL34:
 481              		.loc 2 2019 6 view .LVU129
 482 0002 B0F1807F 		cmp	r0, #16777216
 483 0006 0BD2     		bcs	.L26
2020:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
2021:../03_Drivers/CMSIS/Include/core_cm4.h ****     return (1UL);                                                   /* Reload value impossible */
2022:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
2023:../03_Drivers/CMSIS/Include/core_cm4.h **** 
2024:../03_Drivers/CMSIS/Include/core_cm4.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 484              		.loc 2 2024 3 is_stmt 1 view .LVU130
 485              		.loc 2 2024 18 is_stmt 0 view .LVU131
 486 0008 4FF0E023 		mov	r3, #-536813568
 487 000c 5861     		str	r0, [r3, #20]
2025:../03_Drivers/CMSIS/Include/core_cm4.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
 488              		.loc 2 2025 3 is_stmt 1 view .LVU132
 489              	.LVL35:
 490              	.LBB84:
 491              	.LBI84:
1809:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 492              		.loc 2 1809 22 view .LVU133
 493              	.LBB85:
1811:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 494              		.loc 2 1811 3 view .LVU134
1817:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 495              		.loc 2 1817 5 view .LVU135
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 67


1817:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 496              		.loc 2 1817 46 is_stmt 0 view .LVU136
 497 000e 054A     		ldr	r2, .L27
 498 0010 F021     		movs	r1, #240
 499 0012 82F82310 		strb	r1, [r2, #35]
 500              	.LVL36:
1817:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 501              		.loc 2 1817 46 view .LVU137
 502              	.LBE85:
 503              	.LBE84:
2026:../03_Drivers/CMSIS/Include/core_cm4.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 504              		.loc 2 2026 3 is_stmt 1 view .LVU138
 505              		.loc 2 2026 18 is_stmt 0 view .LVU139
 506 0016 0020     		movs	r0, #0
 507              	.LVL37:
 508              		.loc 2 2026 18 view .LVU140
 509 0018 9861     		str	r0, [r3, #24]
2027:../03_Drivers/CMSIS/Include/core_cm4.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 510              		.loc 2 2027 3 is_stmt 1 view .LVU141
 511              		.loc 2 2027 18 is_stmt 0 view .LVU142
 512 001a 0722     		movs	r2, #7
 513 001c 1A61     		str	r2, [r3, #16]
2028:../03_Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_TICKINT_Msk   |
2029:../03_Drivers/CMSIS/Include/core_cm4.h ****                    SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTi
2030:../03_Drivers/CMSIS/Include/core_cm4.h ****   return (0UL);                                                     /* Function successful */
 514              		.loc 2 2030 3 is_stmt 1 view .LVU143
 515              		.loc 2 2030 10 is_stmt 0 view .LVU144
 516 001e 7047     		bx	lr
 517              	.L26:
2021:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 518              		.loc 2 2021 12 view .LVU145
 519 0020 0120     		movs	r0, #1
 520              	.LVL38:
2021:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 521              		.loc 2 2021 12 view .LVU146
 522              	.LBE83:
 523              	.LBE82:
 252:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 524              		.loc 1 252 1 view .LVU147
 525 0022 7047     		bx	lr
 526              	.L28:
 527              		.align	2
 528              	.L27:
 529 0024 00ED00E0 		.word	-536810240
 530              		.cfi_endproc
 531              	.LFE293:
 533              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 534              		.align	1
 535              		.global	HAL_NVIC_GetPriorityGrouping
 536              		.syntax unified
 537              		.thumb
 538              		.thumb_func
 540              	HAL_NVIC_GetPriorityGrouping:
 541              	.LFB294:
 253:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 254:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @}
 255:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 68


 256:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 257:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /** @addtogroup CORTEX_Exported_Functions_Group2
 258:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *  @brief   Cortex control functions
 259:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  *
 260:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @verbatim
 261:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 262:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 263:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   ==============================================================================
 264:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     [..]
 265:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 266:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities.
 267:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 268:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 269:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** @endverbatim
 270:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @{
 271:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 272:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 273:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 274:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority grouping field from the NVIC Interrupt Controller.
 275:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 276:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 277:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 278:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 542              		.loc 1 278 1 is_stmt 1 view -0
 543              		.cfi_startproc
 544              		@ args = 0, pretend = 0, frame = 0
 545              		@ frame_needed = 0, uses_anonymous_args = 0
 546              		@ link register save eliminated.
 279:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 280:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 547              		.loc 1 280 3 view .LVU149
 548              	.LBB86:
 549              	.LBI86:
1667:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 550              		.loc 2 1667 26 view .LVU150
 551              	.LBB87:
1669:../03_Drivers/CMSIS/Include/core_cm4.h **** }
 552              		.loc 2 1669 3 view .LVU151
1669:../03_Drivers/CMSIS/Include/core_cm4.h **** }
 553              		.loc 2 1669 26 is_stmt 0 view .LVU152
 554 0000 024B     		ldr	r3, .L30
 555 0002 D868     		ldr	r0, [r3, #12]
 556              	.LBE87:
 557              	.LBE86:
 281:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 558              		.loc 1 281 1 view .LVU153
 559 0004 C0F30220 		ubfx	r0, r0, #8, #3
 560 0008 7047     		bx	lr
 561              	.L31:
 562 000a 00BF     		.align	2
 563              	.L30:
 564 000c 00ED00E0 		.word	-536810240
 565              		.cfi_endproc
 566              	.LFE294:
 568              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 569              		.align	1
 570              		.global	HAL_NVIC_GetPriority
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 69


 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 575              	HAL_NVIC_GetPriority:
 576              	.LVL39:
 577              	.LFB295:
 282:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 283:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 284:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get the priority of an interrupt.
 285:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn: External interrupt number.
 286:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 287:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 288:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 289:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 290:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bit for pre-emption priority,
 291:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      4 bits for subpriority
 292:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bit for pre-emption priority,
 293:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      3 bits for subpriority
 294:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority,
 295:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      2 bits for subpriority
 296:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority,
 297:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      1 bit for subpriority
 298:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority,
 299:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                                      0 bit for subpriority
 300:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 301:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 302:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 303:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 304:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t *pPreemptPriority, uint3
 305:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 578              		.loc 1 305 1 is_stmt 1 view -0
 579              		.cfi_startproc
 580              		@ args = 0, pretend = 0, frame = 0
 581              		@ frame_needed = 0, uses_anonymous_args = 0
 582              		.loc 1 305 1 is_stmt 0 view .LVU155
 583 0000 10B5     		push	{r4, lr}
 584              	.LCFI1:
 585              		.cfi_def_cfa_offset 8
 586              		.cfi_offset 4, -8
 587              		.cfi_offset 14, -4
 306:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 307:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 588              		.loc 1 307 3 is_stmt 1 view .LVU156
 308:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 309:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 589              		.loc 1 309 3 view .LVU157
 590              	.LVL40:
 591              	.LBB92:
 592              	.LBI92:
1831:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 593              		.loc 2 1831 26 view .LVU158
 594              	.LBB93:
1834:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 595              		.loc 2 1834 3 view .LVU159
1834:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 596              		.loc 2 1834 6 is_stmt 0 view .LVU160
 597 0002 0028     		cmp	r0, #0
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 70


 598              	.LVL41:
1834:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 599              		.loc 2 1834 6 view .LVU161
 600 0004 22DB     		blt	.L33
1836:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 601              		.loc 2 1836 5 is_stmt 1 view .LVU162
1836:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 602              		.loc 2 1836 31 is_stmt 0 view .LVU163
 603 0006 00F16040 		add	r0, r0, #-536870912
 604 000a 00F56140 		add	r0, r0, #57600
 605 000e 90F80003 		ldrb	r0, [r0, #768]	@ zero_extendqisi2
1836:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 606              		.loc 2 1836 64 view .LVU164
 607 0012 0009     		lsrs	r0, r0, #4
 608              	.L34:
 609              	.LVL42:
1836:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 610              		.loc 2 1836 64 view .LVU165
 611              	.LBE93:
 612              	.LBE92:
 613              	.LBB95:
 614              	.LBI95:
1883:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 615              		.loc 2 1883 22 is_stmt 1 view .LVU166
 616              	.LBB96:
1885:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 617              		.loc 2 1885 3 view .LVU167
1885:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t PreemptPriorityBits;
 618              		.loc 2 1885 12 is_stmt 0 view .LVU168
 619 0014 01F00701 		and	r1, r1, #7
 620              	.LVL43:
1886:../03_Drivers/CMSIS/Include/core_cm4.h ****   uint32_t SubPriorityBits;
 621              		.loc 2 1886 3 is_stmt 1 view .LVU169
1887:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 622              		.loc 2 1887 3 view .LVU170
1889:../03_Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 623              		.loc 2 1889 3 view .LVU171
1889:../03_Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 624              		.loc 2 1889 31 is_stmt 0 view .LVU172
 625 0018 C1F1070C 		rsb	ip, r1, #7
1889:../03_Drivers/CMSIS/Include/core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 626              		.loc 2 1889 23 view .LVU173
 627 001c BCF1040F 		cmp	ip, #4
 628 0020 28BF     		it	cs
 629 0022 4FF0040C 		movcs	ip, #4
 630              	.LVL44:
1890:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 631              		.loc 2 1890 3 is_stmt 1 view .LVU174
1890:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 632              		.loc 2 1890 44 is_stmt 0 view .LVU175
 633 0026 0C1D     		adds	r4, r1, #4
1890:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 634              		.loc 2 1890 109 view .LVU176
 635 0028 062C     		cmp	r4, #6
 636 002a 15D9     		bls	.L36
 637 002c 0339     		subs	r1, r1, #3
 638              	.LVL45:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 71


 639              	.L35:
1892:../03_Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 640              		.loc 2 1892 3 is_stmt 1 view .LVU177
1892:../03_Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 641              		.loc 2 1892 33 is_stmt 0 view .LVU178
 642 002e 20FA01F4 		lsr	r4, r0, r1
 643              	.LVL46:
1892:../03_Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 644              		.loc 2 1892 53 view .LVU179
 645 0032 4FF0FF3E 		mov	lr, #-1
 646 0036 0EFA0CFC 		lsl	ip, lr, ip
 647              	.LVL47:
1892:../03_Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 648              		.loc 2 1892 53 view .LVU180
 649 003a 24EA0C04 		bic	r4, r4, ip
1892:../03_Drivers/CMSIS/Include/core_cm4.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 650              		.loc 2 1892 21 view .LVU181
 651 003e 1460     		str	r4, [r2]
1893:../03_Drivers/CMSIS/Include/core_cm4.h **** }
 652              		.loc 2 1893 3 is_stmt 1 view .LVU182
1893:../03_Drivers/CMSIS/Include/core_cm4.h **** }
 653              		.loc 2 1893 53 is_stmt 0 view .LVU183
 654 0040 0EFA01F1 		lsl	r1, lr, r1
 655              	.LVL48:
1893:../03_Drivers/CMSIS/Include/core_cm4.h **** }
 656              		.loc 2 1893 53 view .LVU184
 657 0044 20EA0100 		bic	r0, r0, r1
 658              	.LVL49:
1893:../03_Drivers/CMSIS/Include/core_cm4.h **** }
 659              		.loc 2 1893 21 view .LVU185
 660 0048 1860     		str	r0, [r3]
 661              	.LVL50:
1893:../03_Drivers/CMSIS/Include/core_cm4.h **** }
 662              		.loc 2 1893 21 view .LVU186
 663              	.LBE96:
 664              	.LBE95:
 310:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 665              		.loc 1 310 1 view .LVU187
 666 004a 10BD     		pop	{r4, pc}
 667              	.LVL51:
 668              	.L33:
 669              	.LBB98:
 670              	.LBB94:
1840:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 671              		.loc 2 1840 5 is_stmt 1 view .LVU188
1840:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 672              		.loc 2 1840 50 is_stmt 0 view .LVU189
 673 004c 00F00F00 		and	r0, r0, #15
1840:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 674              		.loc 2 1840 31 view .LVU190
 675 0050 024C     		ldr	r4, .L38
 676 0052 205C     		ldrb	r0, [r4, r0]	@ zero_extendqisi2
1840:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 677              		.loc 2 1840 64 view .LVU191
 678 0054 0009     		lsrs	r0, r0, #4
 679 0056 DDE7     		b	.L34
 680              	.LVL52:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 72


 681              	.L36:
1840:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 682              		.loc 2 1840 64 view .LVU192
 683              	.LBE94:
 684              	.LBE98:
 685              	.LBB99:
 686              	.LBB97:
1890:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 687              		.loc 2 1890 109 view .LVU193
 688 0058 0021     		movs	r1, #0
 689              	.LVL53:
1890:../03_Drivers/CMSIS/Include/core_cm4.h **** 
 690              		.loc 2 1890 109 view .LVU194
 691 005a E8E7     		b	.L35
 692              	.L39:
 693              		.align	2
 694              	.L38:
 695 005c 14ED00E0 		.word	-536810220
 696              	.LBE97:
 697              	.LBE99:
 698              		.cfi_endproc
 699              	.LFE295:
 701              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 702              		.align	1
 703              		.global	HAL_NVIC_SetPendingIRQ
 704              		.syntax unified
 705              		.thumb
 706              		.thumb_func
 708              	HAL_NVIC_SetPendingIRQ:
 709              	.LVL54:
 710              	.LFB296:
 311:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 312:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 313:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Set Pending bit of an external interrupt.
 314:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 315:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 316:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 317:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 318:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 319:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 320:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 711              		.loc 1 320 1 is_stmt 1 view -0
 712              		.cfi_startproc
 713              		@ args = 0, pretend = 0, frame = 0
 714              		@ frame_needed = 0, uses_anonymous_args = 0
 715              		@ link register save eliminated.
 321:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 322:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 716              		.loc 1 322 3 view .LVU196
 323:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 324:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set interrupt pending */
 325:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 717              		.loc 1 325 3 view .LVU197
 718              	.LBB100:
 719              	.LBI100:
1755:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 720              		.loc 2 1755 22 view .LVU198
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 73


 721              	.LBB101:
1757:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 722              		.loc 2 1757 3 view .LVU199
1757:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 723              		.loc 2 1757 6 is_stmt 0 view .LVU200
 724 0000 0028     		cmp	r0, #0
 725              	.LVL55:
1757:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 726              		.loc 2 1757 6 view .LVU201
 727 0002 08DB     		blt	.L40
1759:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 728              		.loc 2 1759 5 is_stmt 1 view .LVU202
1759:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 729              		.loc 2 1759 81 is_stmt 0 view .LVU203
 730 0004 00F01F02 		and	r2, r0, #31
1759:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 731              		.loc 2 1759 34 view .LVU204
 732 0008 4009     		lsrs	r0, r0, #5
1759:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 733              		.loc 2 1759 45 view .LVU205
 734 000a 0123     		movs	r3, #1
 735 000c 9340     		lsls	r3, r3, r2
1759:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 736              		.loc 2 1759 43 view .LVU206
 737 000e 4030     		adds	r0, r0, #64
 738 0010 014A     		ldr	r2, .L42
 739 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 740              	.LVL56:
 741              	.L40:
1759:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 742              		.loc 2 1759 43 view .LVU207
 743              	.LBE101:
 744              	.LBE100:
 326:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 745              		.loc 1 326 1 view .LVU208
 746 0016 7047     		bx	lr
 747              	.L43:
 748              		.align	2
 749              	.L42:
 750 0018 00E100E0 		.word	-536813312
 751              		.cfi_endproc
 752              	.LFE296:
 754              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 755              		.align	1
 756              		.global	HAL_NVIC_GetPendingIRQ
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 761              	HAL_NVIC_GetPendingIRQ:
 762              	.LVL57:
 763              	.LFB297:
 327:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 328:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 329:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Get Pending Interrupt (read the pending register in the NVIC
 330:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         and return the pending bit for the specified interrupt).
 331:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 332:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be an enumerator of IRQn_Type enumeration
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 74


 333:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 334:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 335:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 336:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 337:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 338:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 764              		.loc 1 338 1 is_stmt 1 view -0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 339:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 340:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 769              		.loc 1 340 3 view .LVU210
 341:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 342:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 343:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 770              		.loc 1 343 3 view .LVU211
 771              	.LBB102:
 772              	.LBI102:
1736:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 773              		.loc 2 1736 26 view .LVU212
 774              	.LBB103:
1738:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 775              		.loc 2 1738 3 view .LVU213
1738:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 776              		.loc 2 1738 6 is_stmt 0 view .LVU214
 777 0000 0028     		cmp	r0, #0
 778              	.LVL58:
1738:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 779              		.loc 2 1738 6 view .LVU215
 780 0002 0BDB     		blt	.L46
1740:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 781              		.loc 2 1740 5 is_stmt 1 view .LVU216
1740:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 782              		.loc 2 1740 54 is_stmt 0 view .LVU217
 783 0004 4309     		lsrs	r3, r0, #5
1740:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 784              		.loc 2 1740 35 view .LVU218
 785 0006 4033     		adds	r3, r3, #64
 786 0008 054A     		ldr	r2, .L47
 787 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1740:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 788              		.loc 2 1740 91 view .LVU219
 789 000e 00F01F00 		and	r0, r0, #31
1740:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 790              		.loc 2 1740 103 view .LVU220
 791 0012 23FA00F0 		lsr	r0, r3, r0
1740:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 792              		.loc 2 1740 12 view .LVU221
 793 0016 00F00100 		and	r0, r0, #1
 794 001a 7047     		bx	lr
 795              	.L46:
1744:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 796              		.loc 2 1744 11 view .LVU222
 797 001c 0020     		movs	r0, #0
 798              	.LVL59:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 75


1744:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 799              		.loc 2 1744 11 view .LVU223
 800              	.LBE103:
 801              	.LBE102:
 344:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 802              		.loc 1 344 1 view .LVU224
 803 001e 7047     		bx	lr
 804              	.L48:
 805              		.align	2
 806              	.L47:
 807 0020 00E100E0 		.word	-536813312
 808              		.cfi_endproc
 809              	.LFE297:
 811              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 812              		.align	1
 813              		.global	HAL_NVIC_ClearPendingIRQ
 814              		.syntax unified
 815              		.thumb
 816              		.thumb_func
 818              	HAL_NVIC_ClearPendingIRQ:
 819              	.LVL60:
 820              	.LFB298:
 345:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 346:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 347:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Clear the pending bit of an external interrupt.
 348:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  IRQn External interrupt number.
 349:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 350:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 351:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 352:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 353:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 354:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 821              		.loc 1 354 1 is_stmt 1 view -0
 822              		.cfi_startproc
 823              		@ args = 0, pretend = 0, frame = 0
 824              		@ frame_needed = 0, uses_anonymous_args = 0
 825              		@ link register save eliminated.
 355:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 356:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 826              		.loc 1 356 3 view .LVU226
 357:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   
 358:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Clear pending interrupt */
 359:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
 827              		.loc 1 359 3 view .LVU227
 828              	.LBB104:
 829              	.LBI104:
1770:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 830              		.loc 2 1770 22 view .LVU228
 831              	.LBB105:
1772:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 832              		.loc 2 1772 3 view .LVU229
1772:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 833              		.loc 2 1772 6 is_stmt 0 view .LVU230
 834 0000 0028     		cmp	r0, #0
 835              	.LVL61:
1772:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 836              		.loc 2 1772 6 view .LVU231
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 76


 837 0002 08DB     		blt	.L49
1774:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 838              		.loc 2 1774 5 is_stmt 1 view .LVU232
1774:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 839              		.loc 2 1774 81 is_stmt 0 view .LVU233
 840 0004 00F01F02 		and	r2, r0, #31
1774:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 841              		.loc 2 1774 34 view .LVU234
 842 0008 4009     		lsrs	r0, r0, #5
1774:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 843              		.loc 2 1774 45 view .LVU235
 844 000a 0123     		movs	r3, #1
 845 000c 9340     		lsls	r3, r3, r2
1774:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 846              		.loc 2 1774 43 view .LVU236
 847 000e 6030     		adds	r0, r0, #96
 848 0010 014A     		ldr	r2, .L51
 849 0012 42F82030 		str	r3, [r2, r0, lsl #2]
 850              	.LVL62:
 851              	.L49:
1774:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 852              		.loc 2 1774 43 view .LVU237
 853              	.LBE105:
 854              	.LBE104:
 360:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 855              		.loc 1 360 1 view .LVU238
 856 0016 7047     		bx	lr
 857              	.L52:
 858              		.align	2
 859              	.L51:
 860 0018 00E100E0 		.word	-536813312
 861              		.cfi_endproc
 862              	.LFE298:
 864              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 865              		.align	1
 866              		.global	HAL_NVIC_GetActive
 867              		.syntax unified
 868              		.thumb
 869              		.thumb_func
 871              	HAL_NVIC_GetActive:
 872              	.LVL63:
 873              	.LFB299:
 361:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 362:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 363:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief Get active interrupt (read the active register in NVIC and return the active bit).
 364:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param IRQn External interrupt number
 365:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 366:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 367:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 368:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 369:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 370:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 371:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 874              		.loc 1 371 1 is_stmt 1 view -0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 0
 877              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 77


 878              		@ link register save eliminated.
 372:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 373:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 879              		.loc 1 373 3 view .LVU240
 880              	.LBB106:
 881              	.LBI106:
1787:../03_Drivers/CMSIS/Include/core_cm4.h **** {
 882              		.loc 2 1787 26 view .LVU241
 883              	.LBB107:
1789:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 884              		.loc 2 1789 3 view .LVU242
1789:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 885              		.loc 2 1789 6 is_stmt 0 view .LVU243
 886 0000 0028     		cmp	r0, #0
 887              	.LVL64:
1789:../03_Drivers/CMSIS/Include/core_cm4.h ****   {
 888              		.loc 2 1789 6 view .LVU244
 889 0002 0BDB     		blt	.L55
1791:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 890              		.loc 2 1791 5 is_stmt 1 view .LVU245
1791:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 891              		.loc 2 1791 54 is_stmt 0 view .LVU246
 892 0004 4309     		lsrs	r3, r0, #5
1791:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 893              		.loc 2 1791 35 view .LVU247
 894 0006 8033     		adds	r3, r3, #128
 895 0008 054A     		ldr	r2, .L56
 896 000a 52F82330 		ldr	r3, [r2, r3, lsl #2]
1791:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 897              		.loc 2 1791 91 view .LVU248
 898 000e 00F01F00 		and	r0, r0, #31
1791:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 899              		.loc 2 1791 103 view .LVU249
 900 0012 23FA00F0 		lsr	r0, r3, r0
1791:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 901              		.loc 2 1791 12 view .LVU250
 902 0016 00F00100 		and	r0, r0, #1
 903 001a 7047     		bx	lr
 904              	.L55:
1795:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 905              		.loc 2 1795 11 view .LVU251
 906 001c 0020     		movs	r0, #0
 907              	.LVL65:
1795:../03_Drivers/CMSIS/Include/core_cm4.h ****   }
 908              		.loc 2 1795 11 view .LVU252
 909              	.LBE107:
 910              	.LBE106:
 374:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 911              		.loc 1 374 1 view .LVU253
 912 001e 7047     		bx	lr
 913              	.L57:
 914              		.align	2
 915              	.L56:
 916 0020 00E100E0 		.word	-536813312
 917              		.cfi_endproc
 918              	.LFE299:
 920              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 78


 921              		.align	1
 922              		.global	HAL_SYSTICK_CLKSourceConfig
 923              		.syntax unified
 924              		.thumb
 925              		.thumb_func
 927              	HAL_SYSTICK_CLKSourceConfig:
 928              	.LVL66:
 929              	.LFB300:
 375:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 376:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 377:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Configure the SysTick clock source.
 378:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 379:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 380:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
 381:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 382:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 383:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 384:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 385:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 930              		.loc 1 385 1 is_stmt 1 view -0
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 0, uses_anonymous_args = 0
 934              		@ link register save eliminated.
 386:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 387:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 935              		.loc 1 387 3 view .LVU255
 388:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 936              		.loc 1 388 3 view .LVU256
 937              		.loc 1 388 6 is_stmt 0 view .LVU257
 938 0000 0428     		cmp	r0, #4
 939 0002 06D0     		beq	.L61
 389:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 390:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 391:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 392:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   else
 393:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 394:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 940              		.loc 1 394 5 is_stmt 1 view .LVU258
 941              		.loc 1 394 19 is_stmt 0 view .LVU259
 942 0004 4FF0E022 		mov	r2, #-536813568
 943 0008 1369     		ldr	r3, [r2, #16]
 944 000a 23F00403 		bic	r3, r3, #4
 945 000e 1361     		str	r3, [r2, #16]
 395:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 396:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 946              		.loc 1 396 1 view .LVU260
 947 0010 7047     		bx	lr
 948              	.L61:
 390:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 949              		.loc 1 390 5 is_stmt 1 view .LVU261
 390:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 950              		.loc 1 390 19 is_stmt 0 view .LVU262
 951 0012 4FF0E022 		mov	r2, #-536813568
 952 0016 1369     		ldr	r3, [r2, #16]
 953 0018 43F00403 		orr	r3, r3, #4
 954 001c 1361     		str	r3, [r2, #16]
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 79


 955 001e 7047     		bx	lr
 956              		.cfi_endproc
 957              	.LFE300:
 959              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 960              		.align	1
 961              		.weak	HAL_SYSTICK_Callback
 962              		.syntax unified
 963              		.thumb
 964              		.thumb_func
 966              	HAL_SYSTICK_Callback:
 967              	.LFB302:
 397:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 398:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 399:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Handle SYSTICK interrupt request.
 400:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 401:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 402:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
 403:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 404:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 405:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 406:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 407:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 408:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 409:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 410:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 411:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 412:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 968              		.loc 1 412 1 is_stmt 1 view -0
 969              		.cfi_startproc
 970              		@ args = 0, pretend = 0, frame = 0
 971              		@ frame_needed = 0, uses_anonymous_args = 0
 972              		@ link register save eliminated.
 413:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 414:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****             the HAL_SYSTICK_Callback could be implemented in the user file
 415:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****    */
 416:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 973              		.loc 1 416 1 view .LVU264
 974 0000 7047     		bx	lr
 975              		.cfi_endproc
 976              	.LFE302:
 978              		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 979              		.align	1
 980              		.global	HAL_SYSTICK_IRQHandler
 981              		.syntax unified
 982              		.thumb
 983              		.thumb_func
 985              	HAL_SYSTICK_IRQHandler:
 986              	.LFB301:
 403:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 987              		.loc 1 403 1 view -0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 0
 990              		@ frame_needed = 0, uses_anonymous_args = 0
 991 0000 08B5     		push	{r3, lr}
 992              	.LCFI2:
 993              		.cfi_def_cfa_offset 8
 994              		.cfi_offset 3, -8
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 80


 995              		.cfi_offset 14, -4
 404:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 996              		.loc 1 404 3 view .LVU266
 997 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 998              	.LVL67:
 405:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 999              		.loc 1 405 1 is_stmt 0 view .LVU267
 1000 0006 08BD     		pop	{r3, pc}
 1001              		.cfi_endproc
 1002              	.LFE301:
 1004              		.section	.text.HAL_MPU_Enable,"ax",%progbits
 1005              		.align	1
 1006              		.global	HAL_MPU_Enable
 1007              		.syntax unified
 1008              		.thumb
 1009              		.thumb_func
 1011              	HAL_MPU_Enable:
 1012              	.LVL68:
 1013              	.LFB303:
 417:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 418:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 419:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 420:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Enable the MPU.
 421:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Control: Specifies the control mode of the MPU during hard fault, 
 422:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          NMI, FAULTMASK and privileged accessto the default memory 
 423:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *          This parameter can be one of the following values:
 424:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF_NONE
 425:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HARDFAULT_NMI
 426:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_PRIVILEGED_DEFAULT
 427:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *            @arg MPU_HFNMI_PRIVDEF
 428:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 429:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 430:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_Enable(uint32_t MPU_Control)
 431:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1014              		.loc 1 431 1 is_stmt 1 view -0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 0
 1017              		@ frame_needed = 0, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 432:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Enable the MPU */
 433:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->CTRL = (MPU_Control | MPU_CTRL_ENABLE_Msk);
 1019              		.loc 1 433 3 view .LVU269
 1020              		.loc 1 433 28 is_stmt 0 view .LVU270
 1021 0000 40F00100 		orr	r0, r0, #1
 1022              	.LVL69:
 1023              		.loc 1 433 13 view .LVU271
 1024 0004 034B     		ldr	r3, .L66
 1025 0006 C3F89400 		str	r0, [r3, #148]
 434:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 435:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Ensure MPU setting take effects */
 436:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   __DSB();
 1026              		.loc 1 436 3 is_stmt 1 view .LVU272
 1027              	.LBB108:
 1028              	.LBI108:
 944:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1029              		.loc 3 944 27 view .LVU273
 1030              	.LBB109:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 81


 1031              		.loc 3 946 3 view .LVU274
 1032              		.syntax unified
 1033              	@ 946 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1034 000a BFF34F8F 		dsb 0xF
 1035              	@ 0 "" 2
 1036              		.thumb
 1037              		.syntax unified
 1038              	.LBE109:
 1039              	.LBE108:
 437:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   __ISB();
 1040              		.loc 1 437 3 view .LVU275
 1041              	.LBB110:
 1042              	.LBI110:
 933:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 1043              		.loc 3 933 27 view .LVU276
 1044              	.LBB111:
 935:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1045              		.loc 3 935 3 view .LVU277
 1046              		.syntax unified
 1047              	@ 935 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1048 000e BFF36F8F 		isb 0xF
 1049              	@ 0 "" 2
 1050              		.thumb
 1051              		.syntax unified
 1052              	.LBE111:
 1053              	.LBE110:
 438:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1054              		.loc 1 438 1 is_stmt 0 view .LVU278
 1055 0012 7047     		bx	lr
 1056              	.L67:
 1057              		.align	2
 1058              	.L66:
 1059 0014 00ED00E0 		.word	-536810240
 1060              		.cfi_endproc
 1061              	.LFE303:
 1063              		.section	.text.HAL_MPU_Disable,"ax",%progbits
 1064              		.align	1
 1065              		.global	HAL_MPU_Disable
 1066              		.syntax unified
 1067              		.thumb
 1068              		.thumb_func
 1070              	HAL_MPU_Disable:
 1071              	.LFB304:
 439:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 440:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 441:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 442:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Disable the MPU.
 443:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 444:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 445:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_Disable(void)
 446:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1072              		.loc 1 446 1 is_stmt 1 view -0
 1073              		.cfi_startproc
 1074              		@ args = 0, pretend = 0, frame = 0
 1075              		@ frame_needed = 0, uses_anonymous_args = 0
 1076              		@ link register save eliminated.
 447:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Make sure outstanding transfers are done */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 82


 448:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   __DMB();
 1077              		.loc 1 448 3 view .LVU280
 1078              	.LBB112:
 1079              	.LBI112:
 947:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 1080              		.loc 3 955 27 view .LVU281
 1081              	.LBB113:
 956:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 1082              		.loc 3 957 3 view .LVU282
 1083              		.syntax unified
 1084              	@ 957 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1085 0000 BFF35F8F 		dmb 0xF
 1086              	@ 0 "" 2
 1087              		.thumb
 1088              		.syntax unified
 1089              	.LBE113:
 1090              	.LBE112:
 449:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 450:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Disable the MPU and clear the control register*/
 451:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->CTRL  = 0;
 1091              		.loc 1 451 3 view .LVU283
 1092              		.loc 1 451 14 is_stmt 0 view .LVU284
 1093 0004 024B     		ldr	r3, .L69
 1094 0006 0022     		movs	r2, #0
 1095 0008 C3F89420 		str	r2, [r3, #148]
 452:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1096              		.loc 1 452 1 view .LVU285
 1097 000c 7047     		bx	lr
 1098              	.L70:
 1099 000e 00BF     		.align	2
 1100              	.L69:
 1101 0010 00ED00E0 		.word	-536810240
 1102              		.cfi_endproc
 1103              	.LFE304:
 1105              		.section	.text.HAL_MPU_ConfigRegion,"ax",%progbits
 1106              		.align	1
 1107              		.global	HAL_MPU_ConfigRegion
 1108              		.syntax unified
 1109              		.thumb
 1110              		.thumb_func
 1112              	HAL_MPU_ConfigRegion:
 1113              	.LVL70:
 1114              	.LFB305:
 453:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 454:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 455:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** /**
 456:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @brief  Initialize and configure the Region and the memory to be protected.
 457:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @param  MPU_Init: Pointer to a MPU_Region_InitTypeDef structure that contains
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 83


 458:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   *                the initialization and configuration information.
 459:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   * @retval None
 460:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   */
 461:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 462:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** {
 1115              		.loc 1 462 1 is_stmt 1 view -0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 0
 1118              		@ frame_needed = 0, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
 463:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Check the parameters */
 464:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 1120              		.loc 1 464 3 view .LVU287
 465:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 1121              		.loc 1 465 3 view .LVU288
 466:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 467:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   /* Set the Region number */
 468:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 1122              		.loc 1 468 3 view .LVU289
 1123              		.loc 1 468 22 is_stmt 0 view .LVU290
 1124 0000 4278     		ldrb	r2, [r0, #1]	@ zero_extendqisi2
 1125              		.loc 1 468 12 view .LVU291
 1126 0002 164B     		ldr	r3, .L74
 1127 0004 C3F89820 		str	r2, [r3, #152]
 469:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 470:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 1128              		.loc 1 470 3 is_stmt 1 view .LVU292
 1129              		.loc 1 470 16 is_stmt 0 view .LVU293
 1130 0008 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1131              		.loc 1 470 6 view .LVU294
 1132 000a FBB1     		cbz	r3, .L72
 471:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 472:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     /* Check the parameters */
 473:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 1133              		.loc 1 473 5 is_stmt 1 view .LVU295
 474:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 1134              		.loc 1 474 5 view .LVU296
 475:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 1135              		.loc 1 475 5 view .LVU297
 476:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
 1136              		.loc 1 476 5 view .LVU298
 477:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 1137              		.loc 1 477 5 view .LVU299
 478:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 1138              		.loc 1 478 5 view .LVU300
 479:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 1139              		.loc 1 479 5 view .LVU301
 480:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 1140              		.loc 1 480 5 view .LVU302
 481:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** 
 482:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 1141              		.loc 1 482 5 view .LVU303
 1142              		.loc 1 482 25 is_stmt 0 view .LVU304
 1143 000c 4368     		ldr	r3, [r0, #4]
 1144              		.loc 1 482 15 view .LVU305
 1145 000e 134A     		ldr	r2, .L74
 1146 0010 C2F89C30 		str	r3, [r2, #156]
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 84


 483:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1147              		.loc 1 483 5 is_stmt 1 view .LVU306
 1148              		.loc 1 483 36 is_stmt 0 view .LVU307
 1149 0014 017B     		ldrb	r1, [r0, #12]	@ zero_extendqisi2
 484:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1150              		.loc 1 484 36 view .LVU308
 1151 0016 C37A     		ldrb	r3, [r0, #11]	@ zero_extendqisi2
 1152              		.loc 1 484 57 view .LVU309
 1153 0018 1B06     		lsls	r3, r3, #24
 483:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec        << MPU_RASR_XN_Pos)   |
 1154              		.loc 1 483 79 view .LVU310
 1155 001a 43EA0173 		orr	r3, r3, r1, lsl #28
 485:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 1156              		.loc 1 485 36 view .LVU311
 1157 001e 817A     		ldrb	r1, [r0, #10]	@ zero_extendqisi2
 484:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1158              		.loc 1 484 79 view .LVU312
 1159 0020 43EAC143 		orr	r3, r3, r1, lsl #19
 486:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 1160              		.loc 1 486 36 view .LVU313
 1161 0024 417B     		ldrb	r1, [r0, #13]	@ zero_extendqisi2
 485:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField       << MPU_RASR_TEX_Pos)  |
 1162              		.loc 1 485 79 view .LVU314
 1163 0026 43EA8143 		orr	r3, r3, r1, lsl #18
 487:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 1164              		.loc 1 487 36 view .LVU315
 1165 002a 817B     		ldrb	r1, [r0, #14]	@ zero_extendqisi2
 486:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable        << MPU_RASR_S_Pos)    |
 1166              		.loc 1 486 79 view .LVU316
 1167 002c 43EA4143 		orr	r3, r3, r1, lsl #17
 488:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 1168              		.loc 1 488 36 view .LVU317
 1169 0030 C17B     		ldrb	r1, [r0, #15]	@ zero_extendqisi2
 487:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable        << MPU_RASR_C_Pos)    |
 1170              		.loc 1 487 79 view .LVU318
 1171 0032 43EA0143 		orr	r3, r3, r1, lsl #16
 489:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 1172              		.loc 1 489 36 view .LVU319
 1173 0036 417A     		ldrb	r1, [r0, #9]	@ zero_extendqisi2
 488:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable       << MPU_RASR_B_Pos)    |
 1174              		.loc 1 488 79 view .LVU320
 1175 0038 43EA0123 		orr	r3, r3, r1, lsl #8
 490:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 1176              		.loc 1 490 36 view .LVU321
 1177 003c 017A     		ldrb	r1, [r0, #8]	@ zero_extendqisi2
 489:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable   << MPU_RASR_SRD_Pos)  |
 1178              		.loc 1 489 79 view .LVU322
 1179 003e 43EA4103 		orr	r3, r3, r1, lsl #1
 491:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable             << MPU_RASR_ENABLE_Pos);
 1180              		.loc 1 491 36 view .LVU323
 1181 0042 0178     		ldrb	r1, [r0]	@ zero_extendqisi2
 490:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size               << MPU_RASR_SIZE_Pos) |
 1182              		.loc 1 490 79 view .LVU324
 1183 0044 0B43     		orrs	r3, r3, r1
 483:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission   << MPU_RASR_AP_Pos)   |
 1184              		.loc 1 483 15 view .LVU325
 1185 0046 C2F8A030 		str	r3, [r2, #160]
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 85


 1186 004a 7047     		bx	lr
 1187              	.L72:
 492:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 493:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   else
 494:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   {
 495:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 1188              		.loc 1 495 5 is_stmt 1 view .LVU326
 1189              		.loc 1 495 15 is_stmt 0 view .LVU327
 1190 004c 034B     		ldr	r3, .L74
 1191 004e 0022     		movs	r2, #0
 1192 0050 C3F89C20 		str	r2, [r3, #156]
 496:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****     MPU->RASR = 0x00;
 1193              		.loc 1 496 5 is_stmt 1 view .LVU328
 1194              		.loc 1 496 15 is_stmt 0 view .LVU329
 1195 0054 C3F8A020 		str	r2, [r3, #160]
 497:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c ****   }
 498:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_cortex.c **** }
 1196              		.loc 1 498 1 view .LVU330
 1197 0058 7047     		bx	lr
 1198              	.L75:
 1199 005a 00BF     		.align	2
 1200              	.L74:
 1201 005c 00ED00E0 		.word	-536810240
 1202              		.cfi_endproc
 1203              	.LFE305:
 1205              		.text
 1206              	.Letext0:
 1207              		.file 4 "../03_Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1208              		.file 5 "c:\\gnuarm\\arm-none-eabi\\include\\machine\\_default_types.h"
 1209              		.file 6 "c:\\gnuarm\\arm-none-eabi\\include\\sys\\_stdint.h"
 1210              		.file 7 "../03_Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 1211              		.file 8 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_cortex.h"
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s 			page 86


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_cortex.c
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:20     .text.HAL_NVIC_SetPriorityGrouping:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:26     .text.HAL_NVIC_SetPriorityGrouping:00000000 HAL_NVIC_SetPriorityGrouping
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:82     .text.HAL_NVIC_SetPriorityGrouping:00000020 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:87     .text.HAL_NVIC_SetPriority:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:93     .text.HAL_NVIC_SetPriority:00000000 HAL_NVIC_SetPriority
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:236    .text.HAL_NVIC_SetPriority:00000068 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:242    .text.HAL_NVIC_EnableIRQ:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:248    .text.HAL_NVIC_EnableIRQ:00000000 HAL_NVIC_EnableIRQ
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:291    .text.HAL_NVIC_EnableIRQ:00000018 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:296    .text.HAL_NVIC_DisableIRQ:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:302    .text.HAL_NVIC_DisableIRQ:00000000 HAL_NVIC_DisableIRQ
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:373    .text.HAL_NVIC_DisableIRQ:00000020 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:378    .text.HAL_NVIC_SystemReset:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:384    .text.HAL_NVIC_SystemReset:00000000 HAL_NVIC_SystemReset
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:450    .text.HAL_NVIC_SystemReset:0000001c $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:458    .text.HAL_SYSTICK_Config:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:464    .text.HAL_SYSTICK_Config:00000000 HAL_SYSTICK_Config
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:529    .text.HAL_SYSTICK_Config:00000024 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:534    .text.HAL_NVIC_GetPriorityGrouping:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:540    .text.HAL_NVIC_GetPriorityGrouping:00000000 HAL_NVIC_GetPriorityGrouping
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:564    .text.HAL_NVIC_GetPriorityGrouping:0000000c $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:569    .text.HAL_NVIC_GetPriority:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:575    .text.HAL_NVIC_GetPriority:00000000 HAL_NVIC_GetPriority
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:695    .text.HAL_NVIC_GetPriority:0000005c $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:702    .text.HAL_NVIC_SetPendingIRQ:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:708    .text.HAL_NVIC_SetPendingIRQ:00000000 HAL_NVIC_SetPendingIRQ
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:750    .text.HAL_NVIC_SetPendingIRQ:00000018 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:755    .text.HAL_NVIC_GetPendingIRQ:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:761    .text.HAL_NVIC_GetPendingIRQ:00000000 HAL_NVIC_GetPendingIRQ
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:807    .text.HAL_NVIC_GetPendingIRQ:00000020 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:812    .text.HAL_NVIC_ClearPendingIRQ:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:818    .text.HAL_NVIC_ClearPendingIRQ:00000000 HAL_NVIC_ClearPendingIRQ
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:860    .text.HAL_NVIC_ClearPendingIRQ:00000018 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:865    .text.HAL_NVIC_GetActive:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:871    .text.HAL_NVIC_GetActive:00000000 HAL_NVIC_GetActive
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:916    .text.HAL_NVIC_GetActive:00000020 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:921    .text.HAL_SYSTICK_CLKSourceConfig:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:927    .text.HAL_SYSTICK_CLKSourceConfig:00000000 HAL_SYSTICK_CLKSourceConfig
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:960    .text.HAL_SYSTICK_Callback:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:966    .text.HAL_SYSTICK_Callback:00000000 HAL_SYSTICK_Callback
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:979    .text.HAL_SYSTICK_IRQHandler:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:985    .text.HAL_SYSTICK_IRQHandler:00000000 HAL_SYSTICK_IRQHandler
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:1005   .text.HAL_MPU_Enable:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:1011   .text.HAL_MPU_Enable:00000000 HAL_MPU_Enable
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:1059   .text.HAL_MPU_Enable:00000014 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:1064   .text.HAL_MPU_Disable:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:1070   .text.HAL_MPU_Disable:00000000 HAL_MPU_Disable
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:1101   .text.HAL_MPU_Disable:00000010 $d
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:1106   .text.HAL_MPU_ConfigRegion:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:1112   .text.HAL_MPU_ConfigRegion:00000000 HAL_MPU_ConfigRegion
C:\Users\minde\AppData\Local\Temp\ccmuXnZm.s:1201   .text.HAL_MPU_ConfigRegion:0000005c $d

NO UNDEFINED SYMBOLS
