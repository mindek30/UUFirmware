ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_adc_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_ADCEx_Calibration_Start,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_ADCEx_Calibration_Start
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_ADCEx_Calibration_Start:
  27              	.LVL0:
  28              	.LFB288:
  29              		.file 1 "../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c"
   1:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
   2:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
   3:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @file    stm32l4xx_hal_adc_ex.c
   4:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @author  MCD Application Team
   5:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief   This file provides firmware functions to manage the following
   6:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          functionalities of the Analog to Digital Converter (ADC)
   7:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          peripheral:
   8:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           + Peripheral Control functions
   9:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          Other functions (generic functions) are available in file
  10:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          "stm32l4xx_hal_adc.c".
  11:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  12:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
  13:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @attention
  14:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  15:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * Copyright (c) 2017 STMicroelectronics.
  16:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * All rights reserved.
  17:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  18:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  19:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * in the root directory of this software component.
  20:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  21:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  22:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
  23:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   @verbatim
  24:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   [..]
  25:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   (@) Sections "ADC peripheral features" and "How to use this driver" are
  26:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       available in file of generic functions "stm32l4xx_hal_adc.c".
  27:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   [..]
  28:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   @endverbatim
  29:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ******************************************************************************
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 2


  30:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  31:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  32:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Includes ------------------------------------------------------------------*/
  33:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #include "stm32l4xx_hal.h"
  34:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  35:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @addtogroup STM32L4xx_HAL_Driver
  36:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  37:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  38:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  39:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx ADCEx
  40:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief ADC Extended HAL module driver
  41:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  42:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  43:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  44:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #ifdef HAL_ADC_MODULE_ENABLED
  45:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  46:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  47:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private define ------------------------------------------------------------*/
  48:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  49:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Private_Constants ADC Extended Private Constants
  50:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  51:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  52:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  53:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #define ADC_JSQR_FIELDS  ((ADC_JSQR_JL | ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN |\
  54:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ1  | ADC_JSQR_JSQ2 |\
  55:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                            ADC_JSQR_JSQ3 | ADC_JSQR_JSQ4 ))  /*!< ADC_JSQR fields of parameters tha
  56:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  57:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Fixed timeout value for ADC calibration.                                   */
  58:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Values defined to be higher than worst cases: maximum ratio between ADC    */
  59:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* and CPU clock frequencies.                                                 */
  60:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Example of profile low frequency : ADC frequency at 31.25kHz (ADC clock    */
  61:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* source PLL SAI 8MHz, ADC clock prescaler 256), CPU frequency 80MHz.        */
  62:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Calibration time max = 116 / fADC (refer to datasheet)                     */
  63:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /*                      = 296 960 CPU cycles                                  */
  64:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #define ADC_CALIBRATION_TIMEOUT         (296960UL)   /*!< ADC calibration time-out value (unit: CPU
  65:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  66:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
  67:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @}
  68:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  69:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  70:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private macro -------------------------------------------------------------*/
  71:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private variables ---------------------------------------------------------*/
  72:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  73:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /* Exported functions --------------------------------------------------------*/
  74:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  75:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions ADC Extended Exported Functions
  76:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
  77:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
  78:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  79:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group1 Extended Input and Output operation functions
  80:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief    Extended IO operation functions
  81:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
  82:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @verbatim
  83:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
  84:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       ##### IO operation functions #####
  85:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
  86:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 3


  87:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  88:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Perform the ADC self-calibration for single or differential ending.
  89:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Get calibration factors for single or differential ending.
  90:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Set calibration factors for single or differential ending.
  91:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  92:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected.
  93:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected.
  94:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Poll for conversion complete on ADC group injected.
  95:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Get result of ADC group injected channel conversion.
  96:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Start conversion of ADC group injected and enable interruptions.
  97:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Stop conversion of ADC group injected and disable interruptions.
  98:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
  99:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) When multimode feature is available, start multimode and enable DMA transfer.
 100:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Stop multimode and disable ADC DMA transfer.
 101:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Get result of multimode conversion.
 102:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 103:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @endverbatim
 104:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
 105:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 106:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 107:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 108:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Perform an ADC automatic self-calibration
 109:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Calibration prerequisite: ADC must be disabled (execute this
 110:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function before HAL_ADC_Start() or after HAL_ADC_Stop() ).
 111:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param  hadc       ADC handle
 112:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param  SingleDiff Selection of single-ended or differential input
 113:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         This parameter can be one of the following values:
 114:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 115:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 116:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 117:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 118:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_Start(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 119:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
  30              		.loc 1 119 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 8
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		.loc 1 119 1 is_stmt 0 view .LVU1
  35 0000 30B5     		push	{r4, r5, lr}
  36              	.LCFI0:
  37              		.cfi_def_cfa_offset 12
  38              		.cfi_offset 4, -12
  39              		.cfi_offset 5, -8
  40              		.cfi_offset 14, -4
  41 0002 83B0     		sub	sp, sp, #12
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 24
 120:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
  44              		.loc 1 120 3 is_stmt 1 view .LVU2
 121:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0UL;
  45              		.loc 1 121 3 view .LVU3
  46              		.loc 1 121 17 is_stmt 0 view .LVU4
  47 0004 0023     		movs	r3, #0
  48 0006 0193     		str	r3, [sp, #4]
 122:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 123:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 124:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 4


  49              		.loc 1 124 3 is_stmt 1 view .LVU5
 125:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
  50              		.loc 1 125 3 view .LVU6
 126:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 127:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 128:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
  51              		.loc 1 128 3 view .LVU7
  52              		.loc 1 128 3 view .LVU8
  53 0008 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
  54 000c 012B     		cmp	r3, #1
  55 000e 41D0     		beq	.L8
  56 0010 0446     		mov	r4, r0
  57 0012 0D46     		mov	r5, r1
  58              		.loc 1 128 3 discriminator 2 view .LVU9
  59 0014 0123     		movs	r3, #1
  60 0016 80F85030 		strb	r3, [r0, #80]
  61              		.loc 1 128 3 discriminator 2 view .LVU10
 129:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 130:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Calibration prerequisite: ADC must be disabled. */
 131:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 132:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable the ADC (if not already disabled) */
 133:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_Disable(hadc);
  62              		.loc 1 133 3 discriminator 2 view .LVU11
  63              		.loc 1 133 20 is_stmt 0 discriminator 2 view .LVU12
  64 001a FFF7FEFF 		bl	ADC_Disable
  65              	.LVL1:
 134:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 135:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check if ADC is effectively disabled */
 136:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
  66              		.loc 1 136 3 is_stmt 1 discriminator 2 view .LVU13
  67              		.loc 1 136 6 is_stmt 0 discriminator 2 view .LVU14
  68 001e 80BB     		cbnz	r0, .L3
 137:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 138:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state */
 139:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
  69              		.loc 1 139 5 is_stmt 1 view .LVU15
  70 0020 636D     		ldr	r3, [r4, #84]
  71 0022 23F48853 		bic	r3, r3, #4352
  72 0026 23F00203 		bic	r3, r3, #2
  73 002a 43F00203 		orr	r3, r3, #2
  74 002e 6365     		str	r3, [r4, #84]
 140:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 141:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL);
 142:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 143:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start ADC calibration in mode single-ended or differential */
 144:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_StartCalibration(hadc->Instance, SingleDiff);
  75              		.loc 1 144 5 view .LVU16
  76 0030 2268     		ldr	r2, [r4]
  77              	.LVL2:
  78              	.LBB230:
  79              	.LBI230:
  80              		.file 2 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h"
   1:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
   2:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   3:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @file    stm32l4xx_ll_adc.h
   4:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @author  MCD Application Team
   5:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief   Header file of ADC LL module.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 5


   6:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
   7:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @attention
   8:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
   9:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * Copyright (c) 2017 STMicroelectronics.
  10:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * All rights reserved.
  11:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  12:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * This software is licensed under terms that can be found in the LICENSE file
  13:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * in the root directory of this software component.
  14:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
  16:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ******************************************************************************
  17:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  18:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  19:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Define to prevent recursive inclusion -------------------------------------*/
  20:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifndef STM32L4xx_LL_ADC_H
  21:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define STM32L4xx_LL_ADC_H
  22:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  23:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #ifdef __cplusplus
  24:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** extern "C" {
  25:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
  26:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  27:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Includes ------------------------------------------------------------------*/
  28:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #include "stm32l4xx.h"
  29:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  30:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @addtogroup STM32L4xx_LL_Driver
  31:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  32:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  33:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  34:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) || defined (ADC2) || defined (ADC3)
  35:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  36:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL ADC
  37:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  38:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  39:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  40:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private types -------------------------------------------------------------*/
  41:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private variables ---------------------------------------------------------*/
  42:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  43:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private constants ---------------------------------------------------------*/
  44:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Constants ADC Private Constants
  45:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
  46:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
  47:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  48:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular sequencer:                             */
  49:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_RANK_x the relevant bits for:            */
  50:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer register offset                                                */
  51:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  52:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  53:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group regular sequencer configuration */
  54:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  55:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR1_REGOFFSET                 (0x00000000UL)
  56:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR2_REGOFFSET                 (0x00000100UL)
  57:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR3_REGOFFSET                 (0x00000200UL)
  58:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQR4_REGOFFSET                 (0x00000300UL)
  59:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  60:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_SQRX_REGOFFSET_MASK        (ADC_SQR1_REGOFFSET | ADC_SQR2_REGOFFSET \
  61:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_SQR3_REGOFFSET | ADC_SQR4_REGOFFSET)
  62:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SQRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_SQRx_REGOFFSET in ADC_REG_
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 6


  63:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_ID_SQRX_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
  64:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  65:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular sequencer bits information to be inserted  */
  66:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group regular sequencer ranks literals definition.                */
  67:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_1_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR1_SQ1" po
  68:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_2_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR1_SQ2" po
  69:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_3_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR1_SQ3" po
  70:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_4_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR1_SQ4" po
  71:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_5_SQRX_BITOFFSET_POS  ( 0UL) /* Value equivalent to bitfield "ADC_SQR2_SQ5" po
  72:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_6_SQRX_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_SQR2_SQ6" po
  73:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_7_SQRX_BITOFFSET_POS  (12UL) /* Value equivalent to bitfield "ADC_SQR2_SQ7" po
  74:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_8_SQRX_BITOFFSET_POS  (18UL) /* Value equivalent to bitfield "ADC_SQR2_SQ8" po
  75:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_9_SQRX_BITOFFSET_POS  (24UL) /* Value equivalent to bitfield "ADC_SQR2_SQ9" po
  76:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_10_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR3_SQ10" p
  77:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_11_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR3_SQ11" p
  78:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_12_SQRX_BITOFFSET_POS (12UL) /* Value equivalent to bitfield "ADC_SQR3_SQ12" p
  79:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_13_SQRX_BITOFFSET_POS (18UL) /* Value equivalent to bitfield "ADC_SQR3_SQ13" p
  80:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_14_SQRX_BITOFFSET_POS (24UL) /* Value equivalent to bitfield "ADC_SQR3_SQ14" p
  81:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_15_SQRX_BITOFFSET_POS ( 0UL) /* Value equivalent to bitfield "ADC_SQR4_SQ15" p
  82:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_RANK_16_SQRX_BITOFFSET_POS ( 6UL) /* Value equivalent to bitfield "ADC_SQR4_SQ16" p
  83:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  84:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  85:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  86:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected sequencer:                            */
  87:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_RANK_x the relevant bits for:            */
  88:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - data register offset                                                     */
  89:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - sequencer rank bits position into the selected register                  */
  90:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  91:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC group injected data register */
  92:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
  93:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR1_REGOFFSET                 (0x00000000UL)
  94:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR2_REGOFFSET                 (0x00000100UL)
  95:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR3_REGOFFSET                 (0x00000200UL)
  96:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDR4_REGOFFSET                 (0x00000300UL)
  97:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
  98:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_JDRX_REGOFFSET_MASK        (ADC_JDR1_REGOFFSET | ADC_JDR2_REGOFFSET \
  99:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_JDR3_REGOFFSET | ADC_JDR4_REGOFFSET)
 100:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_ID_JSQR_MASK          (ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0)
 101:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_JDRX_REGOFFSET_POS             (8UL) /* Position of bits ADC_JDRx_REGOFFSET in ADC_INJ_
 102:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 103:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected sequencer bits information to be inserted */
 104:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* into ADC group injected sequencer ranks literals definition.               */
 105:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_1_JSQR_BITOFFSET_POS  ( 8UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ1" p
 106:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_2_JSQR_BITOFFSET_POS  (14UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ2" p
 107:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_3_JSQR_BITOFFSET_POS  (20UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ3" p
 108:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_RANK_4_JSQR_BITOFFSET_POS  (26UL) /* Value equivalent to bitfield "ADC_JSQR_JSQ4" p
 109:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 110:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 111:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 112:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group regular trigger:                               */
 113:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_REG_TRIG_x the relevant bits for:            */
 114:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger source                                                   */
 115:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - regular trigger edge                                                     */
 116:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXT_EDGE_DEFAULT       (ADC_CFGR_EXTEN_0) /* Trigger edge set to rising edge (
 117:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 118:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 119:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 7


 120:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 121:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_SOURCE_MASK            (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTSEL) << (4U *
 122:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 123:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 124:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_CFGR_EXTSEL)                            << (4U *
 125:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 126:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 127:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 128:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 129:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EDGE_MASK              (((LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN) << (4U * 
 130:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 131:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 132:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_REG_TRIG_EXT_EDGE_DEFAULT)             << (4U * 
 133:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 134:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group regular trigger bits information.                  */
 135:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTSEL_BITOFFSET_POS  ( 6UL) /* Value equivalent to bitfield "ADC_CFGR_EXTSEL"
 136:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_REG_TRIG_EXTEN_BITOFFSET_POS   (10UL) /* Value equivalent to bitfield "ADC_CFGR_EXTEN" 
 137:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 138:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 139:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 140:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC group injected trigger:                              */
 141:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_INJ_TRIG_x the relevant bits for:            */
 142:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger source                                                  */
 143:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - injected trigger edge                                                    */
 144:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXT_EDGE_DEFAULT      (ADC_JSQR_JEXTEN_0) /* Trigger edge set to rising edge (
 145:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 146:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger source masks for each of possible                  */
 147:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 148:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 149:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_SOURCE_MASK            (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTSEL)  << (4U
 150:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 151:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 152:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_JSQR_JEXTSEL)                             << (4U
 153:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 154:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Mask containing trigger edge masks for each of possible                    */
 155:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* trigger edge selection duplicated with shifts [0; 4; 8; 12]                */
 156:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* corresponding to {SW start; ext trigger; ext trigger; ext trigger}.        */
 157:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EDGE_MASK              (((LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN) << (4U *
 158:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 159:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 160:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((ADC_INJ_TRIG_EXT_EDGE_DEFAULT)              << (4U *
 161:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 162:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of ADC group injected trigger bits information.                 */
 163:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTSEL_BITOFFSET_POS  ( 2UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTSEL
 164:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_INJ_TRIG_EXTEN_BITOFFSET_POS   ( 6UL) /* Value equivalent to bitfield "ADC_JSQR_JEXTEN"
 165:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 166:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 167:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 168:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 169:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 171:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC channel:                                             */
 172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literal LL_ADC_CHANNEL_x the relevant bits for:             */
 173:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by number                                     */
 174:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel identifier defined by bitfield                                   */
 175:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel differentiation between external channels (connected to          */
 176:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   GPIO pins) and internal channels (connected to internal paths)           */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 8


 177:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - channel sampling time defined by SMPRx register offset                   */
 178:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   and SMPx bits positions into SMPRx register                              */
 179:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK         (ADC_CFGR_AWD1CH)
 180:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_BITFIELD_MASK       (ADC_AWD2CR_AWD2CH)
 181:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS (26UL)/* Value equivalent to bitfield "ADC_CHANNEL_ID_N
 182:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_MASK                (ADC_CHANNEL_ID_NUMBER_MASK | ADC_CHANNEL_ID_BITFIELD_MA
 183:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_CHANNEL_ID_INTERNAL_CH_MASK)
 184:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Equivalent mask of ADC_CHANNEL_NUMBER_MASK aligned on register LSB (bit 0) */
 185:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 (ADC_SQR2_SQ5) /* Equivalent to shift: (ADC_CHANNEL_NUMB
 186:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 187:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Channel differentiation between external and internal channels */
 188:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH         (0x80000000UL) /* Marker of internal channel */
 189:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_2       (0x00080000UL) /* Marker of internal channel for other A
 190:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_ID_INTERNAL_CH_MASK    (ADC_CHANNEL_ID_INTERNAL_CH | ADC_CHANNEL_ID_INTERNAL_CH
 191:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 192:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC channel sampling time configuration */
 193:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (offset placed into a spare area of literal definition) */
 194:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR1_REGOFFSET                (0x00000000UL)
 195:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPR2_REGOFFSET                (0x02000000UL)
 196:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPRX_REGOFFSET_MASK   (ADC_SMPR1_REGOFFSET | ADC_SMPR2_REGOFFSET)
 197:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SMPRX_REGOFFSET_POS            (25UL) /* Position of bits ADC_SMPRx_REGOFFSET in ADC_CH
 198:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 199:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_MASK    (0x01F00000UL)
 200:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_SMPx_BITOFFSET_POS     (20UL)           /* Value equivalent to bitfield "ADC_CH
 201:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 202:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID number information to be inserted into           */
 203:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 204:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_NUMBER               (0x00000000UL)
 205:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_NUMBER               (ADC_CFGR_AWD1CH_0)
 206:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_NUMBER               (ADC_CFGR_AWD1CH_1)
 207:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_NUMBER               (ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 208:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_NUMBER               (ADC_CFGR_AWD1CH_2)
 209:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_0)
 210:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1)
 211:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_NUMBER               (ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 212:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_NUMBER               (ADC_CFGR_AWD1CH_3)
 213:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_NUMBER               (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_0)
 214:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1)
 215:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH
 216:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2)
 217:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 218:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | ADC_CFGR_AWD1CH
 219:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_NUMBER              (ADC_CFGR_AWD1CH_3 | ADC_CFGR_AWD1CH_2 | \
 220:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             ADC_CFGR_AWD1CH_1 | ADC_CFGR_AWD1CH_0)
 221:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_NUMBER              (ADC_CFGR_AWD1CH_4)
 222:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_0)
 223:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_NUMBER              (ADC_CFGR_AWD1CH_4 | ADC_CFGR_AWD1CH_1)
 224:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 225:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels ID bitfield information to be inserted into         */
 226:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 227:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_BITFIELD             (ADC_AWD2CR_AWD2CH_0)
 228:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_BITFIELD             (ADC_AWD2CR_AWD2CH_1)
 229:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_BITFIELD             (ADC_AWD2CR_AWD2CH_2)
 230:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_BITFIELD             (ADC_AWD2CR_AWD2CH_3)
 231:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_BITFIELD             (ADC_AWD2CR_AWD2CH_4)
 232:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_BITFIELD             (ADC_AWD2CR_AWD2CH_5)
 233:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_BITFIELD             (ADC_AWD2CR_AWD2CH_6)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 9


 234:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_BITFIELD             (ADC_AWD2CR_AWD2CH_7)
 235:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_BITFIELD             (ADC_AWD2CR_AWD2CH_8)
 236:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_BITFIELD             (ADC_AWD2CR_AWD2CH_9)
 237:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_BITFIELD            (ADC_AWD2CR_AWD2CH_10)
 238:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_BITFIELD            (ADC_AWD2CR_AWD2CH_11)
 239:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_BITFIELD            (ADC_AWD2CR_AWD2CH_12)
 240:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_BITFIELD            (ADC_AWD2CR_AWD2CH_13)
 241:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_BITFIELD            (ADC_AWD2CR_AWD2CH_14)
 242:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_BITFIELD            (ADC_AWD2CR_AWD2CH_15)
 243:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_BITFIELD            (ADC_AWD2CR_AWD2CH_16)
 244:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_BITFIELD            (ADC_AWD2CR_AWD2CH_17)
 245:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_BITFIELD            (ADC_AWD2CR_AWD2CH_18)
 246:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 247:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Definition of channels sampling time information to be inserted into       */
 248:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* channels literals definition.                                              */
 249:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_0_SMP                  (ADC_SMPR1_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_1_SMP                  (ADC_SMPR1_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 251:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_2_SMP                  (ADC_SMPR1_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 252:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_3_SMP                  (ADC_SMPR1_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 253:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_4_SMP                  (ADC_SMPR1_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 254:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_5_SMP                  (ADC_SMPR1_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 255:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_6_SMP                  (ADC_SMPR1_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 256:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_7_SMP                  (ADC_SMPR1_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 257:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_8_SMP                  (ADC_SMPR1_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 258:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_9_SMP                  (ADC_SMPR1_REGOFFSET | ((27UL) << ADC_CHANNEL_SMPx_BITOF
 259:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_10_SMP                 (ADC_SMPR2_REGOFFSET | (( 0UL) << ADC_CHANNEL_SMPx_BITOF
 260:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_11_SMP                 (ADC_SMPR2_REGOFFSET | (( 3UL) << ADC_CHANNEL_SMPx_BITOF
 261:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_12_SMP                 (ADC_SMPR2_REGOFFSET | (( 6UL) << ADC_CHANNEL_SMPx_BITOF
 262:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_13_SMP                 (ADC_SMPR2_REGOFFSET | (( 9UL) << ADC_CHANNEL_SMPx_BITOF
 263:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_14_SMP                 (ADC_SMPR2_REGOFFSET | ((12UL) << ADC_CHANNEL_SMPx_BITOF
 264:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_15_SMP                 (ADC_SMPR2_REGOFFSET | ((15UL) << ADC_CHANNEL_SMPx_BITOF
 265:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_16_SMP                 (ADC_SMPR2_REGOFFSET | ((18UL) << ADC_CHANNEL_SMPx_BITOF
 266:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_17_SMP                 (ADC_SMPR2_REGOFFSET | ((21UL) << ADC_CHANNEL_SMPx_BITOF
 267:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CHANNEL_18_SMP                 (ADC_SMPR2_REGOFFSET | ((24UL) << ADC_CHANNEL_SMPx_BITOF
 268:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 269:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 270:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC mode single or differential ended:                   */
 271:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_SINGLE_ENDED or LL_ADC_SINGLE_DIFFERENTIAL  */
 272:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* the relevant bits for:                                                     */
 273:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different registers)               */
 274:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC calibration: calibration start, calibration factor get or set        */
 275:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - ADC channels: set each ADC channel ending mode                           */
 276:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_START_MASK    (ADC_CR_ADCALDIF)
 277:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_FACTOR_MASK   (ADC_CALFACT_CALFACT_D | ADC_CALFACT_CALFACT_S)
 278:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_MASK        (ADC_CHANNEL_ID_BITFIELD_MASK) /* Equivalent to ADC_DIFS
 279:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CHANNEL_SHIFT_MASK  (ADC_CALFACT_CALFACT_S_4 | ADC_CALFACT_CALFACT_S_3) /* B
 280:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK   (0x00010000UL)                           /* Selection o
 281:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_POS    (16UL)                                   /* Selection o
 282:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_SINGLEDIFF_CALIB_F_BIT_D_SHIFT4 (ADC_SINGLEDIFF_CALIB_F_BIT_D_POS - 4UL) /* Shift of bi
 283:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 284:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC analog watchdog:                                     */
 285:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* To select into literals LL_ADC_AWD_CHANNELx_xxx the relevant bits for:     */
 286:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (concatenation of multiple bits used in different analog watchdogs,        */
 287:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (feature of several watchdogs not available on all STM32 families)).       */
 288:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 1: monitored channel defined by number,                  */
 289:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection of ADC group (ADC groups regular and-or injected).             */
 290:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* - analog watchdog 2 and 3: monitored channel defined by bitfield, no       */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 10


 291:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*   selection on groups.                                                     */
 292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 293:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog channel configuration */
 294:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_REGOFFSET              (0x00000000UL)
 295:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR2_REGOFFSET              (0x00100000UL)
 296:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR3_REGOFFSET              (0x00200000UL)
 297:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 298:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Register offset gap between AWD1 and AWD2-AWD3 configuration registers */
 299:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* (Set separately as ADC_AWD_CRX_REGOFFSET to spare 32 bits space */
 300:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_MASK     (ADC_AWD2CR_AWD2CH_0)
 301:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR12_REGOFFSETGAP_VAL      (0x00000024UL)
 302:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 303:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_MASK         (ADC_AWD_CR1_REGOFFSET | ADC_AWD_CR2_REGOFFSET | ADC_AWD
 304:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 305:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR1_CHANNEL_MASK           (ADC_CFGR_AWD1CH | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | 
 306:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR23_CHANNEL_MASK          (ADC_AWD2CR_AWD2CH)
 307:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CR_ALL_CHANNEL_MASK        (ADC_AWD_CR1_CHANNEL_MASK | ADC_AWD_CR23_CHANNEL_MASK)
 308:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 309:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_CRX_REGOFFSET_POS          (20UL) /* Position of bits ADC_AWD_CRx_REGOFFSET in ADC_
 310:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 311:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC analog watchdog threshold configuration */
 312:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR1_REGOFFSET              (ADC_AWD_CR1_REGOFFSET)
 313:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR2_REGOFFSET              (ADC_AWD_CR2_REGOFFSET)
 314:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TR3_REGOFFSET              (ADC_AWD_CR3_REGOFFSET)
 315:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_MASK         (ADC_AWD_TR1_REGOFFSET | ADC_AWD_TR2_REGOFFSET | ADC_AWD
 316:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_REGOFFSET_POS          (ADC_AWD_CRX_REGOFFSET_POS)     /* Position of bits ADC_
 317:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_MASK          (0x00010000UL)                   /* Selection of 1 bit t
 318:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_POS           (16UL)                           /* Selection of 1 bit t
 319:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_AWD_TRX_BIT_HIGH_SHIFT4        (ADC_AWD_TRX_BIT_HIGH_POS - 4UL) /* Shift of bit ADC_AWD
 320:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 321:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal mask for ADC offset:                                              */
 322:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal register offset for ADC offset number configuration */
 323:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR1_REGOFFSET                 (0x00000000UL)
 324:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR2_REGOFFSET                 (0x00000001UL)
 325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR3_REGOFFSET                 (0x00000002UL)
 326:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFR4_REGOFFSET                 (0x00000003UL)
 327:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_OFRx_REGOFFSET_MASK            (ADC_OFR1_REGOFFSET | ADC_OFR2_REGOFFSET \
 328:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                             | ADC_OFR3_REGOFFSET | ADC_OFR4_REGOFFSET)
 329:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 330:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 331:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits positions */
 332:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_RES_BITOFFSET_POS         ( 3UL) /* Value equivalent to bitfield "ADC_CFGR_RES" po
 333:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1SGL_BITOFFSET_POS     (22UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1SGL
 334:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_AWD1EN_BITOFFSET_POS      (23UL) /* Value equivalent to bitfield "ADC_CFGR_AWD1EN"
 335:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CFGR_JAWD1EN_BITOFFSET_POS     (24UL) /* Value equivalent to bitfield "ADC_CFGR_JAWD1EN
 336:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_TR1_HT1_BITOFFSET_POS          (16UL) /* Value equivalent to bitfield "ADC_TR1_HT1" pos
 337:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 339:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC registers bits groups */
 340:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define ADC_CR_BITS_PROPERTY_RS            (ADC_CR_ADCAL | ADC_CR_JADSTP | ADC_CR_ADSTP | ADC_CR_JA
 341:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 342:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 343:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* ADC internal channels related definitions */
 344:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Internal voltage reference VrefInt */
 345:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_ADDR                   ((uint16_t*) (0x1FFF75AAUL)) /* Internal voltage referen
 346:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define VREFINT_CAL_VREF                   ( 3000UL)                    /* Analog voltage reference
 347:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Temperature sensor */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 11


 348:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_ADDR               ((uint16_t*) (0x1FFF75A8UL)) /* Internal temperature sen
 349:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_ADDR               ((uint16_t*) (0x1FFF75CAUL)) /* Internal temperature sen
 350:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL1_TEMP               (( int32_t)   30L)           /* Internal temperature sen
 351:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32L485xx
 352:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (110L)                       /* Internal temperature sen
 353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
 354:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL2_TEMP               (130L)                       /* Internal temperature sen
 355:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (STM32L471xx) || defined (STM32L475xx) || defined (STM32L476xx) || defined (STM32
 356:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define TEMPSENSOR_CAL_VREFANALOG          (3000UL)                     /* Analog voltage reference
 357:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 358:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 359:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 360:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 361:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 362:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 363:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Private macros ------------------------------------------------------------*/
 364:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Private_Macros ADC Private Macros
 365:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 366:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 367:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 368:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 369:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Driver macro reserved for internal use: set a pointer to
 370:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a register from a register basis from which an offset
 371:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is applied.
 372:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register basis from which the offset is applied.
 373:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG_OFFFSET__ Offset to be applied (unit: number of registers).
 374:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Pointer to register address
 375:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 376:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __ADC_PTR_REG_OFFSET(__REG__, __REG_OFFFSET__)                         \
 377:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__IO uint32_t *)((uint32_t) ((uint32_t)(&(__REG__)) + ((__REG_OFFFSET__) << 2UL))))
 378:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 379:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 380:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 381:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 382:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 383:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 384:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported types ------------------------------------------------------------*/
 385:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(USE_FULL_LL_DRIVER)
 386:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_ES_INIT ADC Exported Init structure
 387:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 388:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 389:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 390:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 391:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC common parameters
 392:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and multimode
 393:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (all ADC instances belonging to the same ADC common instance).
 394:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_CommonInit()
 395:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC instances state (all ADC instances
 396:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sharing the same ADC common instance):
 397:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances sharing the same ADC common instance must be
 398:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         disabled.
 399:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 400:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 401:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 402:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t CommonClock;                 /*!< Set parameter common to several ADC: Clock source and 
 403:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_COMMON
 404:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, if ADC group injected is u
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 12


 405:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    clock ratio constraints between ADC clock and AH
 406:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    must be respected. Refer to reference manual.
 407:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 408:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 409:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 410:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 411:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Multimode;                   /*!< Set ADC multimode configuration to operate in independ
 412:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 413:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 414:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 415:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 416:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiDMATransfer;            /*!< Set ADC multimode conversion data transfer: no transfe
 417:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 418:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 419:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 420:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 421:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t MultiTwoSamplingDelay;       /*!< Set ADC multimode delay between 2 sampling phases.
 422:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_MULTI_
 423:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 424:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 425:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 426:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 427:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_CommonInitTypeDef;
 428:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 429:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 430:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC instance.
 431:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC instance.
 432:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Affects both group regular and group injected (availability
 433:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of ADC group injected depends on STM32 families).
 434:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 435:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Instance .
 436:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_Init()
 437:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 438:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 439:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 440:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 441:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 442:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 443:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 444:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 445:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 446:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 447:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 448:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 449:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 450:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 451:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Resolution;                  /*!< Set ADC resolution.
 452:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_RESOLU
 453:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 454:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 455:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 456:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DataAlignment;               /*!< Set ADC conversion data alignment.
 457:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_DATA_A
 458:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 459:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 460:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 461:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t LowPowerMode;                /*!< Set ADC low power mode.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 13


 462:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_LP_MOD
 463:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 464:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 465:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 466:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_InitTypeDef;
 467:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 468:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 469:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group regular.
 470:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group regular.
 471:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 472:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 473:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "REG").
 474:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_REG_Init()
 475:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 476:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 477:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 478:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 479:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 480:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 481:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 482:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 483:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 484:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 485:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 486:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 487:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 488:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 489:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group regular conversion trigger source: inter
 490:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_TR
 491:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 492:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 493:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 494:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 495:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 496:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 497:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group regular sequencer length.
 498:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 499:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 500:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 501:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 502:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group regular sequencer discontinuous mode: se
 503:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_SE
 504:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group regul
 505:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 506:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 507:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 508:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 509:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ContinuousMode;              /*!< Set ADC continuous conversion mode on ADC group regula
 510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_CO
 511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: It is not possible to enable both ADC group regu
 512:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 513:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 514:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 515:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t DMATransfer;                 /*!< Set ADC group regular conversion data transfer: no tra
 516:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_DM
 517:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 518:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 14


 519:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 520:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t Overrun;                     /*!< Set ADC group regular behavior in case of overrun:
 521:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              data preserved or overwritten.
 522:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_REG_OV
 523:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 524:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 525:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 526:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_REG_InitTypeDef;
 527:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 528:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 529:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Structure definition of some features of ADC group injected.
 530:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These parameters have an impact on ADC scope: ADC group injected.
 531:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to corresponding unitary functions into
 532:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref ADC_LL_EF_Configuration_ADC_Group_Regular
 533:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions with prefix "INJ").
 534:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The setting of these parameters by function @ref LL_ADC_INJ_Init()
 535:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is conditioned to ADC state:
 536:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance must be disabled.
 537:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This condition is applied to all ADC features, for efficiency
 538:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and compatibility over all STM32 families. However, the different
 539:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         features can be set under different ADC state conditions
 540:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (setting possible with ADC enabled without conversion on going,
 541:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC enabled with conversion on going, ...)
 542:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Each feature can be updated afterwards with a unitary function
 543:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and potentially with ADC in a different state than disabled,
 544:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         refer to description of each function for setting
 545:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         conditioned to ADC state.
 546:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 547:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** typedef struct
 548:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 549:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TriggerSource;               /*!< Set ADC group injected conversion trigger source: inte
 550:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 551:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note On this STM32 series, setting trigger source to 
 552:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (default setting for compatibility with some ADC
 553:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    In case of need to modify trigger edge, use func
 554:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 555:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 556:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 557:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerLength;             /*!< Set ADC group injected sequencer length.
 558:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 559:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 560:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 561:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 562:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t SequencerDiscont;            /*!< Set ADC group injected sequencer discontinuous mode: s
 563:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_SE
 564:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              @note This parameter has an effect only if group injec
 565:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    (scan length of 2 ranks or more).
 566:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 567:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 568:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 569:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t TrigAuto;                    /*!< Set ADC group injected conversion trigger: independent
 570:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This parameter can be a value of @ref ADC_LL_EC_INJ_TR
 571:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              Note: This parameter must be set to set to independent
 572:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 573:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              This feature can be modified afterwards using unitary 
 574:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 575:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** } LL_ADC_INJ_InitTypeDef;
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 15


 576:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 577:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 578:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 579:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 580:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* USE_FULL_LL_DRIVER */
 581:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 582:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported constants --------------------------------------------------------*/
 583:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Constants ADC Exported Constants
 584:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 585:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 586:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 587:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_FLAG ADC flags
 588:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    Flags defines which can be used with LL_ADC_ReadReg function
 589:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 590:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 591:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY                  ADC_ISR_ADRDY      /*!< ADC flag ADC instance ready */
 592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC                    ADC_ISR_EOC        /*!< ADC flag ADC group regular end o
 593:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS                    ADC_ISR_EOS        /*!< ADC flag ADC group regular end o
 594:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR                    ADC_ISR_OVR        /*!< ADC flag ADC group regular overr
 595:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP                  ADC_ISR_EOSMP      /*!< ADC flag ADC group regular end o
 596:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC                   ADC_ISR_JEOC       /*!< ADC flag ADC group injected end 
 597:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS                   ADC_ISR_JEOS       /*!< ADC flag ADC group injected end 
 598:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF                  ADC_ISR_JQOVF      /*!< ADC flag ADC group injected cont
 599:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1                   ADC_ISR_AWD1       /*!< ADC flag ADC analog watchdog 1 *
 600:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2                   ADC_ISR_AWD2       /*!< ADC flag ADC analog watchdog 2 *
 601:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3                   ADC_ISR_AWD3       /*!< ADC flag ADC analog watchdog 3 *
 602:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 603:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_MST              ADC_CSR_ADRDY_MST  /*!< ADC flag ADC multimode master in
 604:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_ADRDY_SLV              ADC_CSR_ADRDY_SLV  /*!< ADC flag ADC multimode slave ins
 605:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_MST                ADC_CSR_EOC_MST    /*!< ADC flag ADC multimode master gr
 606:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOC_SLV                ADC_CSR_EOC_SLV    /*!< ADC flag ADC multimode slave gro
 607:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_MST                ADC_CSR_EOS_MST    /*!< ADC flag ADC multimode master gr
 608:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOS_SLV                ADC_CSR_EOS_SLV    /*!< ADC flag ADC multimode slave gro
 609:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_MST                ADC_CSR_OVR_MST    /*!< ADC flag ADC multimode master gr
 610:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_OVR_SLV                ADC_CSR_OVR_SLV    /*!< ADC flag ADC multimode slave gro
 611:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_MST              ADC_CSR_EOSMP_MST  /*!< ADC flag ADC multimode master gr
 612:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_EOSMP_SLV              ADC_CSR_EOSMP_SLV  /*!< ADC flag ADC multimode slave gro
 613:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_MST               ADC_CSR_JEOC_MST   /*!< ADC flag ADC multimode master gr
 614:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOC_SLV               ADC_CSR_JEOC_SLV   /*!< ADC flag ADC multimode slave gro
 615:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_MST               ADC_CSR_JEOS_MST   /*!< ADC flag ADC multimode master gr
 616:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JEOS_SLV               ADC_CSR_JEOS_SLV   /*!< ADC flag ADC multimode slave gro
 617:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_MST              ADC_CSR_JQOVF_MST  /*!< ADC flag ADC multimode master gr
 618:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_JQOVF_SLV              ADC_CSR_JQOVF_SLV  /*!< ADC flag ADC multimode slave gro
 619:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_MST               ADC_CSR_AWD1_MST   /*!< ADC flag ADC multimode master an
 620:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD1_SLV               ADC_CSR_AWD1_SLV   /*!< ADC flag ADC multimode slave ana
 621:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_MST               ADC_CSR_AWD2_MST   /*!< ADC flag ADC multimode master an
 622:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD2_SLV               ADC_CSR_AWD2_SLV   /*!< ADC flag ADC multimode slave ana
 623:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_MST               ADC_CSR_AWD3_MST   /*!< ADC flag ADC multimode master an
 624:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_FLAG_AWD3_SLV               ADC_CSR_AWD3_SLV   /*!< ADC flag ADC multimode slave ana
 625:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 626:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 627:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 628:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 629:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 630:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_IT ADC interruptions for configuration (interruption enable or disable)
 631:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief    IT defines which can be used with LL_ADC_ReadReg and  LL_ADC_WriteReg functions
 632:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 16


 633:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 634:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_ADRDY                    ADC_IER_ADRDYIE    /*!< ADC interruption ADC instance re
 635:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOC                      ADC_IER_EOCIE      /*!< ADC interruption ADC group regul
 636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOS                      ADC_IER_EOSIE      /*!< ADC interruption ADC group regul
 637:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_OVR                      ADC_IER_OVRIE      /*!< ADC interruption ADC group regul
 638:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_EOSMP                    ADC_IER_EOSMPIE    /*!< ADC interruption ADC group regul
 639:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOC                     ADC_IER_JEOCIE     /*!< ADC interruption ADC group injec
 640:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JEOS                     ADC_IER_JEOSIE     /*!< ADC interruption ADC group injec
 641:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_JQOVF                    ADC_IER_JQOVFIE    /*!< ADC interruption ADC group injec
 642:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD1                     ADC_IER_AWD1IE     /*!< ADC interruption ADC analog watc
 643:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD2                     ADC_IER_AWD2IE     /*!< ADC interruption ADC analog watc
 644:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_IT_AWD3                     ADC_IER_AWD3IE     /*!< ADC interruption ADC analog watc
 645:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 646:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 647:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 648:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 649:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REGISTERS  ADC registers compliant with specific purpose
 650:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 651:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 652:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* List of ADC registers intended to be used (most commonly) with             */
 653:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* DMA transfer.                                                              */
 654:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Refer to function @ref LL_ADC_DMA_GetRegAddr().                            */
 655:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA          (0x00000000UL) /* ADC group regular conversion data re
 656:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
 657:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DMA_REG_REGULAR_DATA_MULTI    (0x00000001UL) /* ADC group regular conversion data re
 658:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
 659:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 660:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 661:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 662:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 663:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_CLOCK_SOURCE  ADC common - Clock source
 664:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 665:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 666:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV1        (ADC_CCR_CKMODE_0)                                    /*
 667:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV2        (ADC_CCR_CKMODE_1                   )                 /*
 668:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_SYNC_PCLK_DIV4        (ADC_CCR_CKMODE_1 | ADC_CCR_CKMODE_0)                 /*
 669:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV1            (0x00000000UL)                                        /*
 670:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV2            (ADC_CCR_PRESC_0)                                     /*
 671:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV4            (ADC_CCR_PRESC_1                  )                   /*
 672:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV6            (ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0)                   /*
 673:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV8            (ADC_CCR_PRESC_2                                    ) /*
 674:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV10           (ADC_CCR_PRESC_2                   | ADC_CCR_PRESC_0) /*
 675:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV12           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1                  ) /*
 676:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV16           (ADC_CCR_PRESC_2 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 677:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV32           (ADC_CCR_PRESC_3)                                     /*
 678:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV64           (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_0)                   /*
 679:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV128          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1)                   /*
 680:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CLOCK_ASYNC_DIV256          (ADC_CCR_PRESC_3 | ADC_CCR_PRESC_1 | ADC_CCR_PRESC_0) /*
 681:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 682:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 683:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 684:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 685:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_COMMON_PATH_INTERNAL  ADC common - Measurement path to internal channels
 686:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 687:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 688:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Other measurement paths to internal channels may be available        */
 689:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       (connections to other peripherals).                                  */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 17


 690:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       If they are not listed below, they do not require any specific       */
 691:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       path enable. In this case, Access to measurement path is done        */
 692:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       only by selecting the corresponding ADC internal channel.            */
 693:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_NONE          (0x00000000UL)         /*!< ADC measurement paths all di
 694:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VREFINT       (ADC_CCR_VREFEN)       /*!< ADC measurement path to inte
 695:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_TEMPSENSOR    (ADC_CCR_TSEN)         /*!< ADC measurement path to inte
 696:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_PATH_INTERNAL_VBAT          (ADC_CCR_VBATEN)       /*!< ADC measurement path to inte
 697:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 698:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 699:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 700:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 701:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_RESOLUTION  ADC instance - Resolution
 702:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 703:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 704:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_12B              (0x00000000UL)                      /*!< ADC resolution 
 705:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_10B              (                 ADC_CFGR_RES_0)   /*!< ADC resolution 
 706:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_8B               (ADC_CFGR_RES_1                 )   /*!< ADC resolution 
 707:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_RESOLUTION_6B               (ADC_CFGR_RES_1 | ADC_CFGR_RES_0)   /*!< ADC resolution 
 708:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 709:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 710:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 711:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 712:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_DATA_ALIGN  ADC instance - Data alignment
 713:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 714:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 715:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_RIGHT            (0x00000000UL)         /*!< ADC conversion data alignmen
 716:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DATA_ALIGN_LEFT             (ADC_CFGR_ALIGN)       /*!< ADC conversion data alignmen
 717:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 718:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 719:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 720:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 721:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LP_MODE  ADC instance - Low power mode
 722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 723:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_MODE_NONE                (0x00000000UL)                      /*!< No ADC low powe
 725:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_LP_AUTOWAIT                 (ADC_CFGR_AUTDLY)                   /*!< ADC low power m
 726:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 727:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 728:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 729:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 730:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_NB  ADC instance - Offset number
 731:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 732:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 733:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_1                    ADC_OFR1_REGOFFSET /*!< ADC offset number 1: ADC channel
 734:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_2                    ADC_OFR2_REGOFFSET /*!< ADC offset number 2: ADC channel
 735:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_3                    ADC_OFR3_REGOFFSET /*!< ADC offset number 3: ADC channel
 736:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_4                    ADC_OFR4_REGOFFSET /*!< ADC offset number 4: ADC channel
 737:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 738:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 739:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 740:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 741:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OFFSET_STATE ADC instance - Offset state
 742:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 743:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 744:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_DISABLE              (0x00000000UL)         /*!< ADC offset disabled (among A
 745:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OFFSET_ENABLE               (ADC_OFR1_OFFSET1_EN)  /*!< ADC offset enabled (among AD
 746:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 18


 747:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 748:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 749:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 750:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_GROUPS  ADC instance - Groups
 751:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 752:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 753:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR               (0x00000001UL) /*!< ADC group regular (available on all 
 754:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_INJECTED              (0x00000002UL) /*!< ADC group injected (not available on
 755:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_GROUP_REGULAR_INJECTED      (0x00000003UL) /*!< ADC both groups regular and injected
 756:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 757:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 758:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 759:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 760:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL  ADC instance - Channel number
 761:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 762:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 763:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_0                   (ADC_CHANNEL_0_NUMBER  | ADC_CHANNEL_0_SMP  | ADC_CHANNE
 764:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_1                   (ADC_CHANNEL_1_NUMBER  | ADC_CHANNEL_1_SMP  | ADC_CHANNE
 765:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_2                   (ADC_CHANNEL_2_NUMBER  | ADC_CHANNEL_2_SMP  | ADC_CHANNE
 766:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_3                   (ADC_CHANNEL_3_NUMBER  | ADC_CHANNEL_3_SMP  | ADC_CHANNE
 767:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_4                   (ADC_CHANNEL_4_NUMBER  | ADC_CHANNEL_4_SMP  | ADC_CHANNE
 768:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_5                   (ADC_CHANNEL_5_NUMBER  | ADC_CHANNEL_5_SMP  | ADC_CHANNE
 769:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_6                   (ADC_CHANNEL_6_NUMBER  | ADC_CHANNEL_6_SMP  | ADC_CHANNE
 770:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_7                   (ADC_CHANNEL_7_NUMBER  | ADC_CHANNEL_7_SMP  | ADC_CHANNE
 771:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_8                   (ADC_CHANNEL_8_NUMBER  | ADC_CHANNEL_8_SMP  | ADC_CHANNE
 772:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_9                   (ADC_CHANNEL_9_NUMBER  | ADC_CHANNEL_9_SMP  | ADC_CHANNE
 773:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_10                  (ADC_CHANNEL_10_NUMBER | ADC_CHANNEL_10_SMP | ADC_CHANNE
 774:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_11                  (ADC_CHANNEL_11_NUMBER | ADC_CHANNEL_11_SMP | ADC_CHANNE
 775:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_12                  (ADC_CHANNEL_12_NUMBER | ADC_CHANNEL_12_SMP | ADC_CHANNE
 776:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_13                  (ADC_CHANNEL_13_NUMBER | ADC_CHANNEL_13_SMP | ADC_CHANNE
 777:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_14                  (ADC_CHANNEL_14_NUMBER | ADC_CHANNEL_14_SMP | ADC_CHANNE
 778:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_15                  (ADC_CHANNEL_15_NUMBER | ADC_CHANNEL_15_SMP | ADC_CHANNE
 779:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_16                  (ADC_CHANNEL_16_NUMBER | ADC_CHANNEL_16_SMP | ADC_CHANNE
 780:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_17                  (ADC_CHANNEL_17_NUMBER | ADC_CHANNEL_17_SMP | ADC_CHANNE
 781:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_18                  (ADC_CHANNEL_18_NUMBER | ADC_CHANNEL_18_SMP | ADC_CHANNE
 782:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VREFINT             (LL_ADC_CHANNEL_0  | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 783:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_TEMPSENSOR          (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 784:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_VBAT                (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 785:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
 786:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1             (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 787:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2             (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 788:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
 789:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC2        (LL_ADC_CHANNEL_17 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 790:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC2        (LL_ADC_CHANNEL_18 | ADC_CHANNEL_ID_INTERNAL_CH | ADC_CH
 791:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
 792:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH1_ADC3        (LL_ADC_CHANNEL_14 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 793:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_CHANNEL_DAC1CH2_ADC3        (LL_ADC_CHANNEL_15 | ADC_CHANNEL_ID_INTERNAL_CH) /*!< AD
 794:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
 795:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
 796:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 797:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 798:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 799:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 800:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_SOURCE  ADC group regular - Trigger source
 801:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 802:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 803:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SOFTWARE           (0x00000000UL)                                          
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 19


 804:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 805:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 806:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH1       (ADC_REG_TRIG_EXT_EDGE_DEFAULT)                         
 807:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH2       (ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 808:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CH3       (ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 809:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 810:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CH2       (ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 811:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 812:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CH4       (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 813:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_REG_TRIG_EX
 814:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CH4       (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_0 | ADC_REG_TRIG_EX
 815:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM6_TRGO      (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 816:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO      (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_CFGR_EXTSEL
 817:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM8_TRGO2     (ADC_CFGR_EXTSEL_3 | ADC_REG_TRIG_EXT_EDGE_DEFAULT)     
 818:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM15_TRGO     (ADC_CFGR_EXTSEL_3 | ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL
 819:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_EXTI_LINE11    (ADC_CFGR_EXTSEL_2 | ADC_CFGR_EXTSEL_1 | ADC_REG_TRIG_EX
 820:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 821:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 822:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 823:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 824:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_TRIGGER_EDGE  ADC group regular - Trigger edge
 825:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 826:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 827:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISING         (                   ADC_CFGR_EXTEN_0)   /*!< ADC group r
 828:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_FALLING        (ADC_CFGR_EXTEN_1                   )   /*!< ADC group r
 829:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_RISINGFALLING  (ADC_CFGR_EXTEN_1 | ADC_CFGR_EXTEN_0)   /*!< ADC group r
 830:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 831:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 832:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 833:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 834:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_CONTINUOUS_MODE  ADC group regular - Continuous mode
 835:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 836:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 837:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_SINGLE             (0x00000000UL)          /*!< ADC conversions are perform
 838:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_CONV_CONTINUOUS         (ADC_CFGR_CONT)         /*!< ADC conversions are perform
 839:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 840:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 841:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 842:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 843:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DMA_TRANSFER  ADC group regular - DMA transfer of ADC conversion data
 844:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 845:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 846:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_NONE       (0x00000000UL)                        /*!< ADC conversio
 847:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_LIMITED    (                  ADC_CFGR_DMAEN)    /*!< ADC conversio
 848:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DMA_TRANSFER_UNLIMITED  (ADC_CFGR_DMACFG | ADC_CFGR_DMAEN)    /*!< ADC conversio
 849:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 850:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 851:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 852:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 853:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
 854:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_DFSDM_TRANSFER ADC group regular - DFSDM transfer of ADC conversion dat
 855:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 856:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 857:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_NONE     (0x00000000UL)          /*!< ADC conversions are not tra
 858:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_DFSDM_TRANSFER_ENABLE   (ADC_CFGR_DFSDMCFG)     /*!< ADC conversion data are tra
 859:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 860:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 20


 861:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 862:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
 863:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 864:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
 865:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_SAMPLINGTIME_COMMON_CONFIG ADC instance - ADC sampling time common configur
 866:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 867:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 868:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_DEFAULT      (0x00000000UL)      /*!< ADC sampling time let to d
 869:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5 (ADC_SMPR1_SMPPLUS) /*!< ADC additional sampling ti
 870:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 871:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 872:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 873:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif
 874:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_OVR_DATA_BEHAVIOR  ADC group regular - Overrun behavior on conversion d
 876:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 877:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 878:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_PRESERVED      (0x00000000UL)         /*!< ADC group regular behavior i
 879:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_OVR_DATA_OVERWRITTEN    (ADC_CFGR_OVRMOD)      /*!< ADC group regular behavior i
 880:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 881:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 882:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 883:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 884:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_SCAN_LENGTH  ADC group regular - Sequencer scan length
 885:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 886:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 887:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_DISABLE        (0x00000000UL)                                          
 888:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS  (                                             ADC_SQR1_L
 889:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS  (                              ADC_SQR1_L_1             
 890:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS  (                              ADC_SQR1_L_1 | ADC_SQR1_L
 891:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS  (               ADC_SQR1_L_2                            
 892:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS  (               ADC_SQR1_L_2                | ADC_SQR1_L
 893:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1             
 894:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS  (               ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 895:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS  (ADC_SQR1_L_3                                           
 896:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS (ADC_SQR1_L_3                               | ADC_SQR1_L
 897:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1             
 898:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS (ADC_SQR1_L_3                | ADC_SQR1_L_1 | ADC_SQR1_L
 899:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                            
 900:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2                | ADC_SQR1_L
 901:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1             
 902:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS (ADC_SQR1_L_3 | ADC_SQR1_L_2 | ADC_SQR1_L_1 | ADC_SQR1_L
 903:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 904:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 905:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 906:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 907:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_DISCONT_MODE  ADC group regular - Sequencer discontinuous mode
 908:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 909:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 910:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_DISABLE     (0x00000000UL)                                          
 911:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_1RANK       (                                                       
 912:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_2RANKS      (                                          ADC_CFGR_DISC
 913:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_3RANKS      (                     ADC_CFGR_DISCNUM_1                
 914:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_4RANKS      (                     ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 915:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_5RANKS      (ADC_CFGR_DISCNUM_2                                     
 916:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_6RANKS      (ADC_CFGR_DISCNUM_2                      | ADC_CFGR_DISC
 917:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_7RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1                
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 21


 918:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_SEQ_DISCONT_8RANKS      (ADC_CFGR_DISCNUM_2 | ADC_CFGR_DISCNUM_1 | ADC_CFGR_DISC
 919:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 920:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 921:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 922:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 923:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_REG_SEQ_RANKS  ADC group regular - Sequencer ranks
 924:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 925:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 926:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_1                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_1_SQRX_BITOFFSET_POS)
 927:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_2                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_2_SQRX_BITOFFSET_POS)
 928:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_3                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_3_SQRX_BITOFFSET_POS)
 929:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_4                  (ADC_SQR1_REGOFFSET | ADC_REG_RANK_4_SQRX_BITOFFSET_POS)
 930:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_5                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_5_SQRX_BITOFFSET_POS)
 931:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_6                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_6_SQRX_BITOFFSET_POS)
 932:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_7                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_7_SQRX_BITOFFSET_POS)
 933:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_8                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_8_SQRX_BITOFFSET_POS)
 934:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_9                  (ADC_SQR2_REGOFFSET | ADC_REG_RANK_9_SQRX_BITOFFSET_POS)
 935:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_10                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_10_SQRX_BITOFFSET_POS
 936:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_11                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_11_SQRX_BITOFFSET_POS
 937:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_12                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_12_SQRX_BITOFFSET_POS
 938:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_13                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_13_SQRX_BITOFFSET_POS
 939:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_14                 (ADC_SQR3_REGOFFSET | ADC_REG_RANK_14_SQRX_BITOFFSET_POS
 940:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_15                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_15_SQRX_BITOFFSET_POS
 941:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_RANK_16                 (ADC_SQR4_REGOFFSET | ADC_REG_RANK_16_SQRX_BITOFFSET_POS
 942:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 943:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 944:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 945:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 946:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_SOURCE  ADC group injected - Trigger source
 947:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 948:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 949:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SOFTWARE           (0x00000000UL)                                          
 950:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO      (ADC_INJ_TRIG_EXT_EDGE_DEFAULT)                         
 951:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 952:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CH4       (ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 953:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_TRGO      (ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 954:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CH1       (ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 955:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_
 956:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH1       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 957:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH3       (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 958:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_INJ_TRIG_EXT_EDGE_DEFAULT)    
 959:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM4_TRGO      (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 960:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM6_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 961:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CH4       (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_JSQR_JEXT
 962:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO      (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_0 | ADC_INJ_TRIG_
 963:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 964:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM15_TRGO     (ADC_JSQR_JEXTSEL_3 | ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXT
 965:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_EXTI_LINE15    (ADC_JSQR_JEXTSEL_2 | ADC_JSQR_JEXTSEL_1 | ADC_INJ_TRIG_
 966:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 967:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 968:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 969:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 970:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIGGER_EDGE  ADC group injected - Trigger edge
 971:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 972:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 973:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISING         (                    ADC_JSQR_JEXTEN_0) /*!< ADC group i
 974:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_FALLING        (ADC_JSQR_JEXTEN_1                    ) /*!< ADC group i
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 22


 975:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_RISINGFALLING  (ADC_JSQR_JEXTEN_1 | ADC_JSQR_JEXTEN_0) /*!< ADC group i
 976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 977:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 978:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 979:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 980:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_TRIG_AUTO  ADC group injected - Automatic trigger mode
 981:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 982:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 983:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_INDEPENDENT        (0x00000000UL)         /*!< ADC group injected conversio
 984:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_FROM_GRP_REGULAR   (ADC_CFGR_JAUTO)       /*!< ADC group injected conversio
 985:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 986:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 987:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 988:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 989:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_CONTEXT_QUEUE  ADC group injected - Context queue mode
 990:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
 991:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 992:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE (0x00000000UL)         /* Group injected sequence co
 993:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY   (ADC_CFGR_JQM)         /* Group injected sequence co
 994:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_QUEUE_DISABLE               (ADC_CFGR_JQDIS)       /* Group injected sequence co
 995:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
 996:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
 997:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
 998:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 999:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_SCAN_LENGTH  ADC group injected - Sequencer scan length
1000:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1001:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1002:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_DISABLE        (0x00000000UL)                  /*!< ADC group injected 
1003:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS  (                ADC_JSQR_JL_0) /*!< ADC group injected 
1004:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS  (ADC_JSQR_JL_1                ) /*!< ADC group injected 
1005:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS  (ADC_JSQR_JL_1 | ADC_JSQR_JL_0) /*!< ADC group injected 
1006:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1007:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1009:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_DISCONT_MODE  ADC group injected - Sequencer discontinuous mode
1011:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1013:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_DISABLE     (0x00000000UL)         /*!< ADC group injected sequencer
1014:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_SEQ_DISCONT_1RANK       (ADC_CFGR_JDISCEN)     /*!< ADC group injected sequencer
1015:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1016:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1017:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1018:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1019:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_INJ_SEQ_RANKS  ADC group injected - Sequencer ranks
1020:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1021:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1022:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_1                  (ADC_JDR1_REGOFFSET | ADC_INJ_RANK_1_JSQR_BITOFFSET_POS)
1023:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_2                  (ADC_JDR2_REGOFFSET | ADC_INJ_RANK_2_JSQR_BITOFFSET_POS)
1024:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_3                  (ADC_JDR3_REGOFFSET | ADC_INJ_RANK_3_JSQR_BITOFFSET_POS)
1025:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_RANK_4                  (ADC_JDR4_REGOFFSET | ADC_INJ_RANK_4_JSQR_BITOFFSET_POS)
1026:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1027:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1028:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1029:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1030:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SAMPLINGTIME  Channel - Sampling time
1031:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 23


1032:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1033:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_2CYCLES_5      (0x00000000UL)                                          
1034:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_6CYCLES_5      (                                        ADC_SMPR2_SMP10
1035:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_12CYCLES_5     (                    ADC_SMPR2_SMP10_1                  
1036:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_24CYCLES_5     (                    ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1037:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_47CYCLES_5     (ADC_SMPR2_SMP10_2                                      
1038:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_92CYCLES_5     (ADC_SMPR2_SMP10_2                     | ADC_SMPR2_SMP10
1039:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_247CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1                  
1040:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SAMPLINGTIME_640CYCLES_5    (ADC_SMPR2_SMP10_2 | ADC_SMPR2_SMP10_1 | ADC_SMPR2_SMP10
1041:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1042:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1043:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1044:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1045:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_CHANNEL_SINGLE_DIFF_ENDING  Channel - Single or differential ending
1046:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1047:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_SINGLE_ENDED                (                  ADC_CALFACT_CALFACT_S)         /*!< A
1049:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DIFFERENTIAL_ENDED          (ADC_CR_ADCALDIF | ADC_CALFACT_CALFACT_D)         /*!< A
1050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_BOTH_SINGLE_DIFF_ENDED      (LL_ADC_SINGLE_ENDED | LL_ADC_DIFFERENTIAL_ENDED) /*!< A
1051:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1052:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1053:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1054:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1055:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_NUMBER Analog watchdog - Analog watchdog number
1056:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1057:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1058:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD1                        (ADC_AWD_CR1_CHANNEL_MASK  | ADC_AWD_CR1_REGOFFSET) /*!<
1059:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD2                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR2_REGOFFSET) /*!<
1060:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD3                        (ADC_AWD_CR23_CHANNEL_MASK | ADC_AWD_CR3_REGOFFSET) /*!<
1061:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1062:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1063:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1064:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1065:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_CHANNELS  Analog watchdog - Monitored channels
1066:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1068:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_DISABLE                 (0x00000000UL)                                          
1069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG        (ADC_AWD_CR23_CHANNEL_MASK                              
1070:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_INJ        (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_ALL_CHANNELS_REG_INJ    (ADC_AWD_CR23_CHANNEL_MASK                 | ADC_CFGR_JA
1072:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK)              
1073:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_INJ           ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_0_REG_INJ       ((LL_ADC_CHANNEL_0  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1075:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK)              
1076:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_INJ           ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1077:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_1_REG_INJ       ((LL_ADC_CHANNEL_1  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1078:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK)              
1079:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_INJ           ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1080:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_2_REG_INJ       ((LL_ADC_CHANNEL_2  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1081:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK)              
1082:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_INJ           ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1083:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_3_REG_INJ       ((LL_ADC_CHANNEL_3  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1084:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK)              
1085:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_INJ           ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1086:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_4_REG_INJ       ((LL_ADC_CHANNEL_4  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1087:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK)              
1088:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_INJ           ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 24


1089:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_5_REG_INJ       ((LL_ADC_CHANNEL_5  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1090:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK)              
1091:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_INJ           ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1092:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_6_REG_INJ       ((LL_ADC_CHANNEL_6  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1093:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK)              
1094:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_INJ           ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1095:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_7_REG_INJ       ((LL_ADC_CHANNEL_7  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1096:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK)              
1097:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_INJ           ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1098:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_8_REG_INJ       ((LL_ADC_CHANNEL_8  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1099:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK)              
1100:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_INJ           ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1101:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_9_REG_INJ       ((LL_ADC_CHANNEL_9  & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1102:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK)              
1103:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_INJ          ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1104:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_10_REG_INJ      ((LL_ADC_CHANNEL_10 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1105:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK)              
1106:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_INJ          ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1107:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_11_REG_INJ      ((LL_ADC_CHANNEL_11 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1108:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK)              
1109:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_INJ          ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1110:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_12_REG_INJ      ((LL_ADC_CHANNEL_12 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1111:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK)              
1112:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_INJ          ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1113:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_13_REG_INJ      ((LL_ADC_CHANNEL_13 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1114:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK)              
1115:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_INJ          ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1116:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_14_REG_INJ      ((LL_ADC_CHANNEL_14 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1117:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK)              
1118:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_INJ          ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1119:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_15_REG_INJ      ((LL_ADC_CHANNEL_15 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1120:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK)              
1121:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_INJ          ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1122:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_16_REG_INJ      ((LL_ADC_CHANNEL_16 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1123:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK)              
1124:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_INJ          ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1125:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_17_REG_INJ      ((LL_ADC_CHANNEL_17 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1126:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK)              
1127:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_INJ          ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1128:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CHANNEL_18_REG_INJ      ((LL_ADC_CHANNEL_18 & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JA
1129:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK)   
1130:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_INJ          ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1131:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VREFINT_REG_INJ      ((LL_ADC_CHANNEL_VREFINT       & ADC_CHANNEL_ID_MASK) | 
1132:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK)   
1133:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_INJ       ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1134:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ   ((LL_ADC_CHANNEL_TEMPSENSOR    & ADC_CHANNEL_ID_MASK) | 
1135:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK)   
1136:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_INJ             ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1137:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_VBAT_REG_INJ         ((LL_ADC_CHANNEL_VBAT          & ADC_CHANNEL_ID_MASK) | 
1138:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && !defined(ADC2)
1139:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK)   
1140:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_INJ          ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1141:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH1       & ADC_CHANNEL_ID_MASK) | 
1142:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK)   
1143:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_INJ          ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1144:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_REG_INJ      ((LL_ADC_CHANNEL_DAC1CH2       & ADC_CHANNEL_ID_MASK) | 
1145:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC2)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 25


1146:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK)   
1147:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1148:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC2  & ADC_CHANNEL_ID_MASK) | 
1149:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK)   
1150:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1151:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC2  & ADC_CHANNEL_ID_MASK) | 
1152:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC3)
1153:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK)   
1154:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1155:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH1_ADC3  & ADC_CHANNEL_ID_MASK) | 
1156:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK)   
1157:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1158:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ ((LL_ADC_CHANNEL_DAC1CH2_ADC3  & ADC_CHANNEL_ID_MASK) | 
1159:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC3 */
1160:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC1 && !ADC2 */
1161:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1162:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1163:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1164:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1165:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_AWD_THRESHOLDS  Analog watchdog - Thresholds
1166:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1167:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1168:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_HIGH          (ADC_TR1_HT1              ) /*!< ADC analog watchdog thr
1169:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLD_LOW           (              ADC_TR1_LT1) /*!< ADC analog watchdog thr
1170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_AWD_THRESHOLDS_HIGH_LOW     (ADC_TR1_HT1 | ADC_TR1_LT1) /*!< ADC analog watchdog bot
1171:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1173:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1174:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1175:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SCOPE  Oversampling - Oversampling scope
1176:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1177:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1178:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DISABLE                 (0x00000000UL)                                        /*
1179:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_CONTINUED   (                                    ADC_CFGR2_ROVSE) /*
1180:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_REGULAR_RESUMED     (ADC_CFGR2_ROVSM |                   ADC_CFGR2_ROVSE) /*
1181:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJECTED            (                  ADC_CFGR2_JOVSE                  ) /*
1182:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_GRP_INJ_REG_RESUMED     (                  ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSE) /*
1183:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1184:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1185:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1186:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1187:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_DISCONT_MODE  Oversampling - Discontinuous mode
1188:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1189:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1190:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_CONT                (0x00000000UL)         /*!< ADC oversampling discontinuo
1191:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_REG_DISCONT             (ADC_CFGR2_TROVS)      /*!< ADC oversampling discontinuo
1192:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1193:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1194:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1195:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1196:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_RATIO  Oversampling - Ratio
1197:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1198:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1199:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_2                 (0x00000000UL)                                          
1200:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_4                 (                                      ADC_CFGR2_OVSR_0)
1201:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_8                 (                   ADC_CFGR2_OVSR_1                   )
1202:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_16                (                   ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 26


1203:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_32                (ADC_CFGR2_OVSR_2                                      )
1204:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_64                (ADC_CFGR2_OVSR_2                    | ADC_CFGR2_OVSR_0)
1205:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_128               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1                   )
1206:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_RATIO_256               (ADC_CFGR2_OVSR_2 | ADC_CFGR2_OVSR_1 | ADC_CFGR2_OVSR_0)
1207:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1208:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1209:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1210:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1211:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_OVS_SHIFT  Oversampling - Data shift
1212:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1213:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1214:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_NONE              (0x00000000UL)                                          
1215:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_1           (                                                       
1216:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_2           (                                      ADC_CFGR2_OVSS_1 
1217:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_3           (                                      ADC_CFGR2_OVSS_1 
1218:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_4           (                   ADC_CFGR2_OVSS_2                    
1219:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_5           (                   ADC_CFGR2_OVSS_2                    
1220:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_6           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1221:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_7           (                   ADC_CFGR2_OVSS_2 | ADC_CFGR2_OVSS_1 
1222:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_SHIFT_RIGHT_8           (ADC_CFGR2_OVSS_3                                       
1223:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1224:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1225:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1226:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1227:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
1228:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MODE  Multimode - Mode
1229:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1230:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1231:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_INDEPENDENT           (0x00000000UL)                                          
1232:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIMULT       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1       
1233:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INTERL       (                 ADC_CCR_DUAL_2 | ADC_CCR_DUAL_1 | ADC_
1234:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_SIMULT       (                 ADC_CCR_DUAL_2                  | ADC_
1235:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_INJ_ALTERN       (ADC_CCR_DUAL_3                                   | ADC_
1236:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM  (                                                   ADC_
1237:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT  (                                  ADC_CCR_DUAL_1       
1238:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM  (                                  ADC_CCR_DUAL_1 | ADC_
1239:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1240:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1241:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1242:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1243:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_DMA_TRANSFER  Multimode - DMA transfer
1244:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1245:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1246:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_EACH_ADC        (0x00000000UL)                                     /*!
1247:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B (                 ADC_CCR_MDMA_1                 ) /*!
1248:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B   (                 ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1249:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B (ADC_CCR_DMACFG | ADC_CCR_MDMA_1                 ) /*!
1250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B   (ADC_CCR_DMACFG | ADC_CCR_MDMA_1 | ADC_CCR_MDMA_0) /*!
1251:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1252:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1253:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1254:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1255:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_TWOSMP_DELAY  Multimode - Delay between two sampling phases
1256:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1257:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1258:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE   (0x00000000UL)                                          
1259:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES  (                                                      A
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 27


1260:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES  (                                    ADC_CCR_DELAY_1    
1261:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES  (                                    ADC_CCR_DELAY_1 | A
1262:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES  (                  ADC_CCR_DELAY_2                      
1263:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (                  ADC_CCR_DELAY_2                   | A
1264:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1    
1265:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (                  ADC_CCR_DELAY_2 | ADC_CCR_DELAY_1 | A
1266:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (ADC_CCR_DELAY_3                                        
1267:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (ADC_CCR_DELAY_3                                     | A
1268:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1    
1269:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (ADC_CCR_DELAY_3                   | ADC_CCR_DELAY_1 | A
1270:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1271:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1272:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1273:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1274:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_MULTI_MASTER_SLAVE  Multimode - ADC master or slave
1275:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1276:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1277:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER                (                    ADC_CDR_RDATA_MST) /*!< In multimod
1278:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_SLAVE                 (ADC_CDR_RDATA_SLV                    ) /*!< In multimod
1279:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_MULTI_MASTER_SLAVE          (ADC_CDR_RDATA_SLV | ADC_CDR_RDATA_MST) /*!< In multimod
1280:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1281:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1282:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1283:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1284:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
1285:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1286:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_LEGACY ADC literals legacy naming
1287:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1288:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1289:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_SW_START           (LL_ADC_REG_TRIG_SOFTWARE)
1290:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC1       (LL_ADC_REG_TRIG_EXT_TIM1_CH1)
1291:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC2       (LL_ADC_REG_TRIG_EXT_TIM1_CH2)
1292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM1_CC3       (LL_ADC_REG_TRIG_EXT_TIM1_CH3)
1293:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM2_CC2       (LL_ADC_REG_TRIG_EXT_TIM2_CH2)
1294:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM3_CC4       (LL_ADC_REG_TRIG_EXT_TIM3_CH4)
1295:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_REG_TRIG_EXT_TIM4_CC4       (LL_ADC_REG_TRIG_EXT_TIM4_CH4)
1296:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1297:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_SW_START           (LL_ADC_INJ_TRIG_SOFTWARE)
1298:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM1_CC4       (LL_ADC_INJ_TRIG_EXT_TIM1_CH4)
1299:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM2_CC1       (LL_ADC_INJ_TRIG_EXT_TIM2_CH1)
1300:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC1       (LL_ADC_INJ_TRIG_EXT_TIM3_CH1)
1301:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC3       (LL_ADC_INJ_TRIG_EXT_TIM3_CH3)
1302:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM3_CC4       (LL_ADC_INJ_TRIG_EXT_TIM3_CH4)
1303:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_INJ_TRIG_EXT_TIM8_CC4       (LL_ADC_INJ_TRIG_EXT_TIM8_CH4)
1304:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1305:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_NONE        (LL_ADC_OVS_SHIFT_NONE)
1306:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_1           (LL_ADC_OVS_SHIFT_RIGHT_1)
1307:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_2           (LL_ADC_OVS_SHIFT_RIGHT_2)
1308:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_3           (LL_ADC_OVS_SHIFT_RIGHT_3)
1309:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_4           (LL_ADC_OVS_SHIFT_RIGHT_4)
1310:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_5           (LL_ADC_OVS_SHIFT_RIGHT_5)
1311:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_6           (LL_ADC_OVS_SHIFT_RIGHT_6)
1312:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_7           (LL_ADC_OVS_SHIFT_RIGHT_7)
1313:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_OVS_DATA_SHIFT_8           (LL_ADC_OVS_SHIFT_RIGHT_8)
1314:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1315:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1316:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 28


1317:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1318:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1319:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1320:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EC_HW_DELAYS  Definitions of ADC hardware constraints delays
1321:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Only ADC peripheral HW delays are defined in ADC LL driver driver,
1322:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not timeout values.
1323:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For details on delays values, refer to descriptions in source code
1324:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         above each literal definition.
1325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1326:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1327:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1328:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: Only ADC peripheral HW delays are defined in ADC LL driver driver,   */
1329:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       not timeout values.                                                  */
1330:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Timeout values for ADC operations are dependent to device clock      */
1331:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration (system clock versus ADC clock),                       */
1332:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       and therefore must be defined in user application.                   */
1333:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Indications for estimation of ADC timeout delays, for this           */
1334:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       STM32 series:                                                        */
1335:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC calibration time: maximum delay is 112/fADC.                   */
1336:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tCAL")                      */
1337:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC enable time: maximum delay is 1 conversion cycle.              */
1338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device datasheet, parameter "tSTAB")                     */
1339:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC disable time: maximum delay should be a few ADC clock cycles   */
1340:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC stop conversion time: maximum delay should be a few ADC clock  */
1341:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         cycles                                                             */
1342:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       - ADC conversion time: duration depending on ADC clock and ADC       */
1343:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         configuration.                                                     */
1344:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*         (refer to device reference manual, section "Timing")               */
1345:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1346:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for ADC stabilization time (ADC voltage regulator start-up time)     */
1347:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1348:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tADCVREG_STUP").                                                */
1349:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1350:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_INTERNAL_REGUL_STAB_US ( 20UL)  /*!< Delay for ADC stabilization time (ADC vol
1351:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1352:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for internal voltage reference stabilization time.                   */
1353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay set to maximum value (refer to device datasheet,                     */
1354:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tstart_vrefint").                                               */
1355:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1356:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_VREFINT_STAB_US           ( 12UL)  /*!< Delay for internal voltage reference s
1357:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1358:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay for temperature sensor stabilization time.                           */
1359:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Literal set to maximum value (refer to device datasheet,                   */
1360:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* parameter "tSTART").                                                       */
1361:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: us                                                                   */
1362:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_STAB_US        (120UL)  /*!< Delay for temperature sensor stabiliza
1363:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US ( 15UL)  /*!< Delay for temperature sensor buffer st
1364:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1365:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Delay required between ADC end of calibration and ADC enable.              */
1366:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: On this STM32 series, a minimum number of ADC clock cycles           */
1367:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       are required between ADC end of calibration and ADC enable.          */
1368:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       Wait time can be computed in user application by waiting for the     */
1369:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       equivalent number of CPU cycles, by taking into account              */
1370:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       ratio of CPU clock versus ADC clock prescalers.                      */
1371:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Unit: ADC clock cycles.                                                    */
1372:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES   (  4UL)  /*!< Delay required between ADC end of cali
1373:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 29


1374:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1375:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1376:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1377:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1378:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1379:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1380:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1381:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1382:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1383:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported macro ------------------------------------------------------------*/
1384:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Macros ADC Exported Macros
1385:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1386:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1387:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1388:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_WRITE_READ Common write and read registers Macros
1389:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1390:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1391:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1392:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1393:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Write a value in ADC register
1394:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1395:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be written
1396:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VALUE__ Value to be written in the register
1397:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
1398:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1399:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_WriteReg(__INSTANCE__, __REG__, __VALUE__) WRITE_REG(__INSTANCE__->__REG__, (__VALUE
1400:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1401:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1402:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Read a value in ADC register
1403:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __INSTANCE__ ADC Instance
1404:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __REG__ Register to be read
1405:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Register value
1406:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1407:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define LL_ADC_ReadReg(__INSTANCE__, __REG__) READ_REG(__INSTANCE__->__REG__)
1408:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1409:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
1410:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1411:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1412:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EM_HELPER_MACRO ADC helper macro
1413:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
1414:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1415:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1416:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1417:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel number in decimal format
1418:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from literals LL_ADC_CHANNEL_x.
1419:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1420:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_CHANNEL_4)
1421:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return decimal number "4".
1422:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The input can be a value from functions where a channel
1423:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number is returned, either defined with number
1424:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or with bitfield (only one bit must be set).
1425:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1426:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1427:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1428:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1429:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1430:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 30


1431:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1432:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1433:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1434:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1435:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1436:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1437:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1438:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1439:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1440:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1441:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1442:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1443:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1444:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1445:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1446:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1447:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1448:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1449:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1450:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1451:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1452:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1453:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1454:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1455:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1456:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1457:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1458:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1459:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1460:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1461:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1462:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1463:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0 and Max_Data=18
1464:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1465:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_TO_DECIMAL_NB(__CHANNEL__)                                        \
1466:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__CHANNEL__) & ADC_CHANNEL_ID_BITFIELD_MASK) == 0UL) ?                               \
1467:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
1468:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__CHANNEL__) & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS \
1469:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
1470:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                       \
1471:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                       \
1472:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (uint32_t)POSITION_VAL((__CHANNEL__))                                               \
1473:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                       \
1474:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1475:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1476:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1477:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get ADC channel in literal format LL_ADC_CHANNEL_x
1478:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from number in decimal format.
1479:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Example:
1480:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_DECIMAL_NB_TO_CHANNEL(4)
1481:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will return a data equivalent to "LL_ADC_CHANNEL_4".
1482:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DECIMAL_NB__ Value between Min_Data=0 and Max_Data=18
1483:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1484:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1485:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1486:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1487:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 31


1488:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1489:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1490:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1491:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1492:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1493:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1494:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1495:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1496:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1497:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1498:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1499:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1500:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1501:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1502:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1503:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1504:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1505:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1506:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1507:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1508:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1509:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1512:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1513:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1514:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1515:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1516:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1517:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1518:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1519:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1520:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1521:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1522:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1523:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1524:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1525:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DECIMAL_NB_TO_CHANNEL(__DECIMAL_NB__)                                             
1526:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__DECIMAL_NB__) <= 9UL) ?                                                                     
1527:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
1528:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                             |     
1529:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                             |     
1530:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR1_REGOFFSET | (((3UL * (__DECIMAL_NB__))) << ADC_CHANNEL_SMPx_BITOFFSET_POS))      
1531:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
1532:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1533:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                                               
1534:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        ((__DECIMAL_NB__) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)                                   
1535:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_AWD2CR_AWD2CH_0 << (__DECIMAL_NB__))                                                   
1536:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****        (ADC_SMPR2_REGOFFSET | (((3UL * ((__DECIMAL_NB__) - 10UL))) << ADC_CHANNEL_SMPx_BITOFFSET_PO
1537:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                                               
1538:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1539:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1540:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1541:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the selected channel
1542:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to literal definitions of driver.
1543:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The different literal definitions of ADC channels are:
1544:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC internal channel:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 32


1545:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...
1546:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC external channel (channel connected to a GPIO pin):
1547:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...
1548:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from literal
1549:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1550:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1551:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...),
1552:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value from functions where a channel number is
1553:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1554:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1555:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1556:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1557:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1558:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1559:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1560:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1561:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1562:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1563:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1564:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1565:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1566:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1567:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1568:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1569:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1570:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1571:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1572:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1573:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1574:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1575:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1576:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1577:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1578:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1579:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1580:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1581:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1582:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1583:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1584:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1585:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1586:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1587:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1588:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1589:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1590:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1591:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1593:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1594:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1595:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the channel corresponds to a parameter definition of a ADC external channe
1596:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the channel corresponds to a parameter definition of a ADC internal channe
1597:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1598:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL(__CHANNEL__)                              \
1599:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CHANNEL__) & ADC_CHANNEL_ID_INTERNAL_CH_MASK) != 0UL)
1600:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1601:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 33


1602:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert a channel defined from parameter
1603:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1604:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1605:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to its equivalent parameter definition of a ADC external channel
1606:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...).
1607:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter can be, additionally to a value
1608:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined from parameter definition of a ADC internal channel
1609:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (LL_ADC_CHANNEL_VREFINT, LL_ADC_CHANNEL_TEMPSENSOR, ...),
1610:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a value defined from parameter definition of
1611:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1612:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is returned
1613:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC registers.
1614:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1615:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1616:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1617:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1618:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1619:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1620:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1621:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1622:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1623:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1624:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1625:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1626:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1627:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1628:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1629:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1630:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1631:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1632:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1633:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1634:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1635:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1637:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1638:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1639:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1640:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1641:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1642:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1643:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1644:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1645:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1646:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1647:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1648:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1649:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1650:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1651:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1652:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1653:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1654:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
1655:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
1656:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
1657:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
1658:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 34


1659:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1660:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1661:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1662:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1663:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1664:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1665:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1666:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1667:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1668:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1669:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1670:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1671:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1672:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1673:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL(__CHANNEL__)                     \
1674:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__CHANNEL__) & ~ADC_CHANNEL_ID_INTERNAL_CH_MASK)
1675:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1676:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1677:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to determine whether the internal channel
1678:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         selected is available on the ADC instance selected.
1679:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The channel parameter must be a value defined from parameter
1680:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         definition of a ADC internal channel (LL_ADC_CHANNEL_VREFINT,
1681:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         LL_ADC_CHANNEL_TEMPSENSOR, ...),
1682:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must not be a value defined from parameter definition of
1683:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC external channel (LL_ADC_CHANNEL_1, LL_ADC_CHANNEL_2, ...)
1684:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or a value from functions where a channel number is
1685:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned from ADC registers,
1686:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because internal and external channels share the same channel
1687:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number in ADC registers. The differentiation is made only with
1688:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         parameters definitions of driver.
1689:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_INSTANCE__ ADC instance
1690:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1691:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1692:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1693:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1694:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1695:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1696:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1697:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1698:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1699:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1700:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1701:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1702:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1703:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1704:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1705:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1706:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1707:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if the internal channel selected is not available on the ADC instance selecte
1708:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if the internal channel selected is available on the ADC instance selected.
1709:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1710:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined (ADC1) && defined (ADC2) && defined (ADC3)
1711:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1712:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1713:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
1714:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1715:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 35


1716:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1717:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
1718:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
1719:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1720:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
1721:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1723:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
1725:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
1726:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__ADC_INSTANCE__) == ADC3) ?                                             \
1727:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (                                                                         \
1728:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                        \
1729:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR)   ||                        \
1730:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)         ||                        \
1731:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC3) ||                        \
1732:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC3)                           \
1733:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      )                                                                         \
1734:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      :                                                                         \
1735:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      (0UL)                                                                     \
1736:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1737:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1) && defined (ADC2)
1738:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1739:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_INSTANCE__) == ADC1) ?                                              \
1740:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (                                                                           \
1741:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1742:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1743:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)                                     \
1744:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                           \
1745:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                           \
1746:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__ADC_INSTANCE__) == ADC2) ?                                              \
1747:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (                                                                          \
1748:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)      ||                         \
1749:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1_ADC2) ||                         \
1750:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****      ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2_ADC2)                            \
1751:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     )                                                                          \
1752:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     :                                                                          \
1753:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (0UL)                                                                      \
1754:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1755:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined (ADC1)
1756:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_CHANNEL_INTERNAL_AVAILABLE(__ADC_INSTANCE__, __CHANNEL__)  \
1757:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (                                                                            \
1758:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VREFINT)    ||                            \
1759:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_TEMPSENSOR) ||                            \
1760:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_VBAT)       ||                            \
1761:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH1)    ||                            \
1762:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     ((__CHANNEL__) == LL_ADC_CHANNEL_DAC1CH2)                                  \
1763:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1764:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined (ADC1) && defined (ADC2) && defined (ADC3) */
1765:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1766:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1767:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define ADC analog watchdog parameter:
1768:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         define a single channel to monitor with analog watchdog
1769:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from sequencer channel and groups definition.
1770:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetAnalogWDMonitChannels().
1771:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
1772:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDMonitChannels(
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 36


1773:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1, LL_ADC_AWD1,
1774:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_CHANNEL_GROUP(LL_ADC_CHANNEL4, LL_ADC_GROUP_REGULAR))
1775:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CHANNEL__ This parameter can be one of the following values:
1776:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
1777:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
1778:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
1779:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
1780:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
1781:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
1782:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
1783:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
1784:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
1785:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
1786:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
1787:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
1788:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
1789:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
1790:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
1791:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
1792:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
1793:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
1794:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
1795:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
1796:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
1797:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
1798:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
1799:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
1800:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
1801:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
1802:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
1803:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
1804:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1805:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1806:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1807:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1808:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
1809:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1810:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
1811:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
1812:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
1813:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
1814:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
1815:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
1816:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __GROUP__ This parameter can be one of the following values:
1817:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR
1818:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_INJECTED
1819:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_GROUP_REGULAR_INJECTED
1820:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
1821:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
1822:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
1823:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
1824:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
1825:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
1826:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
1827:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
1828:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
1829:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 37


1830:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
1831:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
1832:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
1833:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
1834:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
1835:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
1836:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
1837:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
1838:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
1839:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
1840:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
1841:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
1842:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
1843:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
1844:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
1845:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
1846:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
1847:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
1848:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
1849:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
1850:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
1851:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
1852:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
1853:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
1854:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
1855:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
1856:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
1857:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
1858:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
1859:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
1860:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
1861:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
1862:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
1863:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
1864:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
1865:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
1866:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
1867:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
1868:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
1869:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
1870:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
1871:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
1872:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
1873:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
1874:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
1875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
1876:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
1877:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
1878:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
1879:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
1880:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
1881:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
1882:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
1883:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
1884:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
1885:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
1886:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 38


1887:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
1888:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
1889:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
1890:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
1891:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
1892:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
1893:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
1894:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
1895:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
1896:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
1897:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
1898:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
1899:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
1900:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
1901:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
1902:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
1903:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
1904:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
1905:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
1906:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
1907:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
1908:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
1909:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
1910:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
1911:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
1912:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
1913:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
1914:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
1915:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
1916:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
1917:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1918:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_CHANNEL_GROUP(__CHANNEL__, __GROUP__)                                    
1919:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__GROUP__) == LL_ADC_GROUP_REGULAR)                                                           
1920:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)                  
1921:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1922:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ((__GROUP__) == LL_ADC_GROUP_INJECTED)                                                          
1923:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ? (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1SGL)                 
1924:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                                               
1925:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (((__CHANNEL__) & ADC_CHANNEL_ID_MASK) | ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL) 
1926:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
1927:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1928:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1929:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the value of ADC analog watchdog threshold high
1930:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1931:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1932:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_ConfigAnalogWDThresholds()
1933:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or @ref LL_ADC_SetAnalogWDThresholds().
1934:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to set the value of
1935:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1936:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetAnalogWDThresholds
1937:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (< ADCx param >,
1938:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(LL_ADC_RESOLUTION_8B, <threshold_value_8
1939:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1940:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1941:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1942:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1943:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 39


1944:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1945:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD__ Value between Min_Data=0x000 and Max_Data=0xFFF
1946:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1947:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1948:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD__) \
1949:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD__) << ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1950:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1951:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1952:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the value of ADC analog watchdog threshold high
1953:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low in function of ADC resolution, when ADC resolution is
1954:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         different of 12 bits.
1955:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1956:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, with a ADC resolution of 8 bits, to get the value of
1957:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog threshold high (on 8 bits):
1958:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           < threshold_value_6_bits > = __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION
1959:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            (LL_ADC_RESOLUTION_8B,
1960:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_GetAnalogWDThresholds(<ADCx param>, LL_ADC_AWD_THRESHOLD_HIGH)
1961:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *            );
1962:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
1963:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
1964:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
1965:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
1966:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
1967:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_12_BITS__ Value between Min_Data=0x000 and Max_Data=0xFFF
1968:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1969:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1970:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION(__ADC_RESOLUTION__, __AWD_THRESHOLD_12_BITS__) \
1971:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((__AWD_THRESHOLD_12_BITS__) >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1U )))
1972:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1973:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1974:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC analog watchdog threshold high
1975:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or low from raw value containing both thresholds concatenated.
1976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_GetAnalogWDThresholds().
1977:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to get analog watchdog threshold high from the register raw value:
1978:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(LL_ADC_AWD_THRESHOLD_HIGH, <raw_value_with_both
1979:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLD_TYPE__ This parameter can be one of the following values:
1980:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
1981:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
1982:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __AWD_THRESHOLDS__ Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
1983:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
1984:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
1985:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW(__AWD_THRESHOLD_TYPE__, __AWD_THRESHOLDS__)       \
1986:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__AWD_THRESHOLDS__) >> (((__AWD_THRESHOLD_TYPE__) & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_
1987:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
1988:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
1989:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to set the ADC calibration value with both single ended
1990:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential modes calibration factors concatenated.
1991:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To be used with function @ref LL_ADC_SetCalibrationFactor().
1992:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example, to set calibration factors single ended to 0x55
1993:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential ended to 0x2A:
1994:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_ADC_SetCalibrationFactor(
1995:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC1,
1996:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(0x55, 0x2A))
1997:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_SINGLE_ENDED__ Value between Min_Data=0x00 and Max_Data=0x7F
1998:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __CALIB_FACTOR_DIFFERENTIAL__ Value between Min_Data=0x00 and Max_Data=0x7F
1999:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
2000:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 40


2001:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALIB_FACTOR_SINGLE_DIFF(__CALIB_FACTOR_SINGLE_ENDED__, __CALIB_FACTOR_DIFFERENTIA
2002:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__CALIB_FACTOR_DIFFERENTIAL__) << ADC_CALFACT_CALFACT_D_Pos) | (__CALIB_FACTOR_SINGLE_ENDED__)
2003:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2004:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2005:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2006:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to get the ADC multimode conversion data of ADC master
2007:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or ADC slave from raw value with both ADC conversion data concatenated.
2008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used when multimode transfer by DMA
2009:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled: refer to function @ref LL_ADC_SetMultiDMATransfer().
2010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In this case the transferred data need to processed with this macro
2011:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to separate the conversion data of ADC master and ADC slave.
2012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_MASTER_SLAVE__ This parameter can be one of the following values:
2013:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
2014:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
2015:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_MULTI_CONV_DATA__ Value between Min_Data=0x000 and Max_Data=0xFFF
2016:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
2017:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2018:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE(__ADC_MULTI_MASTER_SLAVE__, __ADC_MULTI_CONV_DATA__) 
2019:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (((__ADC_MULTI_CONV_DATA__) >> ((ADC_CDR_RDATA_SLV_Pos) & ~(__ADC_MULTI_MASTER_SLAVE__))) & ADC_C
2020:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2021:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2022:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2023:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2024:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select, from a ADC instance, to which ADC instance
2025:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         it has a dependence in multimode (ADC master of the corresponding
2026:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance).
2027:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of device with multimode available and a mix of
2028:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances compliant and not compliant with multimode feature,
2029:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instances not compliant with multimode feature are
2030:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         considered as master instances (do not depend to
2031:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         any other ADC instance).
2032:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2033:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval __ADCx__ ADC instance master of the corresponding ADC common instance
2034:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2035:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC2)
2036:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2037:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ((((__ADCx__) == ADC2))?                                                   \
2038:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (ADC1)                                                                    \
2039:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    :                                                                         \
2040:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    (__ADCx__)                                                                \
2041:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   )
2042:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2043:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_MULTI_INSTANCE_MASTER(__ADCx__) \
2044:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (__ADCx__)
2045:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC2 */
2046:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
2047:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2049:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to select the ADC common instance
2050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to which is belonging the selected ADC instance.
2051:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC common register instance can be used for:
2052:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Set parameters common to several ADC instances
2053:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Multimode (for devices with several ADC instances)
2054:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2055:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCx__ ADC instance
2056:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC common register instance
2057:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 41


2058:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2059:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2060:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC123_COMMON)
2061:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2062:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2063:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC12_COMMON)
2064:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2065:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_COMMON_INSTANCE(__ADCx__)                                     \
2066:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (ADC1_COMMON)
2067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2068:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2070:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to check if all ADC instances sharing the same
2071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC common instance are disabled.
2072:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This check is required by functions with setting conditioned to
2073:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2075:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to functions having argument "ADCxy_COMMON" as parameter.
2076:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On devices with only 1 ADC common instance, parameter of this macro
2077:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is useless and can be ignored (parameter kept for compatibility
2078:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with devices featuring several ADC common instances).
2079:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADCXY_COMMON__ ADC common instance
2080:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2081:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if all ADC instances sharing the same ADC common instance
2082:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are disabled.
2083:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if at least one ADC instance sharing the same ADC common instance
2084:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
2085:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2086:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC1) && defined(ADC2) && defined(ADC3)
2087:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2088:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2089:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2) |                                                    \
2090:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC3)  )
2091:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #elif defined(ADC1) && defined(ADC2)
2092:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2093:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1) |                                                    \
2094:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    LL_ADC_IsEnabled(ADC2)  )
2095:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2096:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__ADCXY_COMMON__)              \
2097:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (LL_ADC_IsEnabled(ADC1))
2098:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* defined(ADC1) && defined(ADC2) && defined(ADC3) */
2099:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2100:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2101:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to define the ADC conversion data full-scale digital
2102:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         value corresponding to the selected ADC resolution.
2103:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC conversion data full-scale corresponds to voltage range
2104:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         determined by analog voltage references Vref+ and Vref-
2105:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to reference manual).
2106:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2107:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2108:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2109:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2110:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2111:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data full-scale digital value (unit: digital value of ADC conversion dat
2112:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2113:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                             \
2114:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (0xFFFUL >> ((__ADC_RESOLUTION__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 42


2115:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2116:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2117:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to convert the ADC conversion data from
2118:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a resolution to another resolution.
2119:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __DATA__ ADC conversion data to be converted
2120:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_CURRENT__ Resolution of the data to be converted
2121:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2122:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2123:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2124:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2125:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2126:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION_TARGET__ Resolution of the data after conversion
2127:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2128:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2129:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2130:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2131:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2132:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data to the requested resolution
2133:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2134:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CONVERT_DATA_RESOLUTION(__DATA__,\
2135:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_CURRENT__,\
2136:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION_TARGET__)          \
2137:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((__DATA__)                                                                 \
2138:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   << ((__ADC_RESOLUTION_CURRENT__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL)))   \
2139:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  >> ((__ADC_RESOLUTION_TARGET__) >> (ADC_CFGR_RES_BITOFFSET_POS - 1UL))      \
2140:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2141:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2142:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2143:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the voltage (unit: mVolt)
2144:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponding to a ADC conversion data (unit: digital value).
2145:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2146:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2147:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2148:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__ Analog reference voltage (unit: mV)
2149:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_DATA__ ADC conversion data (resolution 12 bits)
2150:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                       (unit: digital value).
2151:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2152:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2153:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2154:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2155:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2156:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC conversion data equivalent voltage value (unit: mVolt)
2157:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2158:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_TO_VOLTAGE(__VREFANALOG_VOLTAGE__,\
2159:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_DATA__,\
2160:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                       __ADC_RESOLUTION__)                    \
2161:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** ((__ADC_DATA__) * (__VREFANALOG_VOLTAGE__)                                   \
2162:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__)                                \
2163:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2164:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2165:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Legacy define */
2166:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_DATA_VOLTAGE()  __LL_ADC_CALC_DATA_TO_VOLTAGE()
2167:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2168:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2169:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate analog reference voltage (Vref+)
2170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (unit: mVolt) from ADC conversion data of internal voltage
2171:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         reference VrefInt.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 43


2172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using VrefInt calibration value
2173:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2174:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This voltage depends on user board environment: voltage level
2175:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         connected to pin Vref+.
2176:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On devices with small package, the pin Vref+ is not present
2177:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and internally bonded to pin Vdda.
2178:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of internal voltage reference
2179:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         VrefInt corresponds to a resolution of 12 bits,
2180:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2181:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal voltage reference VrefInt.
2182:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2183:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2184:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFINT_ADC_DATA__ ADC conversion data (resolution 12 bits)
2185:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of internal voltage reference VrefInt (unit: digital value).
2186:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__ This parameter can be one of the following values:
2187:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2188:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2189:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2190:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2191:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Analog reference voltage (unit: mV)
2192:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2193:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_VREFANALOG_VOLTAGE(__VREFINT_ADC_DATA__,\
2194:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                          __ADC_RESOLUTION__)                 \
2195:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((uint32_t)(*VREFINT_CAL_ADDR) * VREFINT_CAL_VREF)                          \
2196:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  / __LL_ADC_CONVERT_DATA_RESOLUTION((__VREFINT_ADC_DATA__),                  \
2197:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     (__ADC_RESOLUTION__),                    \
2198:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                     LL_ADC_RESOLUTION_12B)                   \
2199:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2200:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2201:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2202:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2203:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2204:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor calibration values
2205:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         stored in system memory for each device during production.
2206:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2207:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = ((TS_ADC_DATA - TS_CAL1)
2208:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                           * (TS_CAL2_TEMP - TS_CAL1_TEMP))
2209:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / (TS_CAL2 - TS_CAL1) + TS_CAL1_TEMP
2210:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA = temperature sensor raw data measured by ADC
2211:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope = (TS_CAL2 - TS_CAL1)
2212:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            / (TS_CAL2_TEMP - TS_CAL1_TEMP)
2213:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL1   = equivalent TS_ADC_DATA at temperature
2214:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL1 (calibrated in factory)
2215:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_CAL2   = equivalent TS_ADC_DATA at temperature
2216:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                            TEMP_DEGC_CAL2 (calibrated in factory)
2217:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve that calibration
2218:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  parameters are correct (address and data).
2219:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  To calculate temperature using temperature sensor
2220:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values (generic values less, therefore
2221:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  less accurate than calibrated values),
2222:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  use helper macro @ref __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS().
2223:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2224:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2225:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2226:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2227:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
2228:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, calibration data of temperature sensor
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 44


2229:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         corresponds to a resolution of 12 bits,
2230:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         this is the recommended ADC resolution to convert voltage of
2231:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor.
2232:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Otherwise, this macro performs the processing to scale
2233:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion data to 12 bits.
2234:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__  Analog reference voltage (unit: mV)
2235:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__ ADC conversion data of internal
2236:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 temperature sensor (unit: digital value).
2237:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__      ADC resolution at which internal temperature
2238:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                 sensor voltage has been measured.
2239:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2240:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2241:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2242:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2243:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2244:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2245:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2246:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE(__VREFANALOG_VOLTAGE__,\
2247:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __TEMPSENSOR_ADC_DATA__,\
2248:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   __ADC_RESOLUTION__)                            \
2249:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((( ((int32_t)((__LL_ADC_CONVERT_DATA_RESOLUTION((__TEMPSENSOR_ADC_DATA__),     \
2250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   (__ADC_RESOLUTION__),          \
2251:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   LL_ADC_RESOLUTION_12B)         \
2252:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                  * (__VREFANALOG_VOLTAGE__))                                     \
2253:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                 / TEMPSENSOR_CAL_VREFANALOG)                                     \
2254:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       - (int32_t) *TEMPSENSOR_CAL1_ADDR)                                         \
2255:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    ) * (int32_t)(TEMPSENSOR_CAL2_TEMP - TEMPSENSOR_CAL1_TEMP)                    \
2256:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)((int32_t)*TEMPSENSOR_CAL2_ADDR - (int32_t)*TEMPSENSOR_CAL1_ADDR) \
2257:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + TEMPSENSOR_CAL1_TEMP                                                        \
2258:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2259:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2260:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2261:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Helper macro to calculate the temperature (unit: degree Celsius)
2262:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC conversion data of internal temperature sensor.
2263:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Computation is using temperature sensor typical values
2264:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (refer to device datasheet).
2265:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calculation formula:
2266:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Temperature = (TS_TYP_CALx_VOLT(uV) - TS_ADC_DATA * Conversion_uV)
2267:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                         / Avg_Slope + CALx_TEMP
2268:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with TS_ADC_DATA      = temperature sensor raw data measured by ADC
2269:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: digital value)
2270:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                Avg_Slope        = temperature sensor slope
2271:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   (unit: uV/Degree Celsius)
2272:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                TS_TYP_CALx_VOLT = temperature sensor digital value at
2273:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                   temperature CALx_TEMP (unit: mV)
2274:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Caution: Calculation relevancy under reserve the temperature sensor
2275:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  of the current device has characteristics in line with
2276:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  datasheet typical values.
2277:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  If temperature sensor calibration values are available on
2278:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  on this device (presence of macro __LL_ADC_CALC_TEMPERATURE()),
2279:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  temperature calculation will be more accurate using
2280:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                  helper macro @ref __LL_ADC_CALC_TEMPERATURE().
2281:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   As calculation input, the analog reference voltage (Vref+) must be
2282:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         defined as it impacts the ADC LSB equivalent voltage.
2283:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Analog reference voltage (Vref+) must be either known from
2284:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         user board environment or can be calculated using ADC measurement
2285:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC helper macro @ref __LL_ADC_CALC_VREFANALOG_VOLTAGE().
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 45


2286:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC measurement data must correspond to a resolution of 12 bits
2287:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (full scale digital value 4095). If not the case, the data must be
2288:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         preliminarily rescaled to an equivalent resolution of 12 bits.
2289:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_AVGSLOPE__   Device datasheet data: Temperature sensor slope typical v
2290:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "Avg_Slop
2291:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_TYP_CALX_V__     Device datasheet data: Temperature sensor voltage typical
2292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                       On STM32L4, refer to device datasheet parameter "V30" (co
2293:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_CALX_TEMP__      Device datasheet data: Temperature at which temperature s
2294:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __VREFANALOG_VOLTAGE__        Analog voltage reference (Vref+) voltage (unit: mV)
2295:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __TEMPSENSOR_ADC_DATA__       ADC conversion data of internal temperature sensor (unit:
2296:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  __ADC_RESOLUTION__            ADC resolution at which internal temperature sensor volta
2297:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This parameter can be one of the following values:
2298:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2299:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2300:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2301:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2302:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Temperature (unit: degree Celsius)
2303:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2304:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #define __LL_ADC_CALC_TEMPERATURE_TYP_PARAMS(__TEMPSENSOR_TYP_AVGSLOPE__,\
2305:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_TYP_CALX_V__,\
2306:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_CALX_TEMP__,\
2307:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __VREFANALOG_VOLTAGE__,\
2308:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __TEMPSENSOR_ADC_DATA__,\
2309:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              __ADC_RESOLUTION__)            \
2310:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** (((((int32_t)((((__TEMPSENSOR_ADC_DATA__) * (__VREFANALOG_VOLTAGE__))       \
2311:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                / __LL_ADC_DIGITAL_SCALE(__ADC_RESOLUTION__))                \
2312:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2313:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     -                                                                       \
2314:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     (int32_t)(((__TEMPSENSOR_TYP_CALX_V__))                                 \
2315:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****               * 1000UL)                                                     \
2316:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****    )                                                                        \
2317:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   ) / (int32_t)(__TEMPSENSOR_TYP_AVGSLOPE__)                                \
2318:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****  ) + (int32_t)(__TEMPSENSOR_CALX_TEMP__)                                    \
2319:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** )
2320:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2321:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2322:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2323:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2324:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2326:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2327:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2328:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2329:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2330:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Exported functions --------------------------------------------------------*/
2331:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_Exported_Functions ADC Exported Functions
2332:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2333:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2334:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2335:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_DMA_Management ADC DMA management
2336:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2337:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Note: LL ADC functions to set DMA transfer are located into sections of    */
2339:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       configuration of ADC instance, groups and multimode (if available):  */
2340:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /*       @ref LL_ADC_REG_SetDMATransfer(), ...                                */
2341:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2342:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 46


2343:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Function to help to configure DMA transfer from ADC: retrieve the
2344:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC register address from ADC instance and a list of ADC registers
2345:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         intended to be used (most commonly) with DMA transfer.
2346:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   These ADC registers are data registers:
2347:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when ADC conversion data is available in ADC data registers,
2348:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC generates a DMA transfer request.
2349:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This macro is intended to be used with LL DMA driver, refer to
2350:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function "LL_DMA_ConfigAddresses()".
2351:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example:
2352:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           LL_DMA_ConfigAddresses(DMA1,
2353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_CHANNEL_1,
2354:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_ADC_DMA_GetRegAddr(ADC1, LL_ADC_DMA_REG_REGULAR_DATA),
2355:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  (uint32_t)&< array or variable >,
2356:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                                  LL_DMA_DIRECTION_PERIPH_TO_MEMORY);
2357:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC: in multimode, some devices
2358:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use a different data register outside of ADC instance scope
2359:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (common data register). This macro manages this register difference,
2360:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         only ADC instance has to be set as parameter.
2361:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_DMA_GetRegAddr\n
2362:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_MST      LL_ADC_DMA_GetRegAddr\n
2363:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_DMA_GetRegAddr
2364:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2365:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Register This parameter can be one of the following values:
2366:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA
2367:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DMA_REG_REGULAR_DATA_MULTI (1)
2368:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2369:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Available on devices with several ADC instances.
2370:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval ADC register address
2371:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2372:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
2373:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2374:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2375:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t data_reg_addr;
2376:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2377:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (Register == LL_ADC_DMA_REG_REGULAR_DATA)
2378:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2379:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register DR */
2380:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &(ADCx->DR);
2381:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2382:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   else /* (Register == LL_ADC_DMA_REG_REGULAR_DATA_MULTI) */
2383:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
2384:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     /* Retrieve address of register CDR */
2385:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     data_reg_addr = (uint32_t) &((__LL_ADC_COMMON_INSTANCE(ADCx))->CDR);
2386:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
2387:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2388:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return data_reg_addr;
2389:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2390:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #else
2391:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_DMA_GetRegAddr(ADC_TypeDef *ADCx, uint32_t Register)
2392:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2393:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Prevent unused argument(s) compilation warning */
2394:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   (void)(Register);
2395:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2396:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve address of register DR */
2397:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) &(ADCx->DR);
2398:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2399:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 47


2400:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2401:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2402:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2403:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2404:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2405:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Common Configuration of ADC hierarchical scope: common to
2406:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2407:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2408:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2409:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2410:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: Clock source and prescaler.
2411:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, if ADC group injected is used, some
2412:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         clock ratio constraints between ADC clock and AHB clock
2413:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         must be respected.
2414:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
2415:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2416:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2417:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
2418:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
2419:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
2420:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
2421:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_SetCommonClock\n
2422:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_SetCommonClock
2423:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2424:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2425:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CommonClock This parameter can be one of the following values:
2426:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2427:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
2428:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2429:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2430:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2431:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2432:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2433:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2434:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2435:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2436:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2437:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2438:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2439:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2440:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2441:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2442:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2443:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t CommonClock)
2444:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2445:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC, CommonClock);
2446:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2447:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2448:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2449:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: Clock source and prescaler.
2450:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      CKMODE         LL_ADC_GetCommonClock\n
2451:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      PRESC          LL_ADC_GetCommonClock
2452:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2453:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2454:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2455:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV1
2456:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV2
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 48


2457:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_SYNC_PCLK_DIV4
2458:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV1
2459:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV2
2460:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV4
2461:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV6
2462:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV8
2463:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV10
2464:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV12
2465:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV16
2466:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV32
2467:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV64
2468:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV128
2469:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CLOCK_ASYNC_DIV256
2470:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2471:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonClock(ADC_Common_TypeDef *ADCxy_COMMON)
2472:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2473:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_CKMODE | ADC_CCR_PRESC));
2474:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2475:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2476:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2477:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2478:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2479:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Configure all paths (overwrite current configuration).
2480:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2481:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2482:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2483:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The values not selected are removed from configuration.
2484:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2485:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2486:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2487:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2488:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2489:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2490:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US, 
2491:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2492:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2493:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2494:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2495:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2496:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalCh\n
2497:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalCh\n
2498:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalCh
2499:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2500:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2501:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2502:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2503:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2504:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2505:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2506:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2507:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2508:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Path
2509:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN, PathInternal);
2511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2512:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2513:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 49


2514:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2515:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2516:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Add paths to the current configuration.
2517:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2518:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2519:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2520:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Stabilization time of measurement path to internal channel:
2521:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         After enabling internal paths, before starting ADC conversion,
2522:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay is required for internal voltage reference and
2523:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor stabilization time.
2524:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2525:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_VREFINT_STAB_US.
2526:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literals @ref LL_ADC_DELAY_TEMPSENSOR_STAB_US, 
2527:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_DELAY_TEMPSENSOR_BUFFER_STAB_US.
2528:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   ADC internal channel sampling time constraint:
2529:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For ADC conversion of internal channels,
2530:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a sampling time minimum value is required.
2531:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
2532:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChAdd\n
2533:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChAdd\n
2534:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChAdd
2535:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2536:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2537:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2538:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2539:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2540:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2541:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2542:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2543:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2544:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChAdd(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2545:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2546:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   SET_BIT(ADCxy_COMMON->CCR, PathInternal);
2547:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2548:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2549:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2550:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set parameter common to several ADC: measurement path to
2551:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal channels (VrefInt, temperature sensor, ...).
2552:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Remove paths to the current configuration.
2553:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2554:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2555:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2556:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_SetCommonPathInternalChRem\n
2557:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_SetCommonPathInternalChRem\n
2558:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_SetCommonPathInternalChRem
2559:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2560:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2561:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  PathInternal This parameter can be a combination of the following values:
2562:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2563:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2564:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2565:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2566:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2567:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2568:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCommonPathInternalChRem(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t P
2569:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2570:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCxy_COMMON->CCR, PathInternal);
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 50


2571:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2572:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2573:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2574:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get parameter common to several ADC: measurement path to internal
2575:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channels (VrefInt, temperature sensor, ...).
2576:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
2577:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_PATH_INTERNAL_VREFINT |
2578:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                   LL_ADC_PATH_INTERNAL_TEMPSENSOR)
2579:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      VREFEN         LL_ADC_GetCommonPathInternalCh\n
2580:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      TSEN           LL_ADC_GetCommonPathInternalCh\n
2581:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      VBATEN         LL_ADC_GetCommonPathInternalCh
2582:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
2583:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
2584:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be a combination of the following values:
2585:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_NONE
2586:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VREFINT
2587:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_TEMPSENSOR
2588:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_PATH_INTERNAL_VBAT
2589:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2590:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCommonPathInternalCh(ADC_Common_TypeDef *ADCxy_COMMON)
2591:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_VREFEN | ADC_CCR_TSEN | ADC_CCR_VBATEN));
2593:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2594:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2595:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2596:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
2597:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2598:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2599:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Instance Configuration of ADC hierarchical scope: ADC ins
2600:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
2601:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2602:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2603:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2604:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC calibration factor in the mode single-ended
2605:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2606:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function is intended to set calibration parameters
2607:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without having to perform a new calibration using
2608:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_StartCalibration().
2609:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2610:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2611:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2612:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration factor must be specified for each of these
2613:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
2614:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
2615:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of setting calibration factors of both modes single ended
2616:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and differential (parameter LL_ADC_BOTH_SINGLE_DIFF_ENDED):
2617:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         both calibration factors must be concatenated.
2618:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         To perform this processing, use helper macro
2619:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_CALIB_FACTOR_SINGLE_DIFF().
2620:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2621:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2622:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled, without calibration on going, without conversion
2623:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on group regular.
2624:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_SetCalibrationFactor\n
2625:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_SetCalibrationFactor
2626:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2627:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 51


2628:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2629:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2630:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_BOTH_SINGLE_DIFF_ENDED
2631:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  CalibrationFactor Value between Min_Data=0x00 and Max_Data=0x7F
2632:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2633:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2634:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff, uint32_t C
2635:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CALFACT,
2637:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
2638:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              CalibrationFactor << (((SingleDiff & ADC_SINGLEDIFF_CALIB_F_BIT_D_MASK) >> ADC_SINGLED
2639:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2640:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2641:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2642:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration factor in the mode single-ended
2643:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
2644:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Calibration factors are set by hardware after performing
2645:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a calibration run using function @ref LL_ADC_StartCalibration().
2646:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
2647:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
2648:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
2649:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CALFACT  CALFACT_S      LL_ADC_GetCalibrationFactor\n
2650:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CALFACT  CALFACT_D      LL_ADC_GetCalibrationFactor
2651:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2652:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
2653:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
2654:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
2655:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x7F
2656:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2657:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetCalibrationFactor(ADC_TypeDef *ADCx, uint32_t SingleDiff)
2658:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2659:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Retrieve bits with position in register depending on parameter           */
2660:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "SingleDiff".                                                            */
2661:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter used with mask "ADC_SINGLEDIFF_CALIB_FACTOR_MASK" because      */
2662:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
2663:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CALFACT,
2664:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
2665:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
2666:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2667:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2668:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2669:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC resolution.
2670:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2671:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2672:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2673:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2674:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2675:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2676:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_SetResolution
2677:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2678:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Resolution This parameter can be one of the following values:
2679:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2680:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2681:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2682:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2683:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2684:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 52


2685:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetResolution(ADC_TypeDef *ADCx, uint32_t Resolution)
2686:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2687:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_RES, Resolution);
2688:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2689:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2690:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2691:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC resolution.
2692:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual for alignments formats
2693:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2694:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     RES            LL_ADC_GetResolution
2695:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2696:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2697:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_12B
2698:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_10B
2699:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_8B
2700:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_RESOLUTION_6B
2701:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2702:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetResolution(ADC_TypeDef *ADCx)
2703:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2704:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_RES));
2705:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2706:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2707:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2708:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC conversion data alignment.
2709:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2710:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2711:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2712:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2713:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2714:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2715:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_SetDataAlignment
2716:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2717:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DataAlignment This parameter can be one of the following values:
2718:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2719:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2720:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2721:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetDataAlignment(ADC_TypeDef *ADCx, uint32_t DataAlignment)
2723:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_ALIGN, DataAlignment);
2725:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2726:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2727:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2728:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC conversion data alignment.
2729:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to reference manual for alignments formats
2730:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         dependencies to ADC resolutions.
2731:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     ALIGN          LL_ADC_GetDataAlignment
2732:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2733:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2734:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_RIGHT
2735:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DATA_ALIGN_LEFT
2736:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2737:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetDataAlignment(ADC_TypeDef *ADCx)
2738:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2739:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_ALIGN));
2740:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2741:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 53


2742:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2743:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC low power mode.
2744:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2745:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2746:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2747:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2748:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2749:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2750:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2751:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2752:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2753:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2754:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2755:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2756:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2757:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2758:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2759:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2760:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2761:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2762:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2763:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2764:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2765:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2766:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2767:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2768:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2769:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2770:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2771:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2772:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2773:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2774:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2775:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2776:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2777:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2778:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2779:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2780:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2781:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2782:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2783:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2784:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2785:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2786:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_SetLowPowerMode
2787:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2788:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  LowPowerMode This parameter can be one of the following values:
2789:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2790:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2791:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2792:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2793:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetLowPowerMode(ADC_TypeDef *ADCx, uint32_t LowPowerMode)
2794:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2795:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_AUTDLY, LowPowerMode);
2796:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2797:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2798:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 54


2799:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC low power mode:
2800:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC low power modes:
2801:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto wait": Dynamic low power mode,
2802:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions occurrences are limited to the minimum necessary
2803:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           in order to reduce power consumption.
2804:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           New ADC conversion starts only when the previous
2805:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           unitary conversion data (for ADC group regular)
2806:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or previous sequence conversions data (for ADC group injected)
2807:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           has been retrieved by user software.
2808:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           In the meantime, ADC remains idle: does not performs any
2809:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           other conversion.
2810:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This mode allows to automatically adapt the ADC conversions
2811:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           triggers to the speed of the software that reads the data.
2812:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Moreover, this avoids risk of overrun for low frequency
2813:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           applications.
2814:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           How to use this low power mode:
2815:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - It is not recommended to use with interruption or DMA
2816:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             since these modes have to clear immediately the EOC flag
2817:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (by CPU to free the IRQ pending event or by DMA).
2818:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Auto wait will work but fort a very short time, discarding
2819:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             its intended benefit (except specific case of high load of CPU
2820:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             or DMA transfers which can justify usage of auto wait).
2821:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Do use with polling: 1. Start conversion,
2822:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             2. Later on, when conversion data is needed: poll for end of
2823:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             conversion  to ensure that conversion is completed and
2824:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             retrieve ADC conversion data. This will trig another
2825:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC conversion start.
2826:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC low power mode "auto power-off" (feature available on
2827:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           this device if parameter LL_ADC_LP_AUTOPOWEROFF is available):
2828:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the ADC automatically powers-off after a conversion and
2829:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           automatically wakes up when a new conversion is triggered
2830:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (with startup time between trigger and start of sampling).
2831:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This feature can be combined with low power mode "auto wait".
2832:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   With ADC low power mode "auto wait", the ADC conversion data read
2833:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is corresponding to previous ADC conversion start, independently
2834:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of delay during which ADC was idle.
2835:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, the ADC conversion data may be outdated: does not
2836:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         correspond to the current voltage level on the selected
2837:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
2838:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AUTDLY         LL_ADC_GetLowPowerMode
2839:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2840:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2841:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_MODE_NONE
2842:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_LP_AUTOWAIT
2843:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2844:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetLowPowerMode(ADC_TypeDef *ADCx)
2845:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2846:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_AUTDLY));
2847:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2848:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2849:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2850:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC selected offset number 1, 2, 3 or 4.
2851:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of offset configuration:
2852:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC channel to which the offset programmed will be applied
2853:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (independently of channel mapped on ADC group regular
2854:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or group injected)
2855:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Offset level (offset to be subtracted from the raw
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 55


2856:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           converted data).
2857:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
2858:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
2859:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
2860:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function enables the offset, by default. It can be forced
2861:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to disable state using function LL_ADC_SetOffsetState().
2862:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If a channel is mapped on several offsets numbers, only the offset
2863:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with the lowest value is considered for the subtraction.
2864:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
2865:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
2866:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
2867:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
2868:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2869:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2870:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_SetOffset\n
2871:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1        LL_ADC_SetOffset\n
2872:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR1     OFFSET1_EN     LL_ADC_SetOffset\n
2873:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_SetOffset\n
2874:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_SetOffset\n
2875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffset\n
2876:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_SetOffset\n
2877:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_SetOffset\n
2878:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffset\n
2879:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_SetOffset\n
2880:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_SetOffset\n
2881:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffset
2882:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2883:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2884:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2885:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2886:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2887:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2888:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
2889:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2890:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2891:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
2892:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2893:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2894:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2895:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2896:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2897:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2898:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2899:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2900:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2901:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2902:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2903:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2904:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2905:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2906:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2907:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2908:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2909:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2910:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2911:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2912:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 56


2913:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2914:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2915:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2916:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2917:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2918:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2919:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2920:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2921:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
2922:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
2923:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
2924:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
2925:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
2926:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetLevel Value between Min_Data=0x000 and Max_Data=0xFFF
2927:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
2928:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
2929:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffset(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t Channel, uint32
2930:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
2931:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
2932:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2933:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
2934:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
2935:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | (Channel & ADC_CHANNEL_ID_NUMBER_MASK) | OffsetLevel);
2936:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
2937:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
2938:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
2939:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
2940:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Channel to which the offset programmed will be applied
2941:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (independently of channel mapped on ADC group regular
2942:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or group injected)
2943:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
2944:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
2945:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
2946:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
2947:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
2948:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2949:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
2950:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
2951:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
2952:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
2953:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
2954:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
2955:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
2956:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_CH     LL_ADC_GetOffsetChannel\n
2957:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_CH     LL_ADC_GetOffsetChannel\n
2958:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_CH     LL_ADC_GetOffsetChannel\n
2959:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_CH     LL_ADC_GetOffsetChannel
2960:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
2961:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
2962:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
2963:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
2964:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
2965:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
2966:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
2967:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
2968:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
2969:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 57


2970:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
2971:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
2972:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
2973:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
2974:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
2975:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
2976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
2977:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
2978:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
2979:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
2980:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
2981:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
2982:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
2983:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
2984:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
2985:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
2986:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
2987:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
2988:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
2989:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
2990:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
2991:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
2992:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
2993:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
2994:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
2995:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
2996:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
2997:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
2998:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
2999:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3000:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3001:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3002:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3003:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3004:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3005:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3006:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3007:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetChannel(ADC_TypeDef *ADCx, uint32_t Offsety)
3009:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3011:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_CH);
3013:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3014:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3015:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3016:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3017:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Offset level (offset to be subtracted from the raw
3018:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted data).
3019:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Caution: Offset format is dependent to ADC resolution:
3020:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset has to be left-aligned on bit 11, the LSB (right bits)
3021:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are set to 0.
3022:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1        LL_ADC_GetOffsetLevel\n
3023:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2        LL_ADC_GetOffsetLevel\n
3024:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3        LL_ADC_GetOffsetLevel\n
3025:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4        LL_ADC_GetOffsetLevel
3026:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 58


3027:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3028:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3029:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3030:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3031:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3032:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
3033:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3034:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetLevel(ADC_TypeDef *ADCx, uint32_t Offsety)
3035:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3036:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3037:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3038:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1);
3039:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3040:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3041:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3042:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set for the ADC selected offset number 1, 2, 3 or 4:
3043:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         force offset state disable or enable
3044:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without modifying offset channel or offset value.
3045:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function should be needed only in case of offset to be
3046:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled-disabled dynamically, and should not be needed in other cases:
3047:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function LL_ADC_SetOffset() automatically enables the offset.
3048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3049:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3051:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3052:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_SetOffsetState\n
3053:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_SetOffsetState\n
3054:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_SetOffsetState\n
3055:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_SetOffsetState
3056:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3057:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3058:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3059:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3060:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3061:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3062:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OffsetState This parameter can be one of the following values:
3063:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3064:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3065:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3066:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety, uint32_t OffsetStat
3068:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3070:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3072:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
3073:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              OffsetState);
3074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3075:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3076:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3077:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get for the ADC selected offset number 1, 2, 3 or 4:
3078:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         offset state disabled or enabled.
3079:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll OFR1     OFFSET1_EN     LL_ADC_GetOffsetState\n
3080:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR2     OFFSET2_EN     LL_ADC_GetOffsetState\n
3081:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR3     OFFSET3_EN     LL_ADC_GetOffsetState\n
3082:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         OFR4     OFFSET4_EN     LL_ADC_GetOffsetState
3083:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 59


3084:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Offsety This parameter can be one of the following values:
3085:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_1
3086:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_2
3087:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_3
3088:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_4
3089:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3090:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_DISABLE
3091:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OFFSET_ENABLE
3092:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3093:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOffsetState(ADC_TypeDef *ADCx, uint32_t Offsety)
3094:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3095:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->OFR1, Offsety);
3096:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3097:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t) READ_BIT(*preg, ADC_OFR1_OFFSET1_EN);
3098:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3099:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3100:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_SMPR1_SMPPLUS)
3101:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3102:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC sampling time common configuration impacting
3103:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3104:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3105:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3106:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3107:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3108:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_SetSamplingTimeCommonConfig
3109:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3110:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTimeCommonConfig This parameter can be one of the following values:
3111:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3112:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3113:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3114:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3115:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetSamplingTimeCommonConfig(ADC_TypeDef *ADCx, uint32_t SamplingTimeCom
3116:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3117:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SMPR1, ADC_SMPR1_SMPPLUS, SamplingTimeCommonConfig);
3118:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3119:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3120:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3121:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC sampling time common configuration impacting
3122:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings of sampling time channel wise.
3123:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMPPLUS        LL_ADC_GetSamplingTimeCommonConfig
3124:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3125:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3126:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_DEFAULT
3127:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5
3128:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3129:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetSamplingTimeCommonConfig(ADC_TypeDef *ADCx)
3130:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3131:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SMPR1, ADC_SMPR1_SMPPLUS));
3132:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3133:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_SMPR1_SMPPLUS */
3134:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3135:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3136:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3137:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3138:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3139:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Regular Configuration of ADC hierarchical scope: gr
3140:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 60


3141:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3142:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3143:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3144:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger source:
3145:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3146:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3147:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3148:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3149:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3150:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3151:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3152:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_REG_SetTriggerEdge().
3153:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3154:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3155:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3156:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3157:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3158:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3159:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_SetTriggerSource\n
3160:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_SetTriggerSource
3161:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3162:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3163:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3164:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3165:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3166:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3167:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3168:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3169:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3171:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3173:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3174:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3175:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3176:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3177:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3178:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3179:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3180:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3181:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3182:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3183:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3184:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN | ADC_CFGR_EXTSEL, TriggerSource);
3185:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3186:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3187:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3188:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source:
3189:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3190:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3191:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group regular trigger source is
3192:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3193:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3194:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3195:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_REG_GetTriggerSource(ADC1) == LL_ADC_REG_TRIG_SOFTWARE)")
3196:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_IsTriggerSourceSWStart.
3197:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 61


3198:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3199:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTSEL         LL_ADC_REG_GetTriggerSource\n
3200:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     EXTEN          LL_ADC_REG_GetTriggerSource
3201:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3202:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3203:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_SOFTWARE
3204:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO
3205:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_TRGO2
3206:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH1
3207:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH2
3208:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM1_CH3
3209:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_TRGO
3210:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM2_CH2
3211:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_TRGO
3212:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM3_CH4
3213:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_TRGO
3214:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM4_CH4
3215:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM6_TRGO
3216:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO
3217:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM8_TRGO2
3218:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_TIM15_TRGO
3219:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_EXTI_LINE11
3220:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3221:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerSource(ADC_TypeDef *ADCx)
3222:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3223:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->CFGR, ADC_CFGR_EXTSEL | ADC_CFGR_EXTEN);
3224:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3225:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3226:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_CFGR_EXTEN {0; 1; 2; 3}.                            */
3227:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ShiftExten = ((TriggerSource & ADC_CFGR_EXTEN) >> (ADC_REG_TRIG_EXTEN_BITOFFSET_POS - 2U
3228:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3229:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_CFGR_EXTEN and ADC_CFGR_EXTSEL         */
3230:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3231:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3232:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_REG_TRIG_SOURCE_MASK >> ShiftExten) & ADC_CFGR_EXTSEL)
3233:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_REG_TRIG_EDGE_MASK >> ShiftExten) & ADC_CFGR_EXTEN)
3234:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3235:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3236:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3237:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3238:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger source internal (SW start)
3239:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or external.
3240:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group regular trigger source set to external trigger,
3241:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3242:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_REG_GetTriggerSource().
3243:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_IsTriggerSourceSWStart
3244:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3245:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3246:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3247:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3248:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3249:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN) == (LL_ADC_REG_TRIG_SOFTWARE & ADC_CFGR_EXTEN)) ? 1
3251:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3252:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3253:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3254:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion trigger polarity.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 62


3255:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3256:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3257:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3258:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3259:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3260:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_SetTriggerEdge
3261:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3262:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3263:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3264:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3265:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3266:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3267:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3268:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3269:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3270:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_EXTEN, ExternalTriggerEdge);
3271:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3272:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3273:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3274:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion trigger polarity.
3275:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Applicable only for trigger source set to external trigger.
3276:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     EXTEN          LL_ADC_REG_GetTriggerEdge
3277:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3278:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3279:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISING
3280:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_FALLING
3281:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_TRIG_EXT_RISINGFALLING
3282:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3283:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetTriggerEdge(ADC_TypeDef *ADCx)
3284:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3285:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_EXTEN));
3286:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3287:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3288:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3289:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer length and scan direction.
3290:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3291:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3293:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3294:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3295:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3296:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3297:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3298:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3299:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3300:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3301:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3302:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3303:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3304:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3305:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function performs configuration of:
3306:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3307:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3308:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3309:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
3310:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3311:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 63


3312:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3313:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3314:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3315:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3316:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3317:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3318:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3319:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3320:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3321:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_SetSequencerLength
3322:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3323:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
3324:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3326:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3327:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3328:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3329:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3330:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3331:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3332:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3333:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3334:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3335:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3336:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3337:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3339:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3340:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3341:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3342:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
3343:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3344:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->SQR1, ADC_SQR1_L, SequencerNbRanks);
3345:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3346:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3347:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3348:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer length and scan direction.
3349:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC group regular sequencer features:
3350:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer fully configurable
3351:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerRanks()" available):
3352:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are configurable.
3354:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3355:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence.
3356:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3357:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from rank 1 to rank n).
3358:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3359:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerRanks()".
3360:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - For devices with sequencer not fully configurable
3361:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (function "LL_ADC_REG_SetSequencerChannels()" available):
3362:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer length and each rank affectation to a channel
3363:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are defined by channel number.
3364:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This function retrieves:
3365:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence length: Number of ranks in the scan sequence is
3366:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             defined by number of channels set in the sequence,
3367:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             rank of each channel is fixed by channel HW number.
3368:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (channel 0 fixed on rank 0, channel 1 fixed on rank1, ...).
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 64


3369:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - Sequence direction: Unless specified in parameters, sequencer
3370:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             scan direction is forward (from lowest channel number to
3371:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             highest channel number).
3372:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Sequencer ranks are selected using
3373:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           function "LL_ADC_REG_SetSequencerChannels()".
3374:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
3375:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
3376:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     L              LL_ADC_REG_GetSequencerLength
3377:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3378:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3379:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_DISABLE
3380:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_2RANKS
3381:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_3RANKS
3382:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_4RANKS
3383:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_5RANKS
3384:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_6RANKS
3385:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_7RANKS
3386:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_8RANKS
3387:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_9RANKS
3388:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_10RANKS
3389:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_11RANKS
3390:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_12RANKS
3391:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_13RANKS
3392:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_14RANKS
3393:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_15RANKS
3394:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_SCAN_ENABLE_16RANKS
3395:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3396:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerLength(ADC_TypeDef *ADCx)
3397:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3398:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->SQR1, ADC_SQR1_L));
3399:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3400:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3401:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3402:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequencer discontinuous mode:
3403:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3404:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3405:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3406:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3407:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC auto-injected mode
3408:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         and ADC group regular sequencer discontinuous mode.
3409:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3410:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3411:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3412:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3413:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_SetSequencerDiscont\n
3414:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_SetSequencerDiscont
3415:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3416:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
3417:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3418:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3419:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3420:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3421:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3422:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3423:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3424:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3425:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 65


3426:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3427:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3428:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
3429:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3430:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM, SeqDiscont);
3431:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3432:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3433:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3434:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequencer discontinuous mode:
3435:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
3436:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
3437:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DISCEN         LL_ADC_REG_GetSequencerDiscont\n
3438:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DISCNUM        LL_ADC_REG_GetSequencerDiscont
3439:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3440:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3441:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_DISABLE
3442:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_1RANK
3443:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_2RANKS
3444:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_3RANKS
3445:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_4RANKS
3446:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_5RANKS
3447:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_6RANKS
3448:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_7RANKS
3449:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_SEQ_DISCONT_8RANKS
3450:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3451:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerDiscont(ADC_TypeDef *ADCx)
3452:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3453:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DISCEN | ADC_CFGR_DISCNUM));
3454:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3455:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3456:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3457:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular sequence: channel on the selected
3458:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3459:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
3460:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Channels ordering into each rank of scan sequence:
3461:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever channel can be placed into whatever rank.
3462:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3463:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3464:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3465:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3466:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3467:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3468:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
3469:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
3470:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
3471:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
3472:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3473:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3474:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3475:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3476:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_SetSequencerRanks\n
3477:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_SetSequencerRanks\n
3478:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_SetSequencerRanks\n
3479:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_SetSequencerRanks\n
3480:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_SetSequencerRanks\n
3481:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_SetSequencerRanks\n
3482:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_SetSequencerRanks\n
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 66


3483:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_SetSequencerRanks\n
3484:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_SetSequencerRanks\n
3485:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_SetSequencerRanks\n
3486:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_SetSequencerRanks\n
3487:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_SetSequencerRanks\n
3488:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_SetSequencerRanks\n
3489:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_SetSequencerRanks\n
3490:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_SetSequencerRanks\n
3491:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_SetSequencerRanks
3492:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3493:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3494:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3495:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3496:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3497:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3498:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3499:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3500:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3501:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3502:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3503:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3504:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3505:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3506:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3507:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3508:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3509:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
3511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3512:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3513:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3514:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3515:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3516:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3517:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3518:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3519:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3520:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3521:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3522:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3523:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3524:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3525:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3526:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3527:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3528:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3529:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3530:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3531:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3532:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3533:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3534:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3535:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3536:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3537:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3538:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3539:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 67


3540:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3541:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3542:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3543:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3544:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3545:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3546:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
3547:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3548:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3549:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3550:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
3551:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3552:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
3553:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Rank".         */
3554:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
3555:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
3556:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK) >> A
3557:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3558:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
3559:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MASK),
3560:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
3561:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3562:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3563:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3564:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular sequence: channel on the selected
3565:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         scan sequence rank.
3566:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, ADC group regular sequencer is
3567:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         fully configurable: sequencer length and each rank
3568:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         affectation to a channel are configurable.
3569:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to description of function @ref LL_ADC_REG_SetSequencerLength().
3570:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
3571:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
3572:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
3573:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
3574:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
3575:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
3576:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
3577:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3578:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
3579:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
3580:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
3581:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
3582:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
3583:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SQR1     SQ1            LL_ADC_REG_GetSequencerRanks\n
3584:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ2            LL_ADC_REG_GetSequencerRanks\n
3585:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ3            LL_ADC_REG_GetSequencerRanks\n
3586:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR1     SQ4            LL_ADC_REG_GetSequencerRanks\n
3587:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ5            LL_ADC_REG_GetSequencerRanks\n
3588:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ6            LL_ADC_REG_GetSequencerRanks\n
3589:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ7            LL_ADC_REG_GetSequencerRanks\n
3590:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ8            LL_ADC_REG_GetSequencerRanks\n
3591:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR2     SQ9            LL_ADC_REG_GetSequencerRanks\n
3592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ10           LL_ADC_REG_GetSequencerRanks\n
3593:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ11           LL_ADC_REG_GetSequencerRanks\n
3594:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ12           LL_ADC_REG_GetSequencerRanks\n
3595:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ13           LL_ADC_REG_GetSequencerRanks\n
3596:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR3     SQ14           LL_ADC_REG_GetSequencerRanks\n
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 68


3597:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ15           LL_ADC_REG_GetSequencerRanks\n
3598:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SQR4     SQ16           LL_ADC_REG_GetSequencerRanks
3599:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3600:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
3601:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_1
3602:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_2
3603:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_3
3604:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_4
3605:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_5
3606:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_6
3607:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_7
3608:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_8
3609:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_9
3610:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_10
3611:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_11
3612:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_12
3613:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_13
3614:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_14
3615:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_15
3616:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_RANK_16
3617:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3618:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
3619:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
3620:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
3621:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
3622:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
3623:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
3624:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
3625:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
3626:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
3627:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
3628:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
3629:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
3630:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
3631:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
3632:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
3633:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
3634:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
3635:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
3636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
3637:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
3638:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
3639:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
3640:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
3641:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
3642:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
3643:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
3644:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
3645:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
3646:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
3647:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
3648:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
3649:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
3650:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
3651:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
3652:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
3653:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 69


3654:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
3655:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
3656:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
3657:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
3658:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3659:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
3660:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3661:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SQR1, ((Rank & ADC_REG_SQRX_REGOFFSET_MASK
3662:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3663:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(*preg,
3664:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               ADC_CHANNEL_ID_NUMBER_MASK_POSBIT0 << (Rank & ADC_REG_RANK_ID_SQRX_MA
3665:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_REG_RANK_ID_SQRX_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
3666:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
3667:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3668:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3669:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3670:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC continuous conversion mode on ADC group regular.
3671:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3672:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3673:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3674:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3675:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group regular
3676:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         continuous mode and sequencer discontinuous mode.
3677:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3678:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3679:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3680:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3681:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_SetContinuousMode
3682:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3683:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Continuous This parameter can be one of the following values:
3684:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3685:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3686:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3687:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3688:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetContinuousMode(ADC_TypeDef *ADCx, uint32_t Continuous)
3689:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3690:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_CONT, Continuous);
3691:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3692:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3693:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3694:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC continuous conversion mode on ADC group regular.
3695:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Description of ADC continuous conversion mode:
3696:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - single mode: one conversion per trigger
3697:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode: after the first trigger, following
3698:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           conversions launched successively automatically.
3699:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     CONT           LL_ADC_REG_GetContinuousMode
3700:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3701:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3702:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_SINGLE
3703:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_CONV_CONTINUOUS
3704:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3705:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetContinuousMode(ADC_TypeDef *ADCx)
3706:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3707:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_CONT));
3708:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3709:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3710:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 70


3711:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer: no transfer or
3712:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3713:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3714:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3715:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3716:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3717:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3718:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3719:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3720:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3721:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3723:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3725:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3726:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3727:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (overrun flag and interruption if enabled).
3728:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3729:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_SetMultiDMATransfer().
3730:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3731:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3732:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3733:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3734:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3735:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3736:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_SetDMATransfer\n
3737:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_SetDMATransfer
3738:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3739:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DMATransfer This parameter can be one of the following values:
3740:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3741:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3742:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3743:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3744:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3745:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDMATransfer(ADC_TypeDef *ADCx, uint32_t DMATransfer)
3746:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3747:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG, DMATransfer);
3748:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3749:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3750:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3751:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer: no transfer or
3752:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, and DMA requests mode.
3753:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If transfer by DMA selected, specifies the DMA requests
3754:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode:
3755:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
3756:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
3757:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
3758:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
3759:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
3760:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
3761:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
3762:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
3763:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
3764:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
3765:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
3766:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
3767:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 71


3768:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with several ADC instances: ADC multimode DMA
3769:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         settings are available using function @ref LL_ADC_GetMultiDMATransfer().
3770:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DMA source address (peripheral address),
3771:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_DMA_GetRegAddr().
3772:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DMAEN          LL_ADC_REG_GetDMATransfer\n
3773:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     DMACFG         LL_ADC_REG_GetDMATransfer
3774:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3775:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3776:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_NONE
3777:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_LIMITED
3778:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DMA_TRANSFER_UNLIMITED
3779:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3780:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDMATransfer(ADC_TypeDef *ADCx)
3781:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3782:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DMAEN | ADC_CFGR_DMACFG));
3783:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3784:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3785:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_CFGR_DFSDMCFG) &&defined(DFSDM1_Channel0)
3786:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3787:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular conversion data transfer to DFSDM.
3788:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   DFSDM transfer cannot be used if DMA transfer is enabled.
3789:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To configure DFSDM source address (peripheral address),
3790:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use the same function as for DMA transfer:
3791:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_DMA_GetRegAddr().
3792:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3793:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3794:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3795:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
3796:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3797:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3798:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  DFSDMTransfer This parameter can be one of the following values:
3799:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3800:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3801:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3802:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3803:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetDFSDMTransfer(ADC_TypeDef *ADCx, uint32_t DFSDMTransfer)
3804:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3805:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_DFSDMCFG, DFSDMTransfer);
3806:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3807:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3808:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3809:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data transfer to DFSDM.
3810:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     DFSDMCFG       LL_ADC_REG_GetDFSDMTransfer
3811:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3812:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3813:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_NONE
3814:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_DFSDM_TRANSFER_ENABLE
3815:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3816:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetDFSDMTransfer(ADC_TypeDef *ADCx)
3817:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3818:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_DFSDMCFG));
3819:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3820:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_CFGR_DFSDMCFG */
3821:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3822:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3823:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group regular behavior in case of overrun:
3824:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 72


3825:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Compatibility with devices without feature overrun:
3826:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         other devices without this feature have a behavior
3827:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         equivalent to data overwritten.
3828:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The default setting of overrun is data preserved.
3829:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, for compatibility with all devices, parameter
3830:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         overrun should be set to data overwritten.
3831:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3832:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3833:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
3834:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
3835:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_SetOverrun
3836:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3837:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Overrun This parameter can be one of the following values:
3838:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3839:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3840:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3841:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3842:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetOverrun(ADC_TypeDef *ADCx, uint32_t Overrun)
3843:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3844:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_OVRMOD, Overrun);
3845:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3846:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3847:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3848:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular behavior in case of overrun:
3849:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         data preserved or overwritten.
3850:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     OVRMOD         LL_ADC_REG_GetOverrun
3851:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3852:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3853:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_PRESERVED
3854:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_REG_OVR_DATA_OVERWRITTEN
3855:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3856:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_GetOverrun(ADC_TypeDef *ADCx)
3857:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3858:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_OVRMOD));
3859:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3860:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3861:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3862:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
3863:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3864:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3865:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Group_Injected Configuration of ADC hierarchical scope: g
3866:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
3867:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3868:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3869:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3870:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger source:
3871:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3872:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3873:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting trigger source to external trigger
3874:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         also set trigger polarity to rising edge
3875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (default setting for compatibility with some ADC on other
3876:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         STM32 families having this setting set by HW default value).
3877:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In case of need to modify trigger edge, use
3878:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         function @ref LL_ADC_INJ_SetTriggerEdge().
3879:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3880:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3881:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 73


3882:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3883:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3884:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3885:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_SetTriggerSource\n
3886:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_SetTriggerSource
3887:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3888:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
3889:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3890:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3891:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3892:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3893:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3894:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3895:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3896:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3897:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3898:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
3899:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3900:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3901:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3902:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3903:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3904:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3905:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3906:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3907:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3908:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
3909:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3910:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN, TriggerSource);
3911:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3912:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3913:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3914:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source:
3915:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or from external peripheral (timer event,
3916:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external interrupt line).
3917:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   To determine whether group injected trigger source is
3918:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal (SW start) or external, without detail
3919:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of which peripheral is selected as external trigger,
3920:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (equivalent to
3921:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         "if(LL_ADC_INJ_GetTriggerSource(ADC1) == LL_ADC_INJ_TRIG_SOFTWARE)")
3922:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_IsTriggerSourceSWStart.
3923:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Availability of parameters of trigger sources from timer
3924:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         depends on timers availability on the selected device.
3925:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_GetTriggerSource\n
3926:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_GetTriggerSource
3927:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3928:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
3929:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
3930:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
3931:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
3932:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
3933:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
3934:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
3935:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
3936:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
3937:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
3938:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 74


3939:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
3940:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
3941:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
3942:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
3943:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
3944:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
3945:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
3946:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3947:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerSource(ADC_TypeDef *ADCx)
3948:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3949:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t TriggerSource = READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTSEL | ADC_JSQR_JEXTEN);
3950:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3951:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Value for shift of {0; 4; 8; 12} depending on value of bitfield          */
3952:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* corresponding to ADC_JSQR_JEXTEN {0; 1; 2; 3}.                           */
3953:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t ShiftJexten = ((TriggerSource & ADC_JSQR_JEXTEN) >> (ADC_INJ_TRIG_EXTEN_BITOFFSET_POS - 
3954:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3955:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bitfield corresponding to ADC_JSQR_JEXTEN and ADC_JSQR_JEXTSEL       */
3956:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* to match with triggers literals definition.                              */
3957:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((TriggerSource
3958:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****            & (ADC_INJ_TRIG_SOURCE_MASK >> ShiftJexten) & ADC_JSQR_JEXTSEL)
3959:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****           | ((ADC_INJ_TRIG_EDGE_MASK >> ShiftJexten) & ADC_JSQR_JEXTEN)
3960:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****          );
3961:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3962:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3963:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3964:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger source internal (SW start)
3965:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             or external
3966:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of group injected trigger source set to external trigger,
3967:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         to determine which peripheral is selected as external trigger,
3968:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_INJ_GetTriggerSource.
3969:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_IsTriggerSourceSWStart
3970:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3971:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value "0" if trigger source external trigger
3972:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Value "1" if trigger source SW start.
3973:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3974:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsTriggerSourceSWStart(ADC_TypeDef *ADCx)
3975:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
3976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN) == (LL_ADC_INJ_TRIG_SOFTWARE & ADC_JSQR_JEXTEN)) ?
3977:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3978:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3979:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
3980:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger polarity.
3981:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
3982:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
3983:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
3984:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
3985:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
3986:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_SetTriggerEdge
3987:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
3988:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
3989:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
3990:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
3991:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
3992:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
3993:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
3994:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTriggerEdge(ADC_TypeDef *ADCx, uint32_t ExternalTriggerEdge)
3995:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 75


3996:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JEXTEN, ExternalTriggerEdge);
3997:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
3998:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
3999:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4000:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger polarity.
4001:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Applicable only for trigger source set to external trigger.
4002:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTEN         LL_ADC_INJ_GetTriggerEdge
4003:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4004:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4005:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4006:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4007:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4009:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTriggerEdge(ADC_TypeDef *ADCx)
4010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4011:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JEXTEN));
4012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4013:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4014:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4015:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer length and scan direction.
4016:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function performs configuration of:
4017:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4018:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4019:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4020:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4021:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4022:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4023:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4024:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4025:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4026:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_SetSequencerLength
4027:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4028:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4029:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4030:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4031:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4032:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4033:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4034:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4035:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerLength(ADC_TypeDef *ADCx, uint32_t SequencerNbRanks)
4036:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4037:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR, ADC_JSQR_JL, SequencerNbRanks);
4038:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4039:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4040:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4041:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer length and scan direction.
4042:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function retrieves:
4043:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence length: Number of ranks in the scan sequence.
4044:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Sequence direction: Unless specified in parameters, sequencer
4045:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           scan direction is forward (from rank 1 to rank n).
4046:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Sequencer disabled is equivalent to sequencer of 1 rank:
4047:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion on only 1 channel.
4048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JL             LL_ADC_INJ_GetSequencerLength
4049:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4051:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4052:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 76


4053:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4054:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4055:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4056:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerLength(ADC_TypeDef *ADCx)
4057:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4058:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->JSQR, ADC_JSQR_JL));
4059:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4060:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4061:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4062:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequencer discontinuous mode:
4063:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4064:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4065:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4066:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_SetSequencerDiscont
4068:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SeqDiscont This parameter can be one of the following values:
4070:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4072:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4073:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerDiscont(ADC_TypeDef *ADCx, uint32_t SeqDiscont)
4075:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4076:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JDISCEN, SeqDiscont);
4077:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4078:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4079:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4080:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequencer discontinuous mode:
4081:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence subdivided and scan conversions interrupted every selected
4082:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         number of ranks.
4083:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JDISCEN        LL_ADC_INJ_GetSequencerDiscont
4084:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4085:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4086:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_DISABLE
4087:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_DISCONT_1RANK
4088:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4089:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerDiscont(ADC_TypeDef *ADCx)
4090:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4091:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JDISCEN));
4092:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4093:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4094:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4095:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected sequence: channel on the selected
4096:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4097:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4098:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4099:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4100:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4101:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4102:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4103:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4104:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4105:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4106:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4107:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4108:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4109:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_SetSequencerRanks\n
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 77


4110:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_SetSequencerRanks\n
4111:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_SetSequencerRanks\n
4112:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_SetSequencerRanks
4113:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4114:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4115:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4116:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4117:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4118:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4119:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4120:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4121:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4122:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4123:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4124:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4125:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4126:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4127:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4128:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4129:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4130:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4131:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4132:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4133:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4134:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4135:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4136:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4137:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4138:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4139:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4140:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4141:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4142:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4143:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4144:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4145:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4146:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4147:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4148:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4149:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4150:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4151:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4152:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4153:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4154:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4155:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4156:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4157:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4158:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4159:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank, uint32_t Channe
4160:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4161:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Channel" with bits position          */
4162:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on parameter "Rank".                               */
4163:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rank" and "Channel" are used with masks because containing   */
4164:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4165:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4166:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Rank & ADC_INJ
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 78


4167:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ((Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) << (Ra
4168:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4169:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4171:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected sequence: channel on the selected
4172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sequence rank.
4173:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Depending on devices and packages, some channels may not be available.
4174:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for channels availability.
4175:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
4176:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
4177:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
4178:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
4179:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
4180:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4181:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
4182:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
4183:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
4184:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
4185:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
4186:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JSQ1           LL_ADC_INJ_GetSequencerRanks\n
4187:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_GetSequencerRanks\n
4188:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_GetSequencerRanks\n
4189:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_GetSequencerRanks
4190:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4191:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank This parameter can be one of the following values:
4192:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_1
4193:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_2
4194:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_3
4195:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_RANK_4
4196:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4197:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4198:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4199:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4200:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4201:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4202:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4203:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4204:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4205:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4206:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4207:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4208:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4209:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4210:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4211:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4212:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4213:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4214:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4215:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4216:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4217:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4218:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4219:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4220:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4221:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4222:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4223:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 79


4224:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4225:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4226:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4227:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4228:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4229:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4230:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4231:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4232:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4233:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4234:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1, 2, 3, 4) For ADC channel read back from ADC register,
4235:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      comparison with internal channel parameter to be done
4236:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *                      using helper macro @ref __LL_ADC_CHANNEL_INTERNAL_TO_EXTERNAL().
4237:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4238:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetSequencerRanks(ADC_TypeDef *ADCx, uint32_t Rank)
4239:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4240:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)((READ_BIT(ADCx->JSQR,
4241:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                               (ADC_CHANNEL_ID_NUMBER_MASK >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS) <
4242:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                      >> (Rank & ADC_INJ_RANK_ID_JSQR_MASK)) << ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS
4243:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4244:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4245:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4246:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4247:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected conversion trigger:
4248:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4249:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This mode can be used to extend number of data registers
4250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         updated after one ADC conversion trigger and with data
4251:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         permanently kept (not erased by successive conversions of scan of
4252:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC sequencer ranks), up to 5 data registers:
4253:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         1 data register on ADC group regular, 4 data registers
4254:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group injected.
4255:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC group injected injected trigger source is set to an
4256:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         external trigger, this feature must be must be set to
4257:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent trigger.
4258:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC group injected automatic trigger is compliant only with
4259:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group injected trigger source set to SW start, without any
4260:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         further action on  ADC group injected conversion start or stop:
4261:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         in this case, ADC group injected is controlled only
4262:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         from ADC group regular.
4263:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   It is not possible to enable both ADC group injected
4264:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         auto-injected mode and sequencer discontinuous mode.
4265:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4266:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4267:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4268:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4269:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_SetTrigAuto
4270:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4271:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TrigAuto This parameter can be one of the following values:
4272:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4273:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4274:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4275:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4276:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigAuto(ADC_TypeDef *ADCx, uint32_t TrigAuto)
4277:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4278:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JAUTO, TrigAuto);
4279:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4280:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 80


4281:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4282:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion trigger:
4283:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         independent or from ADC group regular.
4284:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JAUTO          LL_ADC_INJ_GetTrigAuto
4285:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4286:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4287:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_INDEPENDENT
4288:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_FROM_GRP_REGULAR
4289:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4290:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetTrigAuto(ADC_TypeDef *ADCx)
4291:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JAUTO));
4293:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4294:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4295:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4296:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC group injected contexts queue mode.
4297:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4298:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4299:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4300:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4301:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is disabled:
4302:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - only 1 sequence can be configured
4303:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and is active perpetually.
4304:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If contexts queue is enabled:
4305:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - up to 2 contexts can be queued
4306:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           and are checked in and out as a FIFO stack (first-in, first-out).
4307:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If a new context is set when queues is full, error is triggered
4308:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           by interruption "Injected Queue Overflow".
4309:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Two behaviors are possible when all contexts have been processed:
4310:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the contexts queue can maintain the last context active perpetually
4311:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           or can be empty and injected group triggers are disabled.
4312:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Triggers can be only external (not internal SW start)
4313:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Caution: The sequence must be fully configured in one time
4314:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           (one write of register JSQR makes a check-in of a new context
4315:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           into the queue).
4316:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Therefore functions to set separately injected trigger and
4317:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           sequencer channels cannot be used, register JSQR must be set
4318:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           using function @ref LL_ADC_INJ_ConfigQueueContext().
4319:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This parameter can be modified only when no conversion is on going
4320:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4321:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A modification of the context mode (bit JQDIS) causes the contexts
4322:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         queue to be flushed and the register JSQR is cleared.
4323:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4324:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4326:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4327:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_SetQueueMode\n
4328:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_SetQueueMode
4329:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4330:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  QueueMode This parameter can be one of the following values:
4331:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4332:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4333:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4334:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4335:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4336:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetQueueMode(ADC_TypeDef *ADCx, uint32_t QueueMode)
4337:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 81


4338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS, QueueMode);
4339:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4340:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4341:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4342:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected context queue mode.
4343:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     JQM            LL_ADC_INJ_GetQueueMode\n
4344:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JQDIS          LL_ADC_INJ_GetQueueMode
4345:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4346:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4347:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_DISABLE
4348:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_LAST_ACTIVE
4349:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_QUEUE_2CONTEXTS_END_EMPTY
4350:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4351:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_GetQueueMode(ADC_TypeDef *ADCx)
4352:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR, ADC_CFGR_JQM | ADC_CFGR_JQDIS));
4354:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4355:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4356:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4357:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set one context on ADC group injected that will be checked in
4358:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         contexts queue.
4359:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   A context is a setting of group injected sequencer:
4360:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - group injected trigger
4361:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer length
4362:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - sequencer ranks
4363:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This function is intended to be used when contexts queue is enabled,
4364:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         because the sequence must be fully configured in one time
4365:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (functions to set separately injected trigger and sequencer channels
4366:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         cannot be used):
4367:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to function @ref LL_ADC_INJ_SetQueueMode().
4368:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In the contexts queue, only the active context can be read.
4369:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         The parameters of this function can be read using functions:
4370:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerSource()
4371:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetTriggerEdge()
4372:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_GetSequencerRanks()
4373:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, to measure internal channels (VrefInt,
4374:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TempSensor, ...), measurement paths to internal channels must be
4375:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         enabled separately.
4376:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This can be done using function @ref LL_ADC_SetCommonPathInternalCh().
4377:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, some fast channels are available: fast analog inputs
4378:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         coming from GPIO pads (ADC_IN1..5).
4379:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4380:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4381:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must not be disabled. Can be enabled with or without conversion
4382:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on going on either groups regular or injected.
4383:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll JSQR     JEXTSEL        LL_ADC_INJ_ConfigQueueContext\n
4384:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JEXTEN         LL_ADC_INJ_ConfigQueueContext\n
4385:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JL             LL_ADC_INJ_ConfigQueueContext\n
4386:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ1           LL_ADC_INJ_ConfigQueueContext\n
4387:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ2           LL_ADC_INJ_ConfigQueueContext\n
4388:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ3           LL_ADC_INJ_ConfigQueueContext\n
4389:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         JSQR     JSQ4           LL_ADC_INJ_ConfigQueueContext
4390:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4391:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  TriggerSource This parameter can be one of the following values:
4392:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_SOFTWARE
4393:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO
4394:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_TRGO2
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 82


4395:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM1_CH4
4396:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_TRGO
4397:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM2_CH1
4398:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_TRGO
4399:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH1
4400:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH3
4401:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM3_CH4
4402:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM4_TRGO
4403:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM6_TRGO
4404:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_CH4
4405:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO
4406:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM8_TRGO2
4407:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_TIM15_TRGO
4408:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_EXTI_LINE15
4409:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ExternalTriggerEdge This parameter can be one of the following values:
4410:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISING
4411:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_FALLING
4412:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_TRIG_EXT_RISINGFALLING
4413:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4414:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Note: This parameter is discarded in case of SW start:
4415:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *               parameter "TriggerSource" set to "LL_ADC_INJ_TRIG_SOFTWARE".
4416:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SequencerNbRanks This parameter can be one of the following values:
4417:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_DISABLE
4418:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_2RANKS
4419:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_3RANKS
4420:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_INJ_SEQ_SCAN_ENABLE_4RANKS
4421:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank1_Channel This parameter can be one of the following values:
4422:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4423:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4424:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4425:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4426:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4427:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4428:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4429:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4430:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4431:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4432:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4433:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4434:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4435:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4436:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4437:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4438:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4439:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4440:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4441:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4442:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4443:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4444:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4445:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4446:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4447:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4448:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4449:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4450:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4451:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 83


4452:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4453:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4454:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4455:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4456:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4457:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4458:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4459:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank2_Channel This parameter can be one of the following values:
4460:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4461:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4462:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4463:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4464:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4465:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4466:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4467:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4468:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4469:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4470:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4471:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4472:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4473:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4474:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4475:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4476:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4477:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4478:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4479:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4480:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4481:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4482:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4483:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4484:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4485:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4486:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4487:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4488:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4489:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4490:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4491:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4492:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4493:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4494:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4495:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4496:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4497:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank3_Channel This parameter can be one of the following values:
4498:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4499:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4500:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4501:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4502:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4503:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4504:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4505:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4506:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4507:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4508:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 84


4509:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4512:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4513:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4514:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4515:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4516:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4517:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4518:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4519:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4520:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4521:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4522:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4523:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4524:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4525:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4526:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4527:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4528:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4529:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4530:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4531:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4532:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4533:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4534:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4535:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Rank4_Channel This parameter can be one of the following values:
4536:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4537:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4538:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4539:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4540:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4541:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4542:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4543:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4544:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4545:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4546:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4547:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4548:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4549:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4550:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4551:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4552:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4553:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4554:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4555:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4556:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4557:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4558:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4559:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4560:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4561:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4562:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4563:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4564:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4565:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 85


4566:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4567:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4568:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4569:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4570:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4571:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4572:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4573:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4574:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4575:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_ConfigQueueContext(ADC_TypeDef *ADCx,
4576:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t TriggerSource,
4577:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t ExternalTriggerEdge,
4578:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t SequencerNbRanks,
4579:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank1_Channel,
4580:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank2_Channel,
4581:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank3_Channel,
4582:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    uint32_t Rank4_Channel)
4583:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4584:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "Rankx_Channel" with bits position    */
4585:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register depending on literal "LL_ADC_INJ_RANK_x".                    */
4586:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "Rankx_Channel" and "LL_ADC_INJ_RANK_x" are used with masks   */
4587:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* because containing other bits reserved for other purpose.                */
4588:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If parameter "TriggerSource" is set to SW start, then parameter          */
4589:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "ExternalTriggerEdge" is discarded.                                      */
4590:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t is_trigger_not_sw = (uint32_t)((TriggerSource != LL_ADC_INJ_TRIG_SOFTWARE) ? 1UL : 0UL);
4591:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->JSQR,
4592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTSEL |
4593:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JEXTEN  |
4594:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ4    |
4595:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ3    |
4596:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ2    |
4597:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JSQ1    |
4598:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_JSQR_JL,
4599:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (TriggerSource & ADC_JSQR_JEXTSEL)          |
4600:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (ExternalTriggerEdge * (is_trigger_not_sw)) |
4601:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank4_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4602:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank3_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4603:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank2_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4604:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (((Rank1_Channel & ADC_CHANNEL_ID_NUMBER_MASK) >> ADC_CHANNEL_ID_NUMBER_BITOFFSET_POS)
4605:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SequencerNbRanks
4606:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****             );
4607:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4608:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4609:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4610:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4611:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4612:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4613:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Channels Configuration of ADC hierarchical scope: channels
4614:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4615:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4616:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4617:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4618:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set sampling time of the selected ADC channel
4619:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4620:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4621:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4622:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of internal channel (VrefInt, TempSensor, ...) to be
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 86


4623:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         converted:
4624:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         sampling time constraints must be respected (sampling time can be
4625:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         adjusted in function of ADC clock frequency and sampling time
4626:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         setting).
4627:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet for timings values (parameters TS_vrefint,
4628:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TS_temp, ...).
4629:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4630:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4631:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
4632:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4633:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4634:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4635:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC conversion of internal channel (VrefInt,
4636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temperature sensor, ...), a sampling time minimum value
4637:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required.
4638:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet.
4639:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4640:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4641:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4642:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4643:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_SetChannelSamplingTime\n
4644:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_SetChannelSamplingTime\n
4645:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_SetChannelSamplingTime\n
4646:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_SetChannelSamplingTime\n
4647:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_SetChannelSamplingTime\n
4648:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_SetChannelSamplingTime\n
4649:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_SetChannelSamplingTime\n
4650:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_SetChannelSamplingTime\n
4651:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_SetChannelSamplingTime\n
4652:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_SetChannelSamplingTime\n
4653:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_SetChannelSamplingTime\n
4654:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_SetChannelSamplingTime\n
4655:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_SetChannelSamplingTime\n
4656:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_SetChannelSamplingTime\n
4657:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_SetChannelSamplingTime\n
4658:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_SetChannelSamplingTime\n
4659:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_SetChannelSamplingTime\n
4660:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_SetChannelSamplingTime\n
4661:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_SetChannelSamplingTime
4662:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4663:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4664:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4665:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4666:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4667:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4668:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4669:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4670:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4671:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4672:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4673:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4674:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4675:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4676:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4677:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4678:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4679:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 87


4680:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4681:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4682:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4683:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4684:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4685:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4686:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4687:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4688:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4689:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4690:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4691:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4692:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4693:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4694:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4695:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4696:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
4697:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4698:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4699:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4700:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4701:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SamplingTime This parameter can be one of the following values:
4702:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4703:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4704:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4705:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4706:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4707:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4708:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4709:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4710:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4711:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4712:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4713:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4714:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4715:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4716:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sa
4717:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4718:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "SamplingTime" with bits position     */
4719:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "Channel".      */
4720:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameter "Channel" is used with masks because containing                */
4721:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* other bits reserved for other purpose.                                   */
4722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOFFSET_M
4723:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
4725:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4726:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SamplingTime   << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
4727:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4728:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4729:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4730:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get sampling time of the selected ADC channel
4731:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Unit: ADC clock cycles.
4732:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this device, sampling time is on channel scope: independently
4733:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         of channel mapped on ADC group regular or injected.
4734:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Conversion time is the addition of sampling time and processing time.
4735:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         On this STM32 series, ADC processing time is:
4736:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 12.5 ADC clock cycles at ADC resolution 12 bits
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 88


4737:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 10.5 ADC clock cycles at ADC resolution 10 bits
4738:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 8.5 ADC clock cycles at ADC resolution 8 bits
4739:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - 6.5 ADC clock cycles at ADC resolution 6 bits
4740:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll SMPR1    SMP0           LL_ADC_GetChannelSamplingTime\n
4741:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP1           LL_ADC_GetChannelSamplingTime\n
4742:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP2           LL_ADC_GetChannelSamplingTime\n
4743:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP3           LL_ADC_GetChannelSamplingTime\n
4744:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP4           LL_ADC_GetChannelSamplingTime\n
4745:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP5           LL_ADC_GetChannelSamplingTime\n
4746:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP6           LL_ADC_GetChannelSamplingTime\n
4747:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP7           LL_ADC_GetChannelSamplingTime\n
4748:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP8           LL_ADC_GetChannelSamplingTime\n
4749:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR1    SMP9           LL_ADC_GetChannelSamplingTime\n
4750:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP10          LL_ADC_GetChannelSamplingTime\n
4751:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP11          LL_ADC_GetChannelSamplingTime\n
4752:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP12          LL_ADC_GetChannelSamplingTime\n
4753:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP13          LL_ADC_GetChannelSamplingTime\n
4754:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP14          LL_ADC_GetChannelSamplingTime\n
4755:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP15          LL_ADC_GetChannelSamplingTime\n
4756:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP16          LL_ADC_GetChannelSamplingTime\n
4757:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP17          LL_ADC_GetChannelSamplingTime\n
4758:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         SMPR2    SMP18          LL_ADC_GetChannelSamplingTime
4759:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4760:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4761:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_0
4762:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1            (7)
4763:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2            (7)
4764:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3            (7)
4765:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4            (7)
4766:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5            (7)
4767:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4768:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4769:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4770:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4771:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4772:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4773:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4774:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4775:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4776:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4777:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_16
4778:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_17
4779:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_18
4780:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VREFINT      (1)
4781:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_TEMPSENSOR   (4)
4782:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_VBAT         (4)
4783:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1         (5)
4784:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2         (5)
4785:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC2 (2)(6)
4786:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC2 (2)(6)
4787:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH1_ADC3 (3)(6)
4788:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_DAC1CH2_ADC3 (3)(6)
4789:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4790:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
4791:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
4792:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
4793:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.\n
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 89


4794:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
4795:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.\n
4796:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (7) On STM32L4, fast channel (0.188 us for 12-bit resolution (ADC conversion rate up to
4797:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Other channels are slow channels (0.238 us for 12-bit resolution (ADC conversion ra
4798:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
4799:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_2CYCLES_5   (1)
4800:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_6CYCLES_5
4801:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_12CYCLES_5
4802:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_24CYCLES_5
4803:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_47CYCLES_5
4804:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_92CYCLES_5
4805:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_247CYCLES_5
4806:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SAMPLINGTIME_640CYCLES_5
4807:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
4808:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On some devices, ADC sampling time 2.5 ADC clock cycles
4809:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             can be replaced by 3.5 ADC clock cycles.
4810:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Refer to function @ref LL_ADC_SetSamplingTimeCommonConfig().
4811:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4812:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSamplingTime(ADC_TypeDef *ADCx, uint32_t Channel)
4813:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4814:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->SMPR1, ((Channel & ADC_CHANNEL_SMPRX_REGOF
4815:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4816:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
4817:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_
4818:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BITOFFSET_P
4819:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
4820:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4821:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4822:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4823:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set mode single-ended or differential input of the selected
4824:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4825:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Channel ending is on channel scope: independently of channel mapped
4826:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC group regular or injected.
4827:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         In differential mode: Differential measurement is carried out
4828:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         between the selected channel 'i' (positive input) and
4829:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         channel 'i+1' (negative input). Only channel 'i' has to be
4830:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured, channel 'i+1' is configured automatically.
4831:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4832:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4833:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4834:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4835:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4836:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4837:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4838:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4839:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For ADC channels configured in differential mode, both inputs
4840:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         should be biased at (Vref+)/2 +/-200mV.
4841:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (Vref+ is the analog voltage reference)
4842:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4843:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
4844:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
4845:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected.
4846:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4847:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_SetChannelSingleDiff
4848:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4849:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be one of the following values:
4850:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 90


4851:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4852:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4853:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4854:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
4855:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4856:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4857:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4858:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4859:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4860:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4861:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4862:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4863:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4864:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4865:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be a combination of the following values:
4866:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
4867:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
4868:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
4869:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4870:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel, uint32_t Sing
4871:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4872:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Bits of channels in single or differential mode are set only for         */
4873:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* differential mode (for single mode, mask of bits allowed to be set is    */
4874:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* shifted out of range of bits of channels in single or differential mode. */
4875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->DIFSEL,
4876:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
4877:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (Channel & ADC_SINGLEDIFF_CHANNEL_MASK) & (ADC_DIFSEL_DIFSEL >> (SingleDiff & ADC_SING
4878:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4879:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4880:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4881:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get mode single-ended or differential input of the selected
4882:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC channel.
4883:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4884:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4885:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Therefore, to ensure a channel is configured in single-ended mode,
4886:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the configuration of channel itself and the channel 'i-1' must be
4887:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         read back (to ensure that the selected channel channel has not been
4888:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         configured in differential mode by the previous channel).
4889:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Refer to Reference Manual to ensure the selected channel is
4890:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         available in differential mode.
4891:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         For example, internal channels (VrefInt, TempSensor, ...) are
4892:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         not available in differential mode.
4893:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   When configuring a channel 'i' in differential mode,
4894:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the channel 'i+1' is not usable separately.
4895:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On STM32L4, channels 16, 17, 18 of ADC1, ADC2, ADC3 (if available)
4896:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are internally fixed to single-ended inputs configuration.
4897:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   One or several values can be selected. In this case, the value
4898:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         returned is null if all channels are in single ended-mode.
4899:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Example: (LL_ADC_CHANNEL_4 | LL_ADC_CHANNEL_12 | ...)
4900:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DIFSEL   DIFSEL         LL_ADC_GetChannelSingleDiff
4901:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4902:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Channel This parameter can be a combination of the following values:
4903:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_1
4904:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_2
4905:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_3
4906:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_4
4907:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_5
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 91


4908:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_6
4909:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_7
4910:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_8
4911:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_9
4912:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_10
4913:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_11
4914:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_12
4915:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_13
4916:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_14
4917:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_CHANNEL_15
4918:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: channel in single-ended mode, else: channel in differential mode
4919:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4920:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetChannelSingleDiff(ADC_TypeDef *ADCx, uint32_t Channel)
4921:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
4922:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DIFSEL, (Channel & ADC_SINGLEDIFF_CHANNEL_MASK)));
4923:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
4924:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4925:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4926:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
4927:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4928:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4929:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_AnalogWatchdog Configuration of ADC transversal scope: an
4930:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
4931:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
4932:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
4933:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
4934:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog monitored channels:
4935:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a single channel, multiple channels or all channels,
4936:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on ADC groups regular and-or injected.
4937:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Once monitored channels are selected, analog watchdog
4938:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled.
4939:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of need to define a single channel to monitor
4940:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with analog watchdog from sequencer channel definition,
4941:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use helper macro @ref __LL_ADC_ANALOGWD_CHANNEL_GROUP().
4942:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
4943:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
4944:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
4945:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
4946:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
4947:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
4948:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
4949:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
4950:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
4951:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
4952:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
4953:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
4954:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
4955:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
4956:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
4957:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
4958:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
4959:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
4960:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
4961:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
4962:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
4963:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
4964:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 92


4965:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
4966:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
4967:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_SetAnalogWDMonitChannels\n
4968:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_SetAnalogWDMonitChannels\n
4969:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_SetAnalogWDMonitChannels\n
4970:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_SetAnalogWDMonitChannels\n
4971:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_SetAnalogWDMonitChannels\n
4972:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_SetAnalogWDMonitChannels
4973:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
4974:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
4975:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
4976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
4977:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
4978:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDChannelGroup This parameter can be one of the following values:
4979:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
4980:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
4981:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
4982:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
4983:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
4984:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
4985:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
4986:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
4987:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
4988:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
4989:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
4990:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
4991:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
4992:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
4993:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
4994:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
4995:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
4996:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
4997:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
4998:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
4999:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5000:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5001:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5002:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5003:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5004:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5005:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5006:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5007:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5009:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5011:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5013:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5014:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5015:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5016:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5017:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5018:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5019:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5020:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5021:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 93


5022:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
5023:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5024:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5025:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5026:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5027:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5028:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5029:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5030:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5031:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5032:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5033:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5034:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5035:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5036:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5037:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5038:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5039:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5040:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG          (0)(1)
5041:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_INJ          (0)(1)
5042:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VREFINT_REG_INJ         (1)
5043:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG       (0)(4)
5044:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_INJ       (0)(4)
5045:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_TEMPSENSOR_REG_INJ      (4)
5046:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG             (0)(4)
5047:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_INJ             (0)(4)
5048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_VBAT_REG_INJ            (4)
5049:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG          (0)(2)(5)
5050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_INJ          (0)(2)(5)
5051:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_REG_INJ         (2)(5)
5052:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG          (0)(2)(5)
5053:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_INJ          (0)(2)(5)
5054:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_REG_INJ         (2)(5)
5055:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG     (0)(2)(6)
5056:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_INJ     (0)(2)(6)
5057:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC2_REG_INJ    (2)(6)
5058:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG     (0)(2)(6)
5059:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_INJ     (0)(2)(6)
5060:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC2_REG_INJ    (2)(6)
5061:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG     (0)(3)(6)
5062:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_INJ     (0)(3)(6)
5063:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH1_ADC3_REG_INJ    (3)(6)
5064:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG     (0)(3)(6)
5065:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_INJ     (0)(3)(6)
5066:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CH_DAC1CH2_ADC3_REG_INJ    (3)(6)
5067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5068:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.\n
5069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On STM32L4, parameter available only on ADC instance: ADC1.\n
5070:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) On STM32L4, parameter available only on ADC instance: ADC2.\n
5071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) On STM32L4, parameter available only on ADC instance: ADC3.\n
5072:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (4) On STM32L4, parameter available only on ADC instances: ADC1, ADC3.
5073:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (5) On STM32L4, parameter available on devices with only 1 ADC instance.\n
5074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (6) On STM32L4, parameter available on devices with several ADC instances.
5075:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5076:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5077:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5078:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 94


5079:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDChannelGroup" with bits position  */
5080:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* in register and register position depending on parameter "AWDy".         */
5081:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDChannelGroup" and "AWDy" are used with masks because      */
5082:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5083:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK) >> AD
5084:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC_AWD_C
5085:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5086:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5087:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDy & ADC_AWD_CR_ALL_CHANNEL_MASK),
5088:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDChannelGroup & AWDy);
5089:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5090:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5091:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5092:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog monitored channel.
5093:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Usage of the returned channel number:
5094:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To reinject this channel into another function LL_ADC_xxx:
5095:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           the returned channel number is only partly formatted on definition
5096:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           of literals LL_ADC_CHANNEL_x. Therefore, it has to be compared
5097:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           with parts of literals LL_ADC_CHANNEL_x or using
5098:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           helper macro @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5099:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Then the selected literal LL_ADC_CHANNEL_x can be used
5100:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           as parameter for another function.
5101:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - To get the channel number in decimal format:
5102:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           process the returned value with the helper macro
5103:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           @ref __LL_ADC_CHANNEL_TO_DECIMAL_NB().
5104:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           Applicable only when the analog watchdog is set to monitor
5105:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           one channel.
5106:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5107:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5108:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5109:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5110:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5111:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5112:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5113:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5114:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5115:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5116:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5117:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5118:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5119:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5120:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5121:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5122:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5123:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5124:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5125:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5126:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5127:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5128:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5129:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5130:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5131:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR     AWD1CH         LL_ADC_GetAnalogWDMonitChannels\n
5132:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1SGL        LL_ADC_GetAnalogWDMonitChannels\n
5133:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     AWD1EN         LL_ADC_GetAnalogWDMonitChannels\n
5134:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR     JAWD1EN        LL_ADC_GetAnalogWDMonitChannels\n
5135:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD2CR   AWD2CH         LL_ADC_GetAnalogWDMonitChannels\n
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 95


5136:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         AWD3CR   AWD3CH         LL_ADC_GetAnalogWDMonitChannels
5137:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5138:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5139:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5140:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2 (1)
5141:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3 (1)
5142:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5143:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) On this AWD number, monitored channel can be retrieved
5144:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             if only 1 channel is programmed (or none or all channels).
5145:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             This function cannot retrieve monitored channel if
5146:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             multiple channels are programmed simultaneously
5147:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             by bitfield.
5148:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5149:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_DISABLE
5150:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG        (0)
5151:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_INJ        (0)
5152:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_ALL_CHANNELS_REG_INJ
5153:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG           (0)
5154:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_INJ           (0)
5155:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_0_REG_INJ
5156:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG           (0)
5157:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_INJ           (0)
5158:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_1_REG_INJ
5159:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG           (0)
5160:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_INJ           (0)
5161:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_2_REG_INJ
5162:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG           (0)
5163:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_INJ           (0)
5164:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_3_REG_INJ
5165:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG           (0)
5166:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_INJ           (0)
5167:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_4_REG_INJ
5168:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG           (0)
5169:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_INJ           (0)
5170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_5_REG_INJ
5171:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG           (0)
5172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_INJ           (0)
5173:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_6_REG_INJ
5174:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG           (0)
5175:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_INJ           (0)
5176:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_7_REG_INJ
5177:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG           (0)
5178:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_INJ           (0)
5179:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_8_REG_INJ
5180:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG           (0)
5181:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_INJ           (0)
5182:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_9_REG_INJ
5183:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG          (0)
5184:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_INJ          (0)
5185:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_10_REG_INJ
5186:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG          (0)
5187:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_INJ          (0)
5188:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_11_REG_INJ
5189:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG          (0)
5190:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_INJ          (0)
5191:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_12_REG_INJ
5192:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG          (0)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 96


5193:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_INJ          (0)
5194:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_13_REG_INJ
5195:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG          (0)
5196:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_INJ          (0)
5197:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_14_REG_INJ
5198:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG          (0)
5199:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_INJ          (0)
5200:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_15_REG_INJ
5201:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG          (0)
5202:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_INJ          (0)
5203:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_16_REG_INJ
5204:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG          (0)
5205:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_INJ          (0)
5206:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_17_REG_INJ
5207:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG          (0)
5208:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_INJ          (0)
5209:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_CHANNEL_18_REG_INJ
5210:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5211:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (0) On STM32L4, parameter available only on analog watchdog number: AWD1.
5212:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5213:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDMonitChannels(ADC_TypeDef *ADCx, uint32_t AWDy)
5214:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5215:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->CFGR, ((AWDy & ADC_AWD_CRX_REGOFFSET_MASK)
5216:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    + ((AWDy & ADC_AWD_CR12_REGOFFSETGAP_MASK) * ADC
5217:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5218:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   uint32_t AnalogWDMonitChannels = (READ_BIT(*preg, AWDy) & ADC_AWD_CR_ALL_CHANNEL_MASK);
5219:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5220:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* If "AnalogWDMonitChannels" == 0, then the selected AWD is disabled       */
5221:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* (parameter value LL_ADC_AWD_DISABLE).                                    */
5222:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Else, the selected AWD is enabled and is monitoring a group of channels  */
5223:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* or a single channel.                                                     */
5224:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   if (AnalogWDMonitChannels != 0UL)
5225:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   {
5226:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     if (AWDy == LL_ADC_AWD1)
5227:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5228:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_CFGR_AWD1SGL) == 0UL)
5229:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5230:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5231:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = ((AnalogWDMonitChannels
5232:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                   | (ADC_AWD_CR23_CHANNEL_MASK)
5233:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  )
5234:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  & (~(ADC_CFGR_AWD1CH))
5235:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5236:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5237:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5238:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5239:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5240:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5241:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_AWD2CR_AWD2CH_0 << (AnalogWDMonitChannels >> ADC_CFGR_AWD1C
5242:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5243:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5244:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5245:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     else
5246:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     {
5247:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       if ((AnalogWDMonitChannels & ADC_AWD_CR23_CHANNEL_MASK) == ADC_AWD_CR23_CHANNEL_MASK)
5248:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5249:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 97


5250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (ADC_AWD_CR23_CHANNEL_MASK
5251:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | ((ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN))
5252:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5253:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5254:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       else
5255:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       {
5256:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a single channel */
5257:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         /* AWD monitoring a group of channels */
5258:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****         AnalogWDMonitChannels = (AnalogWDMonitChannels
5259:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (ADC_CFGR_JAWD1EN | ADC_CFGR_AWD1EN | ADC_CFGR_AWD1SGL)
5260:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                  | (__LL_ADC_CHANNEL_TO_DECIMAL_NB(AnalogWDMonitChannels) << ADC_CF
5261:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                 );
5262:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****       }
5263:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****     }
5264:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   }
5265:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5266:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return AnalogWDMonitChannels;
5267:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5268:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5269:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5270:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog thresholds value of both thresholds
5271:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high and low.
5272:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If value of only one threshold high or low must be set,
5273:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_SetAnalogWDThresholds().
5274:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5275:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5276:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5277:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5278:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5279:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5280:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5281:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5282:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5283:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5284:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5285:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5286:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5287:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5288:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5289:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5290:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5291:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5293:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5294:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5295:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5296:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
5297:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5298:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5299:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5300:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5301:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5302:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5303:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5304:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5305:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5306:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_ConfigAnalogWDThresholds\n
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 98


5307:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_ConfigAnalogWDThresholds\n
5308:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_ConfigAnalogWDThresholds\n
5309:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_ConfigAnalogWDThresholds\n
5310:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_ConfigAnalogWDThresholds\n
5311:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_ConfigAnalogWDThresholds
5312:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5313:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5314:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5315:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5316:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5317:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdHighValue Value between Min_Data=0x000 and Max_Data=0xFFF
5318:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdLowValue Value between Min_Data=0x000 and Max_Data=0xFFF
5319:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5320:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5321:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWD
5322:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                      uint32_t AWDThresholdLowValue)
5323:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5324:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdxxxValue" with bits      */
5325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameter        */
5326:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDy".                                                                  */
5327:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdxxxValue" are used with masks because */
5328:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5329:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1, ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC
5330:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5331:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5332:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_TR1_HT1 | ADC_TR1_LT1,
5333:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              (AWDThresholdHighValue << ADC_TR1_HT1_BITOFFSET_POS) | AWDThresholdLowValue);
5334:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5335:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5336:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5337:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC analog watchdog threshold value of threshold
5338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         high or low.
5339:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If values of both thresholds high or low must be set,
5340:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         use function @ref LL_ADC_ConfigAnalogWDThresholds().
5341:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5342:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5343:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_SET_THRESHOLD_RESOLUTION().
5344:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, there are 2 kinds of analog watchdog
5345:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         instance:
5346:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD standard (instance AWD1):
5347:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: can monitor 1 channel or all channels.
5348:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: ADC groups regular and-or injected.
5349:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is not limited (corresponds to
5350:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             ADC resolution configured).
5351:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - AWD flexible (instances AWD2, AWD3):
5352:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - channels monitored: flexible on channels monitored, selection is
5353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             channel wise, from from 1 to all channels.
5354:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Specificity of this analog watchdog: Multiple channels can
5355:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             be selected. For example:
5356:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             (LL_ADC_AWD_CHANNEL4_REG_INJ | LL_ADC_AWD_CHANNEL5_REG_INJ | ...)
5357:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - groups monitored: not selection possible (monitoring on both
5358:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             groups regular and injected).
5359:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             Channels selected are monitored on groups regular and injected:
5360:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG_INJ (do not use parameters
5361:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             LL_ADC_AWD_CHANNELxx_REG and LL_ADC_AWD_CHANNELxx_INJ)
5362:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           - resolution: resolution is limited to 8 bits: if ADC resolution is
5363:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             12 bits the 4 LSB are ignored, if ADC resolution is 10 bits
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 99


5364:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *             the 2 LSB are ignored.
5365:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC oversampling is enabled, ADC analog watchdog thresholds are
5366:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         impacted: the comparison of analog watchdog thresholds is done on
5367:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         oversampling final computation (after ratio and shift application):
5368:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC data register bitfield [15:4] (12 most significant bits).
5369:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5370:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5371:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5372:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either ADC groups regular or injected.
5373:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_SetAnalogWDThresholds\n
5374:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_SetAnalogWDThresholds\n
5375:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_SetAnalogWDThresholds\n
5376:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_SetAnalogWDThresholds\n
5377:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_SetAnalogWDThresholds\n
5378:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_SetAnalogWDThresholds
5379:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5380:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5381:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5382:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5383:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5384:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5385:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5386:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5387:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdValue Value between Min_Data=0x000 and Max_Data=0xFFF
5388:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5389:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5390:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AWDThr
5391:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                   uint32_t AWDThresholdValue)
5392:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5393:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Set bits with content of parameter "AWDThresholdValue" with bits         */
5394:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* position in register and register position depending on parameters       */
5395:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* "AWDThresholdsHighLow" and "AWDy".                                       */
5396:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Parameters "AWDy" and "AWDThresholdValue" are used with masks because    */
5397:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* containing other bits reserved for other purpose.                        */
5398:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5399:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                              ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_TRX_RE
5400:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5401:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(*preg,
5402:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdsHighLow,
5403:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              AWDThresholdValue << ((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TR
5404:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5405:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5406:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5407:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC analog watchdog threshold value of threshold high,
5408:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         threshold low or raw data with ADC thresholds high and low
5409:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         concatenated.
5410:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC thresholds high and low is retrieved,
5411:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the data of each threshold high or low can be isolated
5412:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         using helper macro:
5413:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_ANALOGWD_THRESHOLDS_HIGH_LOW().
5414:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC resolution different of 12 bits,
5415:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         analog watchdog thresholds data require a specific shift.
5416:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Use helper macro @ref __LL_ADC_ANALOGWD_GET_THRESHOLD_RESOLUTION().
5417:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll TR1      HT1            LL_ADC_GetAnalogWDThresholds\n
5418:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      HT2            LL_ADC_GetAnalogWDThresholds\n
5419:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      HT3            LL_ADC_GetAnalogWDThresholds\n
5420:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR1      LT1            LL_ADC_GetAnalogWDThresholds\n
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 100


5421:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR2      LT2            LL_ADC_GetAnalogWDThresholds\n
5422:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         TR3      LT3            LL_ADC_GetAnalogWDThresholds
5423:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5424:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDy This parameter can be one of the following values:
5425:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD1
5426:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD2
5427:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD3
5428:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  AWDThresholdsHighLow This parameter can be one of the following values:
5429:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_HIGH
5430:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLD_LOW
5431:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_AWD_THRESHOLDS_HIGH_LOW
5432:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
5433:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5434:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetAnalogWDThresholds(ADC_TypeDef *ADCx, uint32_t AWDy, uint32_t AW
5435:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5436:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   const __IO uint32_t *preg = __ADC_PTR_REG_OFFSET(ADCx->TR1,
5437:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                    ((AWDy & ADC_AWD_TRX_REGOFFSET_MASK) >> ADC_AWD_
5438:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5439:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(*preg,
5440:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (AWDThresholdsHighLow | ADC_TR1_LT1))
5441:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (((AWDThresholdsHighLow & ADC_AWD_TRX_BIT_HIGH_MASK) >> ADC_AWD_TRX_BIT_HIGH
5442:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                         & ~(AWDThresholdsHighLow & ADC_TR1_LT1)));
5443:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5444:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5445:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5446:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5447:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5448:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5449:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_oversampling Configuration of ADC transversal scope: over
5450:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5451:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5452:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5453:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5454:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling scope: ADC groups regular and-or injected
5455:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5456:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5457:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5458:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5459:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5460:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5461:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5462:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5463:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5464:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5465:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5466:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_SetOverSamplingScope\n
5467:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_SetOverSamplingScope\n
5468:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_SetOverSamplingScope
5469:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5470:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OvsScope This parameter can be one of the following values:
5471:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5472:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5473:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5474:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5475:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5476:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5477:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 101


5478:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingScope(ADC_TypeDef *ADCx, uint32_t OvsScope)
5479:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5480:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM, OvsScope);
5481:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5482:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5483:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5484:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling scope: ADC groups regular and-or injected
5485:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (availability of ADC group injected depends on STM32 families).
5486:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If both groups regular and injected are selected,
5487:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         specify behavior of ADC group injected interrupting
5488:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         group regular: when ADC group injected is triggered,
5489:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         the oversampling on ADC group regular is either
5490:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         temporary stopped and continued, or resumed from start
5491:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (oversampler buffer reset).
5492:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    ROVSE          LL_ADC_GetOverSamplingScope\n
5493:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    JOVSE          LL_ADC_GetOverSamplingScope\n
5494:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    ROVSM          LL_ADC_GetOverSamplingScope
5495:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5496:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5497:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_DISABLE
5498:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_CONTINUED
5499:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_REGULAR_RESUMED
5500:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJECTED
5501:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_GRP_INJ_REG_RESUMED
5502:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5503:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingScope(ADC_TypeDef *ADCx)
5504:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5505:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_JOVSE | ADC_CFGR2_ROVSM));
5506:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5507:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5508:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5509:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling discontinuous mode (triggered mode)
5510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5512:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5513:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5514:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5515:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5516:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5517:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5518:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5519:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on group regular.
5520:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, oversampling discontinuous mode
5521:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (triggered mode) can be used only when oversampling is
5522:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         set on group regular only and in resumed mode.
5523:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_SetOverSamplingDiscont
5524:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5525:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  OverSamplingDiscont This parameter can be one of the following values:
5526:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5527:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5528:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5529:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5530:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetOverSamplingDiscont(ADC_TypeDef *ADCx, uint32_t OverSamplingDiscont)
5531:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5532:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, ADC_CFGR2_TROVS, OverSamplingDiscont);
5533:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5534:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 102


5535:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5536:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling discontinuous mode (triggered mode)
5537:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on the selected ADC group.
5538:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   Number of oversampled conversions are done either in:
5539:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - continuous mode (all conversions of oversampling ratio
5540:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           are done from 1 trigger)
5541:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - discontinuous mode (each conversion of oversampling ratio
5542:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           needs a trigger)
5543:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    TROVS          LL_ADC_GetOverSamplingDiscont
5544:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5545:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5546:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_CONT
5547:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_REG_DISCONT
5548:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5549:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingDiscont(ADC_TypeDef *ADCx)
5550:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5551:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_TROVS));
5552:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5553:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5554:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5555:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC oversampling
5556:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (impacting both ADC groups regular and injected)
5557:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   This function set the 2 items of oversampling configuration:
5558:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ratio
5559:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - shift
5560:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5561:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5562:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be disabled or enabled without conversion on going
5563:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
5564:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_ConfigOverSamplingRatioShift\n
5565:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CFGR2    OVSR           LL_ADC_ConfigOverSamplingRatioShift
5566:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5567:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Ratio This parameter can be one of the following values:
5568:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5569:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5570:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5571:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5572:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5573:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5574:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5575:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5576:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Shift This parameter can be one of the following values:
5577:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5578:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5579:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5580:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5581:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5582:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5583:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5584:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5585:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5586:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5587:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5588:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_ConfigOverSamplingRatioShift(ADC_TypeDef *ADCx, uint32_t Ratio, uint32_
5589:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5590:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CFGR2, (ADC_CFGR2_OVSS | ADC_CFGR2_OVSR), (Shift | Ratio));
5591:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 103


5592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5593:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5594:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling ratio
5595:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5596:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSR           LL_ADC_GetOverSamplingRatio
5597:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5598:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Ratio This parameter can be one of the following values:
5599:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_2
5600:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_4
5601:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_8
5602:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_16
5603:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_32
5604:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_64
5605:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_128
5606:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_RATIO_256
5607:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5608:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingRatio(ADC_TypeDef *ADCx)
5609:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5610:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSR));
5611:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5612:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5613:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5614:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC oversampling shift
5615:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *        (impacting both ADC groups regular and injected)
5616:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CFGR2    OVSS           LL_ADC_GetOverSamplingShift
5617:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5618:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Shift This parameter can be one of the following values:
5619:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_NONE
5620:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_1
5621:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_2
5622:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_3
5623:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_4
5624:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_5
5625:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_6
5626:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_7
5627:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_OVS_SHIFT_RIGHT_8
5628:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5629:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetOverSamplingShift(ADC_TypeDef *ADCx)
5630:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5631:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->CFGR2, ADC_CFGR2_OVSS));
5632:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5633:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5634:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5635:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5637:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5638:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_ADC_Multimode Configuration of ADC hierarchical scope: multim
5639:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5640:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5641:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5642:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
5643:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5644:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode configuration to operate in independent mode
5645:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5646:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5647:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5648:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 104


5649:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5650:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5651:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5652:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5653:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro
5654:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5655:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_SetMultimode
5656:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5657:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5658:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  Multimode This parameter can be one of the following values:
5659:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5660:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5661:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5662:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5663:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5664:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5665:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5666:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5667:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5668:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5669:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultimode(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Multimode)
5670:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5671:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DUAL, Multimode);
5672:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5673:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5674:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5675:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode configuration to operate in independent mode
5676:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or multimode (for devices with several ADC instances).
5677:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If multimode configuration: the selected ADC instance is
5678:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         either master or slave depending on hardware.
5679:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to reference manual.
5680:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DUAL           LL_ADC_GetMultimode
5681:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5682:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5683:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5684:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_INDEPENDENT
5685:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIMULT
5686:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INTERL
5687:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_SIMULT
5688:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_INJ_ALTERN
5689:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_SIM
5690:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_SIM_INJ_ALT
5691:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_DUAL_REG_INT_INJ_SIM
5692:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5693:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultimode(ADC_Common_TypeDef *ADCxy_COMMON)
5694:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5695:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DUAL));
5696:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5697:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5698:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5699:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode conversion data transfer: no transfer
5700:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5701:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5702:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5703:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5704:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5705:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 105


5706:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5707:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5708:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5709:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5710:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5711:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
5712:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5713:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5714:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5715:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5716:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5717:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5718:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5719:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5720:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5721:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5723:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5725:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5726:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5727:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5728:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5729:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5730:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled
5731:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or enabled without conversion on going on group regular.
5732:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_SetMultiDMATransfer\n
5733:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_SetMultiDMATransfer
5734:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5735:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5736:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiDMATransfer This parameter can be one of the following values:
5737:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5738:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5739:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5740:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5741:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5742:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5743:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5744:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t MultiDMA
5745:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5746:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG, MultiDMATransfer);
5747:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5748:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5749:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5750:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data transfer: no transfer
5751:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or transfer by DMA.
5752:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC multimode transfer by DMA is not selected:
5753:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         each ADC uses its own DMA channel, with its individual
5754:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         DMA transfer settings.
5755:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected:
5756:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         One DMA channel is used for both ADC (DMA of ADC master)
5757:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Specifies the DMA requests mode:
5758:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Limited mode (One shot mode): DMA transfer requests are stopped
5759:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           when number of DMA data transfers (number of
5760:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions) is reached.
5761:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode non-circular.
5762:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - Unlimited mode: DMA transfer requests are unlimited,
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 106


5763:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           whatever number of DMA data transfers (number of
5764:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           ADC conversions).
5765:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           This ADC mode is intended to be used with DMA mode circular.
5766:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If ADC DMA requests mode is set to unlimited and DMA is set to
5767:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         mode non-circular:
5768:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         when DMA transfers size will be reached, DMA will stop transfers of
5769:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversions data ADC will raise an overrun error
5770:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (overrun flag and interruption if enabled).
5771:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   How to retrieve multimode conversion data:
5772:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Whatever multimode transfer by DMA setting: using function
5773:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref LL_ADC_REG_ReadMultiConversionData32().
5774:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         If ADC multimode transfer by DMA is selected: conversion data
5775:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is a raw data with ADC master and slave concatenated.
5776:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         A macro is available to get the conversion data of
5777:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
5778:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
5779:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      MDMA           LL_ADC_GetMultiDMATransfer\n
5780:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CCR      DMACFG         LL_ADC_GetMultiDMATransfer
5781:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5782:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5783:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5784:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_EACH_ADC
5785:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES12_10B
5786:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_LIMIT_RES8_6B
5787:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES12_10B
5788:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_REG_DMA_UNLMT_RES8_6B
5789:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5790:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiDMATransfer(ADC_Common_TypeDef *ADCxy_COMMON)
5791:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5792:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG));
5793:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5794:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5795:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5796:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Set ADC multimode delay between 2 sampling phases.
5797:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   The sampling delay range depends on ADC resolution:
5798:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 12 bits can have maximum delay of 12 cycles.
5799:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution 10 bits can have maximum delay of 10 cycles.
5800:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  8 bits can have maximum delay of  8 cycles.
5801:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - ADC resolution  6 bits can have maximum delay of  6 cycles.
5802:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5803:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5804:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         All ADC instances of the ADC common group must be disabled.
5805:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         This check can be done with function @ref LL_ADC_IsEnabled() for each
5806:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC instance or by using helper macro helper macro
5807:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE().
5808:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_SetMultiTwoSamplingDelay
5809:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5810:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5811:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  MultiTwoSamplingDelay This parameter can be one of the following values:
5812:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5813:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5814:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5815:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5816:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5817:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5818:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5819:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 107


5820:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5821:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5822:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5823:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5824:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5825:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5826:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5827:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5828:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5829:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5830:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_SetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON, uint32_t Mul
5831:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5832:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCxy_COMMON->CCR, ADC_CCR_DELAY, MultiTwoSamplingDelay);
5833:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5834:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5835:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5836:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode delay between 2 sampling phases.
5837:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CCR      DELAY          LL_ADC_GetMultiTwoSamplingDelay
5838:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
5839:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
5840:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Returned value can be one of the following values:
5841:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_1CYCLE
5842:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_2CYCLES
5843:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_3CYCLES
5844:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_4CYCLES
5845:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_5CYCLES
5846:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_6CYCLES  (1)
5847:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_7CYCLES  (1)
5848:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_8CYCLES  (2)
5849:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_9CYCLES  (2)
5850:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_10CYCLES (2)
5851:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_11CYCLES (3)
5852:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_TWOSMP_DELAY_12CYCLES (3)
5853:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *
5854:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (1) Parameter available only if ADC resolution is 12, 10 or 8 bits.\n
5855:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (2) Parameter available only if ADC resolution is 12 or 10 bits.\n
5856:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (3) Parameter available only if ADC resolution is 12 bits.
5857:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5858:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_GetMultiTwoSamplingDelay(ADC_Common_TypeDef *ADCxy_COMMON)
5859:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5860:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CCR, ADC_CCR_DELAY));
5861:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5862:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
5863:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5864:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5865:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5866:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5867:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Configuration_Leg_Functions Configuration of ADC alternate functions name
5868:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5869:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5870:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* Old functions name kept for legacy purpose, to be replaced by the          */
5871:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /* current functions name.                                                    */
5872:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
5873:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5874:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_REG_SetTriggerSource(ADCx, TriggerSource);
5875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5876:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_SetTrigSource(ADC_TypeDef *ADCx, uint32_t TriggerSource)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 108


5877:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5878:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   LL_ADC_INJ_SetTriggerSource(ADCx, TriggerSource);
5879:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5880:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5881:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5882:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
5883:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5884:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5885:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Instance Operation on ADC hierarchical scope: ADC instance
5886:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
5887:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5888:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5889:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5890:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Put ADC instance in deep power down state.
5891:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5892:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5893:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5894:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5895:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5896:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5897:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5898:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_EnableDeepPowerDown
5899:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5900:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5901:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5902:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableDeepPowerDown(ADC_TypeDef *ADCx)
5903:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5904:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5905:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5906:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5907:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5908:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5909:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_DEEPPWD);
5910:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5911:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5912:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5913:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC deep power down mode.
5914:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   In case of ADC calibration necessary: When ADC is in deep-power-down
5915:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         state, the internal analog calibration is lost. After exiting from
5916:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         deep power down, calibration must be relaunched or calibration factor
5917:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (preliminarily saved) must be set back into calibration register.
5918:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5919:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5920:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5921:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_DisableDeepPowerDown
5922:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5923:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5924:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5925:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableDeepPowerDown(ADC_TypeDef *ADCx)
5926:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5927:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5928:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5929:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5930:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_DEEPPWD | ADC_CR_BITS_PROPERTY_RS));
5931:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5932:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5933:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 109


5934:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance deep power down state.
5935:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       DEEPPWD        LL_ADC_IsDeepPowerDownEnabled
5936:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5937:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: deep power down is disabled, 1: deep power down is enabled.
5938:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5939:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDeepPowerDownEnabled(ADC_TypeDef *ADCx)
5940:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5941:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_DEEPPWD) == (ADC_CR_DEEPPWD)) ? 1UL : 0UL);
5942:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5943:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5944:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5945:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable ADC instance internal voltage regulator.
5946:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC internal voltage regulator enable,
5947:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a delay for ADC internal voltage regulator stabilization
5948:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is required before performing a ADC calibration or ADC enable.
5949:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tADCVREG_STUP.
5950:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_INTERNAL_REGUL_STAB_US.
5951:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5952:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5953:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5954:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_EnableInternalRegulator
5955:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5956:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5957:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5958:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_EnableInternalRegulator(ADC_TypeDef *ADCx)
5959:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5960:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
5961:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
5962:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
5963:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
5964:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
5965:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADVREGEN);
5966:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5967:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5968:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5969:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable ADC internal voltage regulator.
5970:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
5971:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
5972:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
5973:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_DisableInternalRegulator
5974:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5975:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
5976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5977:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_DisableInternalRegulator(ADC_TypeDef *ADCx)
5978:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5979:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   CLEAR_BIT(ADCx->CR, (ADC_CR_ADVREGEN | ADC_CR_BITS_PROPERTY_RS));
5980:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5981:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5982:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5983:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance internal voltage regulator state.
5984:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADVREGEN       LL_ADC_IsInternalRegulatorEnabled
5985:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
5986:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: internal regulator is disabled, 1: internal regulator is enabled.
5987:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
5988:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsInternalRegulatorEnabled(ADC_TypeDef *ADCx)
5989:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
5990:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADVREGEN) == (ADC_CR_ADVREGEN)) ? 1UL : 0UL);
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 110


5991:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
5992:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
5993:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
5994:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Enable the selected ADC instance.
5995:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, after ADC enable, a delay for
5996:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC internal analog stabilization is required before performing a
5997:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC conversion start.
5998:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to device datasheet, parameter tSTAB.
5999:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6000:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6001:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6002:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6003:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6004:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled and ADC internal voltage regulator enabled.
6005:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_Enable
6006:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6007:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6009:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Enable(ADC_TypeDef *ADCx)
6010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6011:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6013:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6014:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6015:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6016:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADEN);
6017:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6018:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6019:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6020:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Disable the selected ADC instance.
6021:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6022:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6023:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be not disabled. Must be enabled without conversion on going
6024:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         on either groups regular or injected.
6025:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_Disable
6026:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6027:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6028:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6029:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_Disable(ADC_TypeDef *ADCx)
6030:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6031:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6032:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6033:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6034:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6035:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6036:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADDIS);
6037:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6038:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6039:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6040:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance enable state.
6041:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, flag LL_ADC_FLAG_ADRDY is raised when the ADC
6042:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         is enabled and when conversion clock is active.
6043:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (not only core clock: this ADC has a dual clock domain)
6044:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADEN           LL_ADC_IsEnabled
6045:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6046:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: ADC is disabled, 1: ADC is enabled.
6047:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 111


6048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsEnabled(ADC_TypeDef *ADCx)
6049:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADEN) == (ADC_CR_ADEN)) ? 1UL : 0UL);
6051:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6052:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6053:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6054:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get the selected ADC instance disable state.
6055:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADDIS          LL_ADC_IsDisableOngoing
6056:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6057:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no ADC disable command on going.
6058:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6059:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsDisableOngoing(ADC_TypeDef *ADCx)
6060:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6061:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADDIS) == (ADC_CR_ADDIS)) ? 1UL : 0UL);
6062:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6063:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6064:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6065:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC calibration in the mode single-ended
6066:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or differential (for devices with differential mode available).
6067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, a minimum number of ADC clock cycles
6068:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         are required between ADC end of calibration and ADC enable.
6069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Refer to literal @ref LL_ADC_DELAY_CALIB_ENABLE_ADC_CYCLES.
6070:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with differential mode available:
6071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         Calibration of offset is specific to each of
6072:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         single-ended and differential modes
6073:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (calibration run must be performed for each of these
6074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         differential modes, if used afterwards and if the application
6075:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         requires their calibration).
6076:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6077:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6078:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be ADC disabled.
6079:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_StartCalibration\n
6080:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CR       ADCALDIF       LL_ADC_StartCalibration
6081:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6082:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  SingleDiff This parameter can be one of the following values:
6083:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_SINGLE_ENDED
6084:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_DIFFERENTIAL_ENDED
6085:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6086:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6087:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_StartCalibration(ADC_TypeDef *ADCx, uint32_t SingleDiff)
  81              		.loc 2 6087 22 view .LVU17
  82              	.LBB231:
6088:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6089:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6090:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6091:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6092:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
  83              		.loc 2 6092 3 view .LVU18
  84 0032 9368     		ldr	r3, [r2, #8]
  85 0034 23F04043 		bic	r3, r3, #-1073741824
  86 0038 23F03F03 		bic	r3, r3, #63
  87 003c 05F08045 		and	r5, r5, #1073741824
  88              	.LVL3:
  89              		.loc 2 6092 3 is_stmt 0 view .LVU19
  90 0040 2B43     		orrs	r3, r3, r5
  91 0042 43F00043 		orr	r3, r3, #-2147483648
  92 0046 9360     		str	r3, [r2, #8]
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 112


  93              	.LVL4:
  94              	.L4:
  95              		.loc 2 6092 3 view .LVU20
  96              	.LBE231:
  97              	.LBE230:
 145:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 146:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Wait for calibration completion */
 147:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     while (LL_ADC_IsCalibrationOnGoing(hadc->Instance) != 0UL)
  98              		.loc 1 147 11 is_stmt 1 view .LVU21
  99              		.loc 1 147 12 is_stmt 0 view .LVU22
 100 0048 2368     		ldr	r3, [r4]
 101              	.LVL5:
 102              	.LBB232:
 103              	.LBI232:
6093:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCALDIF | ADC_CR_BITS_PROPERTY_RS,
6094:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADCAL | (SingleDiff & ADC_SINGLEDIFF_CALIB_START_MASK));
6095:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6096:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6097:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6098:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC calibration state.
6099:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADCAL          LL_ADC_IsCalibrationOnGoing
6100:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6101:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: calibration complete, 1: calibration in progress.
6102:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6103:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_IsCalibrationOnGoing(ADC_TypeDef *ADCx)
 104              		.loc 2 6103 26 is_stmt 1 view .LVU23
 105              	.LBB233:
6104:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6105:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADCAL) == (ADC_CR_ADCAL)) ? 1UL : 0UL);
 106              		.loc 2 6105 3 view .LVU24
 107              		.loc 2 6105 12 is_stmt 0 view .LVU25
 108 004a 9B68     		ldr	r3, [r3, #8]
 109              	.LVL6:
 110              		.loc 2 6105 70 view .LVU26
 111 004c 002B     		cmp	r3, #0
 112 004e 06DB     		blt	.L10
 113              	.LVL7:
 114              		.loc 2 6105 70 view .LVU27
 115              	.LBE233:
 116              	.LBE232:
 148:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 149:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       wait_loop_index++;
 150:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 151:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 152:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
 153:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 154:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 155:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_ERROR_INTERNAL);
 156:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 157:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Process unlocked */
 158:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         __HAL_UNLOCK(hadc);
 159:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 160:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         return HAL_ERROR;
 161:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 162:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 163:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 164:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 113


 165:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
 117              		.loc 1 165 5 is_stmt 1 view .LVU28
 118 0050 636D     		ldr	r3, [r4, #84]
 119 0052 23F00303 		bic	r3, r3, #3
 120 0056 43F00103 		orr	r3, r3, #1
 121 005a 6365     		str	r3, [r4, #84]
 122 005c 15E0     		b	.L7
 123              	.LVL8:
 124              	.L10:
 149:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 125              		.loc 1 149 7 view .LVU29
 149:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (wait_loop_index >= ADC_CALIBRATION_TIMEOUT)
 126              		.loc 1 149 22 is_stmt 0 view .LVU30
 127 005e 019B     		ldr	r3, [sp, #4]
 128 0060 0133     		adds	r3, r3, #1
 129 0062 0193     		str	r3, [sp, #4]
 150:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 130              		.loc 1 150 7 is_stmt 1 view .LVU31
 150:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 131              		.loc 1 150 27 is_stmt 0 view .LVU32
 132 0064 019B     		ldr	r3, [sp, #4]
 150:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 133              		.loc 1 150 10 view .LVU33
 134 0066 B3F5912F 		cmp	r3, #296960
 135 006a EDD3     		bcc	.L4
 153:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_BUSY_INTERNAL,
 136              		.loc 1 153 9 is_stmt 1 view .LVU34
 137 006c 636D     		ldr	r3, [r4, #84]
 138 006e 23F01203 		bic	r3, r3, #18
 139 0072 43F01003 		orr	r3, r3, #16
 140 0076 6365     		str	r3, [r4, #84]
 158:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 141              		.loc 1 158 9 view .LVU35
 158:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 142              		.loc 1 158 9 view .LVU36
 143 0078 0023     		movs	r3, #0
 144 007a 84F85030 		strb	r3, [r4, #80]
 158:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 145              		.loc 1 158 9 view .LVU37
 160:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 146              		.loc 1 160 9 view .LVU38
 160:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 147              		.loc 1 160 16 is_stmt 0 view .LVU39
 148 007e 0120     		movs	r0, #1
 149              	.LVL9:
 160:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 150              		.loc 1 160 16 view .LVU40
 151 0080 06E0     		b	.L2
 152              	.LVL10:
 153              	.L3:
 166:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_BUSY_INTERNAL,
 167:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
 168:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 169:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 170:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 171:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 154              		.loc 1 171 5 is_stmt 1 view .LVU41
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 114


 155 0082 636D     		ldr	r3, [r4, #84]
 156 0084 43F01003 		orr	r3, r3, #16
 157 0088 6365     		str	r3, [r4, #84]
 158              	.LVL11:
 159              	.L7:
 172:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 173:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: No need to update variable "tmp_hal_status" here: already set    */
 174:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*       to state "HAL_ERROR" by function disabling the ADC.              */
 175:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 176:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 177:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 178:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 160              		.loc 1 178 3 view .LVU42
 161              		.loc 1 178 3 view .LVU43
 162 008a 0023     		movs	r3, #0
 163 008c 84F85030 		strb	r3, [r4, #80]
 164              		.loc 1 178 3 view .LVU44
 179:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 180:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 181:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 165              		.loc 1 181 3 view .LVU45
 166              	.LVL12:
 167              	.L2:
 182:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 168              		.loc 1 182 1 is_stmt 0 view .LVU46
 169 0090 03B0     		add	sp, sp, #12
 170              	.LCFI2:
 171              		.cfi_remember_state
 172              		.cfi_def_cfa_offset 12
 173              		@ sp needed
 174 0092 30BD     		pop	{r4, r5, pc}
 175              	.LVL13:
 176              	.L8:
 177              	.LCFI3:
 178              		.cfi_restore_state
 128:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 179              		.loc 1 128 3 view .LVU47
 180 0094 0220     		movs	r0, #2
 181              	.LVL14:
 128:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 182              		.loc 1 128 3 view .LVU48
 183 0096 FBE7     		b	.L2
 184              		.cfi_endproc
 185              	.LFE288:
 187              		.section	.text.HAL_ADCEx_Calibration_GetValue,"ax",%progbits
 188              		.align	1
 189              		.global	HAL_ADCEx_Calibration_GetValue
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	HAL_ADCEx_Calibration_GetValue:
 195              	.LVL15:
 196              	.LFB289:
 183:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 184:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 185:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Get the calibration factor.
 186:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 115


 187:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 188:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 189:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 190:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval Calibration value.
 191:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 192:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_Calibration_GetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff)
 193:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 197              		.loc 1 193 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		@ link register save eliminated.
 194:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 195:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 202              		.loc 1 195 3 view .LVU50
 196:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 203              		.loc 1 196 3 view .LVU51
 197:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 198:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return the selected ADC calibration value */
 199:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return LL_ADC_GetCalibrationFactor(hadc->Instance, SingleDiff);
 204              		.loc 1 199 3 view .LVU52
 205              		.loc 1 199 10 is_stmt 0 view .LVU53
 206 0000 0368     		ldr	r3, [r0]
 207              	.LVL16:
 208              	.LBB234:
 209              	.LBI234:
2657:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 210              		.loc 2 2657 26 is_stmt 1 view .LVU54
 211              	.LBB235:
2663:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
 212              		.loc 2 2663 3 view .LVU55
2663:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
 213              		.loc 2 2663 21 is_stmt 0 view .LVU56
 214 0002 D3F8B400 		ldr	r0, [r3, #180]
 215              	.LVL17:
2663:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              (SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK)) >> ((SingleDiff & ADC
 216              		.loc 2 2663 21 view .LVU57
 217 0006 0840     		ands	r0, r0, r1
 218 0008 00F07F10 		and	r0, r0, #8323199
2664:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
 219              		.loc 2 2664 132 view .LVU58
 220 000c 090B     		lsrs	r1, r1, #12
 221              	.LVL18:
2664:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
 222              		.loc 2 2664 132 view .LVU59
 223 000e 01F01001 		and	r1, r1, #16
 224              	.LVL19:
2664:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                                                                                   ADC_SINGLEDIFF_CA
 225              		.loc 2 2664 132 view .LVU60
 226              	.LBE235:
 227              	.LBE234:
 200:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 228              		.loc 1 200 1 view .LVU61
 229 0012 C840     		lsrs	r0, r0, r1
 230 0014 7047     		bx	lr
 231              		.cfi_endproc
 232              	.LFE289:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 116


 234              		.section	.text.HAL_ADCEx_Calibration_SetValue,"ax",%progbits
 235              		.align	1
 236              		.global	HAL_ADCEx_Calibration_SetValue
 237              		.syntax unified
 238              		.thumb
 239              		.thumb_func
 241              	HAL_ADCEx_Calibration_SetValue:
 242              	.LVL20:
 243              	.LFB290:
 201:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 202:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 203:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Set the calibration factor to overwrite automatic conversion result.
 204:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC must be enabled and no conversion is ongoing.
 205:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 206:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param SingleDiff This parameter can be only:
 207:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_SINGLE_ENDED       Channel in mode input single ended
 208:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *           @arg @ref ADC_DIFFERENTIAL_ENDED Channel in mode input differential ended
 209:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param CalibrationFactor Calibration factor (coded on 7 bits maximum)
 210:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL state
 211:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 212:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_Calibration_SetValue(ADC_HandleTypeDef *hadc, uint32_t SingleDiff,
 213:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                  uint32_t CalibrationFactor)
 214:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 244              		.loc 1 214 1 is_stmt 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248              		@ link register save eliminated.
 249              		.loc 1 214 1 is_stmt 0 view .LVU63
 250 0000 0346     		mov	r3, r0
 215:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 251              		.loc 1 215 3 is_stmt 1 view .LVU64
 252              	.LVL21:
 216:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 253              		.loc 1 216 3 view .LVU65
 217:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 254              		.loc 1 217 3 view .LVU66
 218:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 219:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 220:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 255              		.loc 1 220 3 view .LVU67
 221:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(SingleDiff));
 256              		.loc 1 221 3 view .LVU68
 222:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_CALFACT(CalibrationFactor));
 257              		.loc 1 222 3 view .LVU69
 223:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 224:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 225:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 258              		.loc 1 225 3 view .LVU70
 259              		.loc 1 225 3 view .LVU71
 260 0002 90F85000 		ldrb	r0, [r0, #80]	@ zero_extendqisi2
 261              	.LVL22:
 262              		.loc 1 225 3 is_stmt 0 view .LVU72
 263 0006 0128     		cmp	r0, #1
 264 0008 35D0     		beq	.L18
 214:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 265              		.loc 1 214 1 discriminator 2 view .LVU73
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 117


 266 000a 70B4     		push	{r4, r5, r6}
 267              	.LCFI4:
 268              		.cfi_def_cfa_offset 12
 269              		.cfi_offset 4, -12
 270              		.cfi_offset 5, -8
 271              		.cfi_offset 6, -4
 272              		.loc 1 225 3 is_stmt 1 discriminator 2 view .LVU74
 273 000c 0120     		movs	r0, #1
 274 000e 83F85000 		strb	r0, [r3, #80]
 275              		.loc 1 225 3 discriminator 2 view .LVU75
 226:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 227:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Verification of hardware constraints before modifying the calibration    */
 228:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* factors register: ADC must be enabled, no conversion on going.           */
 229:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 276              		.loc 1 229 3 discriminator 2 view .LVU76
 277              		.loc 1 229 44 is_stmt 0 discriminator 2 view .LVU77
 278 0012 1D68     		ldr	r5, [r3]
 279              	.LVL23:
 280              	.LBB244:
 281              	.LBI244:
6106:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6107:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6108:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6109:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6110:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6111:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6112:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Regular Operation on ADC hierarchical scope: group regu
6113:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6114:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6115:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6116:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6117:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group regular conversion.
6118:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6119:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6120:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6121:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6122:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6123:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6124:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6125:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6126:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6127:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group regular,
6128:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group regular,
6129:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6130:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_StartConversion
6131:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6132:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6133:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6134:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StartConversion(ADC_TypeDef *ADCx)
6135:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6136:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6137:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6138:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6139:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6140:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6141:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTART);
6142:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 118


6143:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6144:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6145:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group regular conversion.
6146:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6147:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6148:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group regular,
6149:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6150:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_StopConversion
6151:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6152:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6153:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6154:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_REG_StopConversion(ADC_TypeDef *ADCx)
6155:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6156:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6157:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6158:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6159:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6160:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6161:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_ADSTP);
6162:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6163:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6164:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6165:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion state.
6166:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTART        LL_ADC_REG_IsConversionOngoing
6167:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6168:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group regular.
6169:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsConversionOngoing(ADC_TypeDef *ADCx)
 282              		.loc 2 6170 26 is_stmt 1 discriminator 2 view .LVU78
 283              	.LBB245:
6171:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTART) == (ADC_CR_ADSTART)) ? 1UL : 0UL);
 284              		.loc 2 6172 3 discriminator 2 view .LVU79
 285              		.loc 2 6172 12 is_stmt 0 discriminator 2 view .LVU80
 286 0014 A868     		ldr	r0, [r5, #8]
 287              		.loc 2 6172 74 discriminator 2 view .LVU81
 288 0016 10F00400 		ands	r0, r0, #4
 289 001a 00D0     		beq	.L14
 290              		.loc 2 6172 74 view .LVU82
 291 001c 0120     		movs	r0, #1
 292              	.L14:
 293              	.LVL24:
 294              		.loc 2 6172 74 view .LVU83
 295              	.LBE245:
 296              	.LBE244:
 230:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 297              		.loc 1 230 3 is_stmt 1 view .LVU84
 298              	.LBB246:
 299              	.LBI246:
6173:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6174:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6175:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6176:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular command of conversion stop state
6177:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       ADSTP          LL_ADC_REG_IsStopConversionOngoing
6178:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6179:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no command of conversion stop is on going on ADC group regular.
6180:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 119


6181:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_IsStopConversionOngoing(ADC_TypeDef *ADCx)
6182:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6183:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_ADSTP) == (ADC_CR_ADSTP)) ? 1UL : 0UL);
6184:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6185:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6186:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6187:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6188:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all ADC configurations: all ADC resolutions and
6189:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         all oversampling increased data width (for devices
6190:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         with feature oversampling).
6191:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData32
6192:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6193:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6194:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6195:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadConversionData32(ADC_TypeDef *ADCx)
6196:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6197:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6198:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6199:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6200:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6201:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6202:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 12 bits.
6203:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6204:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6205:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6206:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData12
6207:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6208:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0xFFF
6209:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6210:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData12(ADC_TypeDef *ADCx)
6211:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6212:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6213:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6214:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6215:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6216:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6217:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 10 bits.
6218:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6219:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6220:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6221:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData10
6222:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6223:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x000 and Max_Data=0x3FF
6224:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6225:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint16_t LL_ADC_REG_ReadConversionData10(ADC_TypeDef *ADCx)
6226:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6227:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint16_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6228:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6229:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6230:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6231:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6232:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 8 bits.
6233:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6234:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6235:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6236:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData8
6237:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 120


6238:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0xFF
6239:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6240:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData8(ADC_TypeDef *ADCx)
6241:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6242:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6243:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6244:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6245:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6246:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group regular conversion data, range fit for
6247:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC resolution 6 bits.
6248:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   For devices with feature oversampling: Oversampling
6249:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         can increase data width, function for extended range
6250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         may be needed: @ref LL_ADC_REG_ReadConversionData32.
6251:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll DR       RDATA          LL_ADC_REG_ReadConversionData6
6252:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6253:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00 and Max_Data=0x3F
6254:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6255:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint8_t LL_ADC_REG_ReadConversionData6(ADC_TypeDef *ADCx)
6256:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6257:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint8_t)(READ_BIT(ADCx->DR, ADC_DR_RDATA));
6258:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6259:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6260:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #if defined(ADC_MULTIMODE_SUPPORT)
6261:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6262:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC multimode conversion data of ADC master, ADC slave
6263:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         or raw data with ADC master and slave concatenated.
6264:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   If raw data with ADC master and slave concatenated is retrieved,
6265:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         a macro is available to get the conversion data of
6266:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC master or ADC slave: see helper macro
6267:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @ref __LL_ADC_MULTI_CONV_DATA_MASTER_SLAVE().
6268:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (however this macro is mainly intended for multimode
6269:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         transfer by DMA, because this function can do the same
6270:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         by getting multimode conversion data of ADC master or ADC slave
6271:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         separately).
6272:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CDR      RDATA_MST      LL_ADC_REG_ReadMultiConversionData32\n
6273:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         CDR      RDATA_SLV      LL_ADC_REG_ReadMultiConversionData32
6274:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCxy_COMMON ADC common instance
6275:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         (can be set directly from CMSIS definition or by using helper macro @ref __LL_ADC_COMMO
6276:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ConversionData This parameter can be one of the following values:
6277:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER
6278:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_SLAVE
6279:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         @arg @ref LL_ADC_MULTI_MASTER_SLAVE
6280:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval Value between Min_Data=0x00000000 and Max_Data=0xFFFFFFFF
6281:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6282:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_REG_ReadMultiConversionData32(ADC_Common_TypeDef *ADCxy_COMMON, uin
6283:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6284:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return (uint32_t)(READ_BIT(ADCxy_COMMON->CDR,
6285:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                              ConversionData)
6286:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                     >> (POSITION_VAL(ConversionData) & 0x1FUL)
6287:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****                    );
6288:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6289:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** #endif /* ADC_MULTIMODE_SUPPORT */
6290:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6291:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @}
6293:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6294:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 121


6295:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /** @defgroup ADC_LL_EF_Operation_ADC_Group_Injected Operation on ADC hierarchical scope: group inj
6296:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @{
6297:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6298:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6299:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6300:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Start ADC group injected conversion.
6301:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, this function is relevant for both
6302:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         internal trigger (SW start) and external trigger:
6303:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to software start, ADC conversion
6304:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           starts immediately.
6305:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         - If ADC trigger has been set to external trigger, ADC conversion
6306:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           will start at next trigger event (on the selected trigger edge)
6307:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *           following the ADC start conversion command.
6308:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6309:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6310:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled without conversion on going on group injected,
6311:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without conversion stop command on going on group injected,
6312:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6313:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_StartConversion
6314:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6315:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6316:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6317:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StartConversion(ADC_TypeDef *ADCx)
6318:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6319:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6320:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6321:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6322:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6323:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6324:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTART);
6325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6326:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6327:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6328:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Stop ADC group injected conversion.
6329:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @note   On this STM32 series, setting of this feature is conditioned to
6330:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC state:
6331:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         ADC must be enabled with conversion on going on group injected,
6332:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   *         without ADC disable command on going.
6333:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTP         LL_ADC_INJ_StopConversion
6334:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6335:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval None
6336:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6337:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE void LL_ADC_INJ_StopConversion(ADC_TypeDef *ADCx)
6338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6339:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /* Note: Write register with some additional bits forced to state reset     */
6340:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       instead of modifying only the selected bit for this function,      */
6341:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   /*       to not interfere with bits with HW property "rs".                  */
6342:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   MODIFY_REG(ADCx->CR,
6343:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
6344:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_JADSTP);
6345:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
6346:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
6347:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** /**
6348:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @brief  Get ADC group injected conversion state.
6349:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @rmtoll CR       JADSTART       LL_ADC_INJ_IsConversionOngoing
6350:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @param  ADCx ADC instance
6351:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   * @retval 0: no conversion is on going on ADC group injected.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 122


6352:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   */
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** __STATIC_INLINE uint32_t LL_ADC_INJ_IsConversionOngoing(ADC_TypeDef *ADCx)
 300              		.loc 2 6353 26 view .LVU85
 301              	.LBB247:
6354:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
6355:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****   return ((READ_BIT(ADCx->CR, ADC_CR_JADSTART) == (ADC_CR_JADSTART)) ? 1UL : 0UL);
 302              		.loc 2 6355 3 view .LVU86
 303              		.loc 2 6355 12 is_stmt 0 view .LVU87
 304 001e AC68     		ldr	r4, [r5, #8]
 305              		.loc 2 6355 76 view .LVU88
 306 0020 14F00804 		ands	r4, r4, #8
 307 0024 00D0     		beq	.L15
 308 0026 0124     		movs	r4, #1
 309              	.L15:
 310              	.LVL25:
 311              		.loc 2 6355 76 view .LVU89
 312              	.LBE247:
 313              	.LBE246:
 231:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 232:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((LL_ADC_IsEnabled(hadc->Instance) != 0UL)
 314              		.loc 1 232 3 is_stmt 1 view .LVU90
 315              	.LBB248:
 316              	.LBI248:
6048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 317              		.loc 2 6048 26 view .LVU91
 318              	.LBB249:
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 319              		.loc 2 6050 3 view .LVU92
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 320              		.loc 2 6050 12 is_stmt 0 view .LVU93
 321 0028 AE68     		ldr	r6, [r5, #8]
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 322              		.loc 2 6050 68 view .LVU94
 323 002a 16F0010F 		tst	r6, #1
 324 002e 01D0     		beq	.L16
 325              	.LVL26:
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 326              		.loc 2 6050 68 view .LVU95
 327              	.LBE249:
 328              	.LBE248:
 233:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_regular == 0UL)
 329              		.loc 1 233 7 view .LVU96
 330 0030 00B9     		cbnz	r0, .L16
 234:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 331              		.loc 1 234 7 view .LVU97
 332 0032 6CB1     		cbz	r4, .L23
 333              	.L16:
 235:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
 236:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 237:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set the selected ADC calibration value */
 238:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetCalibrationFactor(hadc->Instance, SingleDiff, CalibrationFactor);
 239:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 240:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 241:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 242:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine */
 243:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 334              		.loc 1 243 5 is_stmt 1 view .LVU98
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 123


 335 0034 5A6D     		ldr	r2, [r3, #84]
 336              	.LVL27:
 337              		.loc 1 243 5 is_stmt 0 view .LVU99
 338 0036 42F02002 		orr	r2, r2, #32
 339 003a 5A65     		str	r2, [r3, #84]
 244:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC error code */
 245:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 340              		.loc 1 245 5 is_stmt 1 view .LVU100
 341 003c 9A6D     		ldr	r2, [r3, #88]
 342 003e 42F00102 		orr	r2, r2, #1
 343 0042 9A65     		str	r2, [r3, #88]
 246:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 247:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
 248:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 344              		.loc 1 248 5 view .LVU101
 345              	.LVL28:
 346              		.loc 1 248 20 is_stmt 0 view .LVU102
 347 0044 0120     		movs	r0, #1
 348              	.LVL29:
 349              	.L17:
 249:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 250:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 251:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 252:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 350              		.loc 1 252 3 is_stmt 1 view .LVU103
 351              		.loc 1 252 3 view .LVU104
 352 0046 0022     		movs	r2, #0
 353 0048 83F85020 		strb	r2, [r3, #80]
 354              		.loc 1 252 3 view .LVU105
 253:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 254:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 255:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 355              		.loc 1 255 3 view .LVU106
 256:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 356              		.loc 1 256 1 is_stmt 0 view .LVU107
 357 004c 70BC     		pop	{r4, r5, r6}
 358              	.LCFI5:
 359              		.cfi_remember_state
 360              		.cfi_restore 6
 361              		.cfi_restore 5
 362              		.cfi_restore 4
 363              		.cfi_def_cfa_offset 0
 364 004e 7047     		bx	lr
 365              	.LVL30:
 366              	.L23:
 367              	.LCFI6:
 368              		.cfi_restore_state
 238:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 369              		.loc 1 238 5 is_stmt 1 view .LVU108
 370              	.LBB250:
 371              	.LBI250:
2634:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 372              		.loc 2 2634 22 view .LVU109
 373              	.LBB251:
2636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 374              		.loc 2 2636 3 view .LVU110
 375 0050 D5F8B440 		ldr	r4, [r5, #180]
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 124


 376              	.LVL31:
2636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 377              		.loc 2 2636 3 is_stmt 0 view .LVU111
 378 0054 01F07F10 		and	r0, r1, #8323199
 379              	.LVL32:
2636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 380              		.loc 2 2636 3 view .LVU112
 381 0058 24EA0004 		bic	r4, r4, r0
 382 005c 01F07F00 		and	r0, r1, #127
 383 0060 C043     		mvns	r0, r0
 384 0062 00EA1131 		and	r1, r0, r1, lsr #12
 385              	.LVL33:
2636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 386              		.loc 2 2636 3 view .LVU113
 387 0066 01F01001 		and	r1, r1, #16
 388 006a 8A40     		lsls	r2, r2, r1
 389              	.LVL34:
2636:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              SingleDiff & ADC_SINGLEDIFF_CALIB_FACTOR_MASK,
 390              		.loc 2 2636 3 view .LVU114
 391 006c 2243     		orrs	r2, r2, r4
 392 006e C5F8B420 		str	r2, [r5, #180]
 393              	.LBE251:
 394              	.LBE250:
 215:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 395              		.loc 1 215 21 view .LVU115
 396 0072 0020     		movs	r0, #0
 397              	.LBB253:
 398              	.LBB252:
2639:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 399              		.loc 2 2639 1 view .LVU116
 400 0074 E7E7     		b	.L17
 401              	.LVL35:
 402              	.L18:
 403              	.LCFI7:
 404              		.cfi_def_cfa_offset 0
 405              		.cfi_restore 4
 406              		.cfi_restore 5
 407              		.cfi_restore 6
2639:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 408              		.loc 2 2639 1 view .LVU117
 409              	.LBE252:
 410              	.LBE253:
 225:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 411              		.loc 1 225 3 view .LVU118
 412 0076 0220     		movs	r0, #2
 413              		.loc 1 256 1 view .LVU119
 414 0078 7047     		bx	lr
 415              		.cfi_endproc
 416              	.LFE290:
 418              		.section	.text.HAL_ADCEx_InjectedStart,"ax",%progbits
 419              		.align	1
 420              		.global	HAL_ADCEx_InjectedStart
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 425              	HAL_ADCEx_InjectedStart:
 426              	.LVL36:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 125


 427              	.LFB291:
 257:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 258:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 259:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group.
 260:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function: None.
 261:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled when multimode feature is available:
 262:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart() API must be called for ADC slave first,
 263:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         then for ADC master.
 264:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 265:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 266:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 267:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 268:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 269:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart(ADC_HandleTypeDef *hadc)
 270:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 428              		.loc 1 270 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 0
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 271:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 432              		.loc 1 271 3 view .LVU121
 272:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 433              		.loc 1 272 3 view .LVU122
 273:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 274:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 275:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 276:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 277:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 278:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 434              		.loc 1 278 3 view .LVU123
 279:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 280:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 435              		.loc 1 280 3 view .LVU124
 436              		.loc 1 280 7 is_stmt 0 view .LVU125
 437 0000 0368     		ldr	r3, [r0]
 438              	.LVL37:
 439              	.LBB254:
 440              	.LBI254:
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 441              		.loc 2 6353 26 is_stmt 1 view .LVU126
 442              	.LBB255:
 443              		.loc 2 6355 3 view .LVU127
 444              		.loc 2 6355 12 is_stmt 0 view .LVU128
 445 0002 9A68     		ldr	r2, [r3, #8]
 446              		.loc 2 6355 76 view .LVU129
 447 0004 12F0080F 		tst	r2, #8
 448 0008 44D1     		bne	.L31
 449              	.LBE255:
 450              	.LBE254:
 270:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 451              		.loc 1 270 1 view .LVU130
 452 000a 10B5     		push	{r4, lr}
 453              	.LCFI8:
 454              		.cfi_def_cfa_offset 8
 455              		.cfi_offset 4, -8
 456              		.cfi_offset 14, -4
 457 000c 0446     		mov	r4, r0
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 126


 458              	.LVL38:
 281:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 282:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 283:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 284:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 285:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 286:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 287:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 288:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 289:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 290:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 291:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 292:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          the queue is empty */
 293:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 459              		.loc 1 293 5 is_stmt 1 view .LVU131
 460              		.loc 1 293 33 is_stmt 0 view .LVU132
 461 000e DA68     		ldr	r2, [r3, #12]
 462              	.LVL39:
 294:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 295:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 463              		.loc 1 295 5 is_stmt 1 view .LVU133
 464              		.loc 1 295 10 is_stmt 0 view .LVU134
 465 0010 DB6C     		ldr	r3, [r3, #76]
 466              		.loc 1 295 8 view .LVU135
 467 0012 13F0C00F 		tst	r3, #192
 468 0016 01D1     		bne	.L26
 296:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 469              		.loc 1 296 9 view .LVU136
 470 0018 002A     		cmp	r2, #0
 471 001a 2EDA     		bge	.L37
 472              	.L26:
 297:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        )
 298:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 299:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 300:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 301:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 302:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 303:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 304:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 473              		.loc 1 304 5 is_stmt 1 view .LVU137
 474              		.loc 1 304 5 view .LVU138
 475 001c 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 476 0020 012B     		cmp	r3, #1
 477 0022 39D0     		beq	.L32
 478              		.loc 1 304 5 discriminator 2 view .LVU139
 479 0024 0123     		movs	r3, #1
 480 0026 84F85030 		strb	r3, [r4, #80]
 481              		.loc 1 304 5 discriminator 2 view .LVU140
 305:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 306:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 307:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 482              		.loc 1 307 5 discriminator 2 view .LVU141
 483              		.loc 1 307 22 is_stmt 0 discriminator 2 view .LVU142
 484 002a 2046     		mov	r0, r4
 485              	.LVL40:
 486              		.loc 1 307 22 discriminator 2 view .LVU143
 487 002c FFF7FEFF 		bl	ADC_Enable
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 127


 488              	.LVL41:
 308:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 309:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 310:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 489              		.loc 1 310 5 is_stmt 1 discriminator 2 view .LVU144
 490              		.loc 1 310 8 is_stmt 0 discriminator 2 view .LVU145
 491 0030 60BB     		cbnz	r0, .L27
 311:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 312:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 313:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 492              		.loc 1 313 7 is_stmt 1 view .LVU146
 493              		.loc 1 313 16 is_stmt 0 view .LVU147
 494 0032 636D     		ldr	r3, [r4, #84]
 495              		.loc 1 313 10 view .LVU148
 496 0034 13F4807F 		tst	r3, #256
 497 0038 25D0     		beq	.L28
 314:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 315:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 316:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 498              		.loc 1 316 9 is_stmt 1 view .LVU149
 499 003a A36D     		ldr	r3, [r4, #88]
 500 003c 23F00803 		bic	r3, r3, #8
 501 0040 A365     		str	r3, [r4, #88]
 502              	.L29:
 317:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 318:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 319:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 320:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 321:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 322:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 323:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 324:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 325:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 326:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 327:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 503              		.loc 1 327 7 view .LVU150
 504 0042 636D     		ldr	r3, [r4, #84]
 505 0044 23F44053 		bic	r3, r3, #12288
 506 0048 23F00103 		bic	r3, r3, #1
 507 004c 43F48053 		orr	r3, r3, #4096
 508 0050 6365     		str	r3, [r4, #84]
 328:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 329:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 330:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 331:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 332:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 333:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 334:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 335:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 336:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 337:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 338:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 339:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 340:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 341:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 342:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 343:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 128


 344:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 345:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 509              		.loc 1 345 7 view .LVU151
 510 0052 2368     		ldr	r3, [r4]
 511 0054 6022     		movs	r2, #96
 512 0056 1A60     		str	r2, [r3]
 346:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 347:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 348:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 349:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 350:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 513              		.loc 1 350 7 view .LVU152
 514              		.loc 1 350 7 view .LVU153
 515 0058 0023     		movs	r3, #0
 516 005a 84F85030 		strb	r3, [r4, #80]
 517              		.loc 1 350 7 view .LVU154
 351:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 352:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 353:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 354:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 355:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 356:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 357:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 358:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 359:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 360:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 361:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 362:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 363:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 364:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 365:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 366:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 367:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 368:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 369:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 370:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 371:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 372:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 373:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 374:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 375:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 376:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 377:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 378:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 379:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 380:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 381:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 382:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
 383:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 518              		.loc 1 383 7 view .LVU155
 519              		.loc 1 383 11 is_stmt 0 view .LVU156
 520 005e 2268     		ldr	r2, [r4]
 521              	.LVL42:
 522              	.LBB256:
 523              	.LBI256:
4290:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 524              		.loc 2 4290 26 is_stmt 1 view .LVU157
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 129


 525              	.LBB257:
4292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 526              		.loc 2 4292 3 view .LVU158
4292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 527              		.loc 2 4292 21 is_stmt 0 view .LVU159
 528 0060 D368     		ldr	r3, [r2, #12]
 529              	.LVL43:
4292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 530              		.loc 2 4292 21 view .LVU160
 531              	.LBE257:
 532              	.LBE256:
 533              		.loc 1 383 10 view .LVU161
 534 0062 13F0007F 		tst	r3, #33554432
 535 0066 18D1     		bne	.L25
 384:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 385:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 386:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 536              		.loc 1 386 9 is_stmt 1 view .LVU162
 537              	.LVL44:
 538              	.LBB258:
 539              	.LBI258:
6317:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 540              		.loc 2 6317 22 view .LVU163
 541              	.LBB259:
6322:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 542              		.loc 2 6322 3 view .LVU164
 543 0068 9368     		ldr	r3, [r2, #8]
 544 006a 23F00043 		bic	r3, r3, #-2147483648
 545 006e 23F03F03 		bic	r3, r3, #63
 546 0072 43F00803 		orr	r3, r3, #8
 547 0076 9360     		str	r3, [r2, #8]
6325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 548              		.loc 2 6325 1 is_stmt 0 view .LVU165
 549 0078 0FE0     		b	.L25
 550              	.LVL45:
 551              	.L37:
6325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 552              		.loc 2 6325 1 view .LVU166
 553              	.LBE259:
 554              	.LBE258:
 299:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 555              		.loc 1 299 7 is_stmt 1 view .LVU167
 556 007a 436D     		ldr	r3, [r0, #84]
 557 007c 43F02003 		orr	r3, r3, #32
 558 0080 4365     		str	r3, [r0, #84]
 300:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 559              		.loc 1 300 7 view .LVU168
 300:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 560              		.loc 1 300 14 is_stmt 0 view .LVU169
 561 0082 0120     		movs	r0, #1
 562              	.LVL46:
 300:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 563              		.loc 1 300 14 view .LVU170
 564 0084 09E0     		b	.L25
 565              	.LVL47:
 566              	.L28:
 321:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 130


 567              		.loc 1 321 9 is_stmt 1 view .LVU171
 568 0086 0023     		movs	r3, #0
 569 0088 A365     		str	r3, [r4, #88]
 570 008a DAE7     		b	.L29
 571              	.L27:
 387:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 388:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 389:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 390:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 391:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 392:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 393:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 394:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 572              		.loc 1 394 7 view .LVU172
 573              		.loc 1 394 7 view .LVU173
 574 008c 0023     		movs	r3, #0
 575 008e 84F85030 		strb	r3, [r4, #80]
 576              		.loc 1 394 7 view .LVU174
 395:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 396:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 397:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 398:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 577              		.loc 1 398 5 view .LVU175
 578              		.loc 1 398 12 is_stmt 0 view .LVU176
 579 0092 02E0     		b	.L25
 580              	.LVL48:
 581              	.L31:
 582              	.LCFI9:
 583              		.cfi_def_cfa_offset 0
 584              		.cfi_restore 4
 585              		.cfi_restore 14
 282:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 586              		.loc 1 282 12 view .LVU177
 587 0094 0220     		movs	r0, #2
 588              	.LVL49:
 399:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 400:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 589              		.loc 1 400 1 view .LVU178
 590 0096 7047     		bx	lr
 591              	.LVL50:
 592              	.L32:
 593              	.LCFI10:
 594              		.cfi_def_cfa_offset 8
 595              		.cfi_offset 4, -8
 596              		.cfi_offset 14, -4
 304:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 597              		.loc 1 304 5 view .LVU179
 598 0098 0220     		movs	r0, #2
 599              	.LVL51:
 600              	.L25:
 601              		.loc 1 400 1 view .LVU180
 602 009a 10BD     		pop	{r4, pc}
 603              		.loc 1 400 1 view .LVU181
 604              		.cfi_endproc
 605              	.LFE291:
 607              		.section	.text.HAL_ADCEx_InjectedStop,"ax",%progbits
 608              		.align	1
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 131


 609              		.global	HAL_ADCEx_InjectedStop
 610              		.syntax unified
 611              		.thumb
 612              		.thumb_func
 614              	HAL_ADCEx_InjectedStop:
 615              	.LVL52:
 616              	.LFB292:
 401:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 402:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 403:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels. Disable ADC peripheral if
 404:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         no regular conversion is on going.
 405:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 406:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 407:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 408:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 409:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 410:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of multimode enabled (when multimode feature is available),
 411:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop() must be called for ADC master first, then for ADC slave.
 412:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 413:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 414:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 415:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 416:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 417:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 418:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop(ADC_HandleTypeDef *hadc)
 419:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 617              		.loc 1 419 1 is_stmt 1 view -0
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 420:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 621              		.loc 1 420 3 view .LVU183
 421:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 422:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 423:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 622              		.loc 1 423 3 view .LVU184
 424:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 425:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 426:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 623              		.loc 1 426 3 view .LVU185
 624              		.loc 1 426 3 view .LVU186
 625 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 626 0004 012B     		cmp	r3, #1
 627 0006 23D0     		beq	.L42
 419:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 628              		.loc 1 419 1 is_stmt 0 discriminator 2 view .LVU187
 629 0008 10B5     		push	{r4, lr}
 630              	.LCFI11:
 631              		.cfi_def_cfa_offset 8
 632              		.cfi_offset 4, -8
 633              		.cfi_offset 14, -4
 634 000a 0446     		mov	r4, r0
 635              		.loc 1 426 3 is_stmt 1 discriminator 2 view .LVU188
 636 000c 0123     		movs	r3, #1
 637 000e 80F85030 		strb	r3, [r0, #80]
 638              		.loc 1 426 3 discriminator 2 view .LVU189
 427:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 132


 428:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 429:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 639              		.loc 1 429 3 discriminator 2 view .LVU190
 640              		.loc 1 429 20 is_stmt 0 discriminator 2 view .LVU191
 641 0012 0221     		movs	r1, #2
 642 0014 FFF7FEFF 		bl	ADC_ConversionStop
 643              	.LVL53:
 430:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 431:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 432:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* and if no conversion on regular group is on-going                       */
 433:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 644              		.loc 1 433 3 is_stmt 1 discriminator 2 view .LVU192
 645              		.loc 1 433 6 is_stmt 0 discriminator 2 view .LVU193
 646 0018 40B9     		cbnz	r0, .L40
 434:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 435:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
 647              		.loc 1 435 5 is_stmt 1 view .LVU194
 648              		.loc 1 435 9 is_stmt 0 view .LVU195
 649 001a 2368     		ldr	r3, [r4]
 650              	.LVL54:
 651              	.LBB260:
 652              	.LBI260:
6170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 653              		.loc 2 6170 26 is_stmt 1 view .LVU196
 654              	.LBB261:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 655              		.loc 2 6172 3 view .LVU197
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 656              		.loc 2 6172 12 is_stmt 0 view .LVU198
 657 001c 9B68     		ldr	r3, [r3, #8]
 658              	.LVL55:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 659              		.loc 2 6172 74 view .LVU199
 660 001e 13F0040F 		tst	r3, #4
 661 0022 07D0     		beq	.L41
 662              	.LVL56:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 663              		.loc 2 6172 74 view .LVU200
 664              	.LBE261:
 665              	.LBE260:
 436:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 437:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 438:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 439:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 440:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 441:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 442:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 443:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 444:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 445:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 446:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 447:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 448:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 449:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 450:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 451:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 452:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 133


 453:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 454:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 666              		.loc 1 454 7 is_stmt 1 view .LVU201
 667 0024 636D     		ldr	r3, [r4, #84]
 668 0026 23F48053 		bic	r3, r3, #4096
 669 002a 6365     		str	r3, [r4, #84]
 670              	.L40:
 455:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 456:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 457:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 458:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 459:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 671              		.loc 1 459 3 view .LVU202
 672              		.loc 1 459 3 view .LVU203
 673 002c 0023     		movs	r3, #0
 674 002e 84F85030 		strb	r3, [r4, #80]
 675              		.loc 1 459 3 view .LVU204
 460:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 461:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 462:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 676              		.loc 1 462 3 view .LVU205
 463:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 677              		.loc 1 463 1 is_stmt 0 view .LVU206
 678 0032 10BD     		pop	{r4, pc}
 679              	.LVL57:
 680              	.L41:
 438:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 681              		.loc 1 438 7 is_stmt 1 view .LVU207
 438:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 682              		.loc 1 438 24 is_stmt 0 view .LVU208
 683 0034 2046     		mov	r0, r4
 684              	.LVL58:
 438:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 685              		.loc 1 438 24 view .LVU209
 686 0036 FFF7FEFF 		bl	ADC_Disable
 687              	.LVL59:
 441:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 688              		.loc 1 441 7 is_stmt 1 view .LVU210
 441:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 689              		.loc 1 441 10 is_stmt 0 view .LVU211
 690 003a 0028     		cmp	r0, #0
 691 003c F6D1     		bne	.L40
 444:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 692              		.loc 1 444 9 is_stmt 1 view .LVU212
 693 003e 636D     		ldr	r3, [r4, #84]
 694 0040 23F48853 		bic	r3, r3, #4352
 695 0044 23F00103 		bic	r3, r3, #1
 696 0048 43F00103 		orr	r3, r3, #1
 697 004c 6365     		str	r3, [r4, #84]
 698 004e EDE7     		b	.L40
 699              	.LVL60:
 700              	.L42:
 701              	.LCFI12:
 702              		.cfi_def_cfa_offset 0
 703              		.cfi_restore 4
 704              		.cfi_restore 14
 426:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 134


 705              		.loc 1 426 3 is_stmt 0 view .LVU213
 706 0050 0220     		movs	r0, #2
 707              	.LVL61:
 708              		.loc 1 463 1 view .LVU214
 709 0052 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE292:
 713              		.section	.text.HAL_ADCEx_InjectedPollForConversion,"ax",%progbits
 714              		.align	1
 715              		.global	HAL_ADCEx_InjectedPollForConversion
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 720              	HAL_ADCEx_InjectedPollForConversion:
 721              	.LVL62:
 722              	.LFB293:
 464:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 465:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 466:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Wait for injected group conversion to be completed.
 467:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 468:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param Timeout Timeout value in millisecond.
 469:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Depending on hadc->Init.EOCSelection, JEOS or JEOC is
 470:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         checked and cleared depending on AUTDLY bit status.
 471:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 472:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 473:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedPollForConversion(ADC_HandleTypeDef *hadc, uint32_t Timeout)
 474:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 723              		.loc 1 474 1 is_stmt 1 view -0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		.loc 1 474 1 is_stmt 0 view .LVU216
 728 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 729              	.LCFI13:
 730              		.cfi_def_cfa_offset 24
 731              		.cfi_offset 3, -24
 732              		.cfi_offset 4, -20
 733              		.cfi_offset 5, -16
 734              		.cfi_offset 6, -12
 735              		.cfi_offset 7, -8
 736              		.cfi_offset 14, -4
 737 0002 0446     		mov	r4, r0
 738 0004 0D46     		mov	r5, r1
 475:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
 739              		.loc 1 475 3 is_stmt 1 view .LVU217
 476:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_Flag_End;
 740              		.loc 1 476 3 view .LVU218
 477:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_inj_is_trigger_source_sw_start;
 741              		.loc 1 477 3 view .LVU219
 478:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_reg_is_trigger_source_sw_start;
 742              		.loc 1 478 3 view .LVU220
 479:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_cfgr;
 743              		.loc 1 479 3 view .LVU221
 480:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 481:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   const ADC_TypeDef *tmpADC_Master;
 482:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 483:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 135


 484:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 485:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 486:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 744              		.loc 1 486 3 view .LVU222
 487:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 488:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* If end of sequence selected */
 489:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (hadc->Init.EOCSelection == ADC_EOC_SEQ_CONV)
 745              		.loc 1 489 3 view .LVU223
 746              		.loc 1 489 17 is_stmt 0 view .LVU224
 747 0006 4369     		ldr	r3, [r0, #20]
 748              		.loc 1 489 6 view .LVU225
 749 0008 082B     		cmp	r3, #8
 750 000a 1ED0     		beq	.L64
 490:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 491:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOS;
 492:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 493:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else /* end of conversion selected */
 494:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 495:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_Flag_End = ADC_FLAG_JEOC;
 751              		.loc 1 495 18 view .LVU226
 752 000c 2026     		movs	r6, #32
 753              	.L48:
 754              	.LVL63:
 496:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 497:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 498:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Get timeout */
 499:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tickstart = HAL_GetTick();
 755              		.loc 1 499 3 is_stmt 1 view .LVU227
 756              		.loc 1 499 15 is_stmt 0 view .LVU228
 757 000e FFF7FEFF 		bl	HAL_GetTick
 758              	.LVL64:
 759              		.loc 1 499 15 view .LVU229
 760 0012 0746     		mov	r7, r0
 761              	.LVL65:
 500:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 501:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Wait until End of Conversion or Sequence flag is raised */
 502:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   while ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 762              		.loc 1 502 3 is_stmt 1 view .LVU230
 763              	.L50:
 764              		.loc 1 502 9 view .LVU231
 765              		.loc 1 502 15 is_stmt 0 view .LVU232
 766 0014 2368     		ldr	r3, [r4]
 767              		.loc 1 502 25 view .LVU233
 768 0016 1A68     		ldr	r2, [r3]
 769              		.loc 1 502 9 view .LVU234
 770 0018 3242     		tst	r2, r6
 771 001a 18D1     		bne	.L65
 503:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 504:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if timeout is disabled (set to infinite wait) */
 505:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (Timeout != HAL_MAX_DELAY)
 772              		.loc 1 505 5 is_stmt 1 view .LVU235
 773              		.loc 1 505 8 is_stmt 0 view .LVU236
 774 001c B5F1FF3F 		cmp	r5, #-1
 775 0020 F8D0     		beq	.L50
 506:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 507:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0UL))
 776              		.loc 1 507 7 is_stmt 1 view .LVU237
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 136


 777              		.loc 1 507 13 is_stmt 0 view .LVU238
 778 0022 FFF7FEFF 		bl	HAL_GetTick
 779              	.LVL66:
 780              		.loc 1 507 27 view .LVU239
 781 0026 C31B     		subs	r3, r0, r7
 782              		.loc 1 507 10 view .LVU240
 783 0028 AB42     		cmp	r3, r5
 784 002a 01D8     		bhi	.L51
 785              		.loc 1 507 51 discriminator 1 view .LVU241
 786 002c 002D     		cmp	r5, #0
 787 002e F1D1     		bne	.L50
 788              	.L51:
 508:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 509:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
 510:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((hadc->Instance->ISR & tmp_Flag_End) == 0UL)
 789              		.loc 1 510 9 is_stmt 1 view .LVU242
 790              		.loc 1 510 18 is_stmt 0 view .LVU243
 791 0030 2368     		ldr	r3, [r4]
 792              		.loc 1 510 28 view .LVU244
 793 0032 1B68     		ldr	r3, [r3]
 794              		.loc 1 510 12 view .LVU245
 795 0034 3342     		tst	r3, r6
 796 0036 EDD1     		bne	.L50
 511:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 512:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to timeout */
 513:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_TIMEOUT);
 797              		.loc 1 513 11 is_stmt 1 view .LVU246
 798 0038 636D     		ldr	r3, [r4, #84]
 799 003a 43F00403 		orr	r3, r3, #4
 800 003e 6365     		str	r3, [r4, #84]
 514:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 515:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
 516:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
 801              		.loc 1 516 11 view .LVU247
 802              		.loc 1 516 11 view .LVU248
 803 0040 0023     		movs	r3, #0
 804 0042 84F85030 		strb	r3, [r4, #80]
 805              		.loc 1 516 11 view .LVU249
 517:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 518:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           return HAL_TIMEOUT;
 806              		.loc 1 518 11 view .LVU250
 807              		.loc 1 518 18 is_stmt 0 view .LVU251
 808 0046 0320     		movs	r0, #3
 809 0048 30E0     		b	.L52
 810              	.LVL67:
 811              	.L64:
 491:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 812              		.loc 1 491 18 view .LVU252
 813 004a 4026     		movs	r6, #64
 814 004c DFE7     		b	.L48
 815              	.LVL68:
 816              	.L65:
 519:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 520:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 521:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 522:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 523:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 137


 524:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Retrieve ADC configuration */
 525:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_inj_is_trigger_source_sw_start = LL_ADC_INJ_IsTriggerSourceSWStart(hadc->Instance);
 817              		.loc 1 525 3 is_stmt 1 view .LVU253
 818              	.LBB262:
 819              	.LBI262:
3974:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 820              		.loc 2 3974 26 view .LVU254
 821              	.LBB263:
3976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 822              		.loc 2 3976 3 view .LVU255
3976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 823              		.loc 2 3976 12 is_stmt 0 view .LVU256
 824 004e DA6C     		ldr	r2, [r3, #76]
3976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 825              		.loc 2 3976 105 view .LVU257
 826 0050 12F0C00F 		tst	r2, #192
 827 0054 2BD1     		bne	.L60
 828 0056 0120     		movs	r0, #1
 829              	.L54:
 830              	.LVL69:
3976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 831              		.loc 2 3976 105 view .LVU258
 832              	.LBE263:
 833              	.LBE262:
 526:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_reg_is_trigger_source_sw_start = LL_ADC_REG_IsTriggerSourceSWStart(hadc->Instance);
 834              		.loc 1 526 3 is_stmt 1 view .LVU259
 835              	.LBB265:
 836              	.LBI265:
3248:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 837              		.loc 2 3248 26 view .LVU260
 838              	.LBB266:
3250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 839              		.loc 2 3250 3 view .LVU261
3250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 840              		.loc 2 3250 12 is_stmt 0 view .LVU262
 841 0058 DA68     		ldr	r2, [r3, #12]
3250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 842              		.loc 2 3250 103 view .LVU263
 843 005a 12F4406F 		tst	r2, #3072
 844 005e 28D1     		bne	.L61
 845 0060 0125     		movs	r5, #1
 846              	.LVL70:
 847              	.L55:
3250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 848              		.loc 2 3250 103 view .LVU264
 849              	.LBE266:
 850              	.LBE265:
 527:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Get relevant register CFGR in ADC instance of ADC master or slave  */
 528:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* in function of multimode state (for devices with multimode         */
 529:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* available).                                                        */
 530:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 531:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 532:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 533:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 534:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 535:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
 536:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 138


 537:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 538:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 539:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 540:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 541:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmpADC_Master = __LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance);
 542:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_cfgr = READ_REG(tmpADC_Master->CFGR);
 543:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 544:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
 545:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_cfgr = READ_REG(hadc->Instance->CFGR);
 851              		.loc 1 545 3 is_stmt 1 view .LVU265
 852              		.loc 1 545 12 is_stmt 0 view .LVU266
 853 0062 D968     		ldr	r1, [r3, #12]
 854              	.LVL71:
 546:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 547:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 548:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Update ADC state machine */
 549:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 855              		.loc 1 549 3 is_stmt 1 view .LVU267
 856 0064 626D     		ldr	r2, [r4, #84]
 857 0066 42F40052 		orr	r2, r2, #8192
 858 006a 6265     		str	r2, [r4, #84]
 550:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 551:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Determine whether any further conversion upcoming on group injected      */
 552:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* by external trigger or by automatic injected conversion                  */
 553:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* from group regular.                                                      */
 554:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_inj_is_trigger_source_sw_start != 0UL)            ||
 859              		.loc 1 554 3 view .LVU268
 860              		.loc 1 554 6 is_stmt 0 view .LVU269
 861 006c 30B9     		cbnz	r0, .L56
 862              		.loc 1 554 66 discriminator 1 view .LVU270
 863 006e 11F0007F 		tst	r1, #33554432
 864 0072 16D1     		bne	.L57
 555:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ((READ_BIT(tmp_cfgr, ADC_CFGR_JAUTO) == 0UL)      &&
 865              		.loc 1 555 57 view .LVU271
 866 0074 ADB1     		cbz	r5, .L57
 556:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        ((tmp_adc_reg_is_trigger_source_sw_start != 0UL)  &&
 867              		.loc 1 556 58 view .LVU272
 868 0076 11F4005F 		tst	r1, #8192
 869 007a 12D1     		bne	.L57
 870              	.L56:
 557:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         (READ_BIT(tmp_cfgr, ADC_CFGR_CONT) == 0UL))))
 558:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 559:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check whether end of sequence is reached */
 560:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_JEOS))
 871              		.loc 1 560 5 is_stmt 1 view .LVU273
 872              		.loc 1 560 9 is_stmt 0 view .LVU274
 873 007c 1A68     		ldr	r2, [r3]
 874              		.loc 1 560 8 view .LVU275
 875 007e 12F0400F 		tst	r2, #64
 876 0082 0ED0     		beq	.L57
 561:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 562:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Particular case if injected contexts queue is enabled:             */
 563:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* when the last context has been fully processed, JSQR is reset      */
 564:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* by the hardware. Even if no injected conversion is planned to come */
 565:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (queue empty, triggers are ignored), it can start again            */
 566:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* immediately after setting a new context (JADSTART is still set).   */
 567:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Therefore, state of HAL ADC injected group is kept to busy.        */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 139


 568:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (READ_BIT(tmp_cfgr, ADC_CFGR_JQM) == 0UL)
 877              		.loc 1 568 7 is_stmt 1 view .LVU276
 878              		.loc 1 568 10 is_stmt 0 view .LVU277
 879 0084 11F4001F 		tst	r1, #2097152
 880 0088 0BD1     		bne	.L57
 569:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 570:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 571:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 881              		.loc 1 571 9 is_stmt 1 view .LVU278
 882 008a 626D     		ldr	r2, [r4, #84]
 883 008c 22F48052 		bic	r2, r2, #4096
 884 0090 6265     		str	r2, [r4, #84]
 572:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 573:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((hadc->State & HAL_ADC_STATE_REG_BUSY) == 0UL)
 885              		.loc 1 573 9 view .LVU279
 886              		.loc 1 573 18 is_stmt 0 view .LVU280
 887 0092 626D     		ldr	r2, [r4, #84]
 888              		.loc 1 573 12 view .LVU281
 889 0094 12F4807F 		tst	r2, #256
 890 0098 03D1     		bne	.L57
 574:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 575:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 891              		.loc 1 575 11 is_stmt 1 view .LVU282
 892 009a 626D     		ldr	r2, [r4, #84]
 893 009c 42F00102 		orr	r2, r2, #1
 894 00a0 6265     		str	r2, [r4, #84]
 895              	.L57:
 576:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 577:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 578:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 579:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 580:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 581:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Clear polled flag */
 582:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_Flag_End == ADC_FLAG_JEOS)
 896              		.loc 1 582 3 view .LVU283
 897              		.loc 1 582 6 is_stmt 0 view .LVU284
 898 00a2 402E     		cmp	r6, #64
 899 00a4 07D0     		beq	.L66
 583:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 584:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear end of sequence JEOS flag of injected group if low power feature */
 585:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* "LowPowerAutoWait " is disabled, to not interfere with this feature.   */
 586:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* For injected groups, no new conversion will start before JEOS is       */
 587:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* cleared.                                                               */
 588:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (READ_BIT(tmp_cfgr, ADC_CFGR_AUTDLY) == 0UL)
 589:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 590:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 591:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 592:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 593:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 594:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 595:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_JEOC);
 900              		.loc 1 595 5 is_stmt 1 view .LVU285
 901 00a6 2022     		movs	r2, #32
 902 00a8 1A60     		str	r2, [r3]
 596:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 597:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 598:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return API HAL status */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 140


 599:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return HAL_OK;
 903              		.loc 1 599 10 is_stmt 0 view .LVU286
 904 00aa 0020     		movs	r0, #0
 905              	.LVL72:
 906              	.L52:
 600:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 907              		.loc 1 600 1 view .LVU287
 908 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 909              	.LVL73:
 910              	.L60:
 911              	.LBB268:
 912              	.LBB264:
3976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 913              		.loc 2 3976 105 view .LVU288
 914 00ae 0020     		movs	r0, #0
 915 00b0 D2E7     		b	.L54
 916              	.LVL74:
 917              	.L61:
3976:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 918              		.loc 2 3976 105 view .LVU289
 919              	.LBE264:
 920              	.LBE268:
 921              	.LBB269:
 922              	.LBB267:
3250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 923              		.loc 2 3250 103 view .LVU290
 924 00b2 0025     		movs	r5, #0
 925              	.LVL75:
3250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 926              		.loc 2 3250 103 view .LVU291
 927 00b4 D5E7     		b	.L55
 928              	.LVL76:
 929              	.L66:
3250:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 930              		.loc 2 3250 103 view .LVU292
 931              	.LBE267:
 932              	.LBE269:
 588:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 933              		.loc 1 588 5 is_stmt 1 view .LVU293
 588:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 934              		.loc 1 588 8 is_stmt 0 view .LVU294
 935 00b6 11F4804F 		tst	r1, #16384
 936 00ba 03D1     		bne	.L62
 590:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 937              		.loc 1 590 7 is_stmt 1 view .LVU295
 938 00bc 6022     		movs	r2, #96
 939 00be 1A60     		str	r2, [r3]
 599:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 940              		.loc 1 599 10 is_stmt 0 view .LVU296
 941 00c0 0020     		movs	r0, #0
 942              	.LVL77:
 599:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 943              		.loc 1 599 10 view .LVU297
 944 00c2 F3E7     		b	.L52
 945              	.LVL78:
 946              	.L62:
 599:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 141


 947              		.loc 1 599 10 view .LVU298
 948 00c4 0020     		movs	r0, #0
 949              	.LVL79:
 599:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 950              		.loc 1 599 10 view .LVU299
 951 00c6 F1E7     		b	.L52
 952              		.cfi_endproc
 953              	.LFE293:
 955              		.section	.text.HAL_ADCEx_InjectedStart_IT,"ax",%progbits
 956              		.align	1
 957              		.global	HAL_ADCEx_InjectedStart_IT
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 962              	HAL_ADCEx_InjectedStart_IT:
 963              	.LVL80:
 964              	.LFB294:
 601:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 602:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 603:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start conversion of injected group with interruption.
 604:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Interruptions enabled in this function according to initialization
 605:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         setting : JEOC (end of conversion) or JEOS (end of sequence)
 606:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is enabled):
 607:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStart_IT() API must be called for ADC slave first,
 608:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         then for ADC master.
 609:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is enabled only (conversion is not started).
 610:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, ADC is enabled and multimode conversion is started.
 611:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle.
 612:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
 613:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 614:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStart_IT(ADC_HandleTypeDef *hadc)
 615:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 965              		.loc 1 615 1 is_stmt 1 view -0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 0
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 616:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 969              		.loc 1 616 3 view .LVU301
 617:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_injected_queue;
 970              		.loc 1 617 3 view .LVU302
 618:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 619:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_multimode_config = LL_ADC_GetMultimode(__LL_ADC_COMMON_INSTANCE(hadc->Instance));
 620:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 621:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 622:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 623:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 971              		.loc 1 623 3 view .LVU303
 624:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 625:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) != 0UL)
 972              		.loc 1 625 3 view .LVU304
 973              		.loc 1 625 7 is_stmt 0 view .LVU305
 974 0000 0368     		ldr	r3, [r0]
 975              	.LVL81:
 976              	.LBB270:
 977              	.LBI270:
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 978              		.loc 2 6353 26 is_stmt 1 view .LVU306
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 142


 979              	.LBB271:
 980              		.loc 2 6355 3 view .LVU307
 981              		.loc 2 6355 12 is_stmt 0 view .LVU308
 982 0002 9A68     		ldr	r2, [r3, #8]
 983              		.loc 2 6355 76 view .LVU309
 984 0004 12F0080F 		tst	r2, #8
 985 0008 66D1     		bne	.L77
 986              	.LBE271:
 987              	.LBE270:
 615:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 988              		.loc 1 615 1 view .LVU310
 989 000a 10B5     		push	{r4, lr}
 990              	.LCFI14:
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 4, -8
 993              		.cfi_offset 14, -4
 994 000c 0446     		mov	r4, r0
 995              	.LVL82:
 626:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 627:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 628:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 629:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 630:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 631:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* In case of software trigger detection enabled, JQDIS must be set
 632:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (which can be done only if ADSTART and JADSTART are both cleared).
 633:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        If JQDIS is not set at that point, returns an error
 634:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - since software trigger detection is disabled. User needs to
 635:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        resort to HAL_ADCEx_DisableInjectedQueue() API to set JQDIS.
 636:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        - or (if JQDIS is intentionally reset) since JEXTEN = 0 which means
 637:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          the queue is empty */
 638:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_config_injected_queue = READ_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 996              		.loc 1 638 5 is_stmt 1 view .LVU311
 997              		.loc 1 638 33 is_stmt 0 view .LVU312
 998 000e DA68     		ldr	r2, [r3, #12]
 999              	.LVL83:
 639:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 640:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((READ_BIT(hadc->Instance->JSQR, ADC_JSQR_JEXTEN) == 0UL)
 1000              		.loc 1 640 5 is_stmt 1 view .LVU313
 1001              		.loc 1 640 10 is_stmt 0 view .LVU314
 1002 0010 DB6C     		ldr	r3, [r3, #76]
 1003              		.loc 1 640 8 view .LVU315
 1004 0012 13F0C00F 		tst	r3, #192
 1005 0016 01D1     		bne	.L69
 641:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         && (tmp_config_injected_queue == 0UL)
 1006              		.loc 1 641 9 view .LVU316
 1007 0018 002A     		cmp	r2, #0
 1008 001a 45DA     		bge	.L83
 1009              	.L69:
 642:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****        )
 643:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 644:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 645:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 646:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 647:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 648:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 649:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 1010              		.loc 1 649 5 is_stmt 1 view .LVU317
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 143


 1011              		.loc 1 649 5 view .LVU318
 1012 001c 94F85030 		ldrb	r3, [r4, #80]	@ zero_extendqisi2
 1013 0020 012B     		cmp	r3, #1
 1014 0022 5BD0     		beq	.L78
 1015              		.loc 1 649 5 discriminator 2 view .LVU319
 1016 0024 0123     		movs	r3, #1
 1017 0026 84F85030 		strb	r3, [r4, #80]
 1018              		.loc 1 649 5 discriminator 2 view .LVU320
 650:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 651:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripheral */
 652:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 1019              		.loc 1 652 5 discriminator 2 view .LVU321
 1020              		.loc 1 652 22 is_stmt 0 discriminator 2 view .LVU322
 1021 002a 2046     		mov	r0, r4
 1022              	.LVL84:
 1023              		.loc 1 652 22 discriminator 2 view .LVU323
 1024 002c FFF7FEFF 		bl	ADC_Enable
 1025              	.LVL85:
 653:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 654:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start conversion if ADC is effectively enabled */
 655:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 1026              		.loc 1 655 5 is_stmt 1 discriminator 2 view .LVU324
 1027              		.loc 1 655 8 is_stmt 0 discriminator 2 view .LVU325
 1028 0030 0028     		cmp	r0, #0
 1029 0032 4DD1     		bne	.L70
 656:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 657:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if a regular conversion is ongoing */
 658:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((hadc->State & HAL_ADC_STATE_REG_BUSY) != 0UL)
 1030              		.loc 1 658 7 is_stmt 1 view .LVU326
 1031              		.loc 1 658 16 is_stmt 0 view .LVU327
 1032 0034 636D     		ldr	r3, [r4, #84]
 1033              		.loc 1 658 10 view .LVU328
 1034 0036 13F4807F 		tst	r3, #256
 1035 003a 3BD0     		beq	.L71
 659:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 660:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Reset ADC error code field related to injected conversions only */
 661:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->ErrorCode, HAL_ADC_ERROR_JQOVF);
 1036              		.loc 1 661 9 is_stmt 1 view .LVU329
 1037 003c A36D     		ldr	r3, [r4, #88]
 1038 003e 23F00803 		bic	r3, r3, #8
 1039 0042 A365     		str	r3, [r4, #88]
 1040              	.L72:
 662:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 663:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 664:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 665:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC error code to none */
 666:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_CLEAR_ERRORCODE(hadc);
 667:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 668:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 669:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state                                                        */
 670:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Clear state bitfield related to injected group conversion results  */
 671:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* - Set state bitfield related to injected operation                   */
 672:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 1041              		.loc 1 672 7 view .LVU330
 1042 0044 636D     		ldr	r3, [r4, #84]
 1043 0046 23F44053 		bic	r3, r3, #12288
 1044 004a 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 144


 1045 004e 43F48053 		orr	r3, r3, #4096
 1046 0052 6365     		str	r3, [r4, #84]
 673:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_READY | HAL_ADC_STATE_INJ_EOC,
 674:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_INJ_BUSY);
 675:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 676:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 677:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Reset HAL_ADC_STATE_MULTIMODE_SLAVE bit
 678:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if ADC instance is master or if multimode feature is not available
 679:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         - if multimode setting is disabled (ADC instance slave in independent mode) */
 680:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 681:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 682:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 683:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 684:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 685:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 686:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 687:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 688:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Clear ADC group injected group conversion flag */
 689:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 690:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JEOC | ADC_FLAG_JEOS));
 1047              		.loc 1 690 7 view .LVU331
 1048 0054 2368     		ldr	r3, [r4]
 1049 0056 6022     		movs	r2, #96
 1050 0058 1A60     		str	r2, [r3]
 691:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 692:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 693:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 694:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 695:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1051              		.loc 1 695 7 view .LVU332
 1052              		.loc 1 695 7 view .LVU333
 1053 005a 0023     		movs	r3, #0
 1054 005c 84F85030 		strb	r3, [r4, #80]
 1055              		.loc 1 695 7 view .LVU334
 696:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 697:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC Injected context queue overflow interrupt if this feature   */
 698:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* is enabled.                                                            */
 699:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((hadc->Instance->CFGR & ADC_CFGR_JQM) != 0UL)
 1056              		.loc 1 699 7 view .LVU335
 1057              		.loc 1 699 16 is_stmt 0 view .LVU336
 1058 0060 2368     		ldr	r3, [r4]
 1059              		.loc 1 699 26 view .LVU337
 1060 0062 DA68     		ldr	r2, [r3, #12]
 1061              		.loc 1 699 10 view .LVU338
 1062 0064 12F4001F 		tst	r2, #2097152
 1063 0068 03D0     		beq	.L73
 700:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 701:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         __HAL_ADC_ENABLE_IT(hadc, ADC_FLAG_JQOVF);
 1064              		.loc 1 701 9 is_stmt 1 view .LVU339
 1065 006a 5A68     		ldr	r2, [r3, #4]
 1066 006c 42F48062 		orr	r2, r2, #1024
 1067 0070 5A60     		str	r2, [r3, #4]
 1068              	.L73:
 702:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 703:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 704:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC end of conversion interrupt */
 705:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       switch (hadc->Init.EOCSelection)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 145


 1069              		.loc 1 705 7 view .LVU340
 1070              		.loc 1 705 25 is_stmt 0 view .LVU341
 1071 0072 6369     		ldr	r3, [r4, #20]
 1072              		.loc 1 705 7 view .LVU342
 1073 0074 082B     		cmp	r3, #8
 1074 0076 20D0     		beq	.L84
 706:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 707:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         case ADC_EOC_SEQ_CONV:
 708:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 709:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 710:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           break;
 711:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 712:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         default:
 713:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOS);
 1075              		.loc 1 713 11 is_stmt 1 view .LVU343
 1076 0078 2268     		ldr	r2, [r4]
 1077 007a 5368     		ldr	r3, [r2, #4]
 1078 007c 23F04003 		bic	r3, r3, #64
 1079 0080 5360     		str	r3, [r2, #4]
 714:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOC);
 1080              		.loc 1 714 11 view .LVU344
 1081 0082 2268     		ldr	r2, [r4]
 1082 0084 5368     		ldr	r3, [r2, #4]
 1083 0086 43F02003 		orr	r3, r3, #32
 1084 008a 5360     		str	r3, [r2, #4]
 715:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           break;
 1085              		.loc 1 715 11 view .LVU345
 1086              	.L75:
 716:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 717:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 718:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of injected group, if automatic injected conversion  */
 719:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* is disabled.                                                           */
 720:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 721:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 722:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 723:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Case of multimode enabled (when multimode feature is available):       */
 724:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if ADC is slave,                                                       */
 725:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled only (conversion is not started),                  */
 726:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - if multimode only concerns regular conversion, ADC is enabled     */
 727:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*     and conversion is started.                                         */
 728:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If ADC is master or independent,                                       */
 729:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    - ADC is enabled and conversion is started.                         */
 730:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 731:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((__LL_ADC_MULTI_INSTANCE_MASTER(hadc->Instance) == hadc->Instance)
 732:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_INDEPENDENT)
 733:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_SIMULT)
 734:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           || (tmp_multimode_config == LL_ADC_MULTI_DUAL_REG_INTERL)
 735:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          )
 736:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 737:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 738:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 739:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 740:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           LL_ADC_INJ_StartConversion(hadc->Instance);
 741:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 742:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 743:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
 744:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 146


 745:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* ADC instance is not a multimode slave instance with multimode injected conversions enabl
 746:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_MULTIMODE_SLAVE);
 747:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 748:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
 749:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_GetTrigAuto(hadc->Instance) == LL_ADC_INJ_TRIG_INDEPENDENT)
 1087              		.loc 1 749 7 view .LVU346
 1088              		.loc 1 749 11 is_stmt 0 view .LVU347
 1089 008c 2268     		ldr	r2, [r4]
 1090              	.LVL86:
 1091              	.LBB272:
 1092              	.LBI272:
4290:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1093              		.loc 2 4290 26 is_stmt 1 view .LVU348
 1094              	.LBB273:
4292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1095              		.loc 2 4292 3 view .LVU349
4292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1096              		.loc 2 4292 21 is_stmt 0 view .LVU350
 1097 008e D368     		ldr	r3, [r2, #12]
 1098              	.LVL87:
4292:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1099              		.loc 2 4292 21 view .LVU351
 1100              	.LBE273:
 1101              	.LBE272:
 1102              		.loc 1 749 10 view .LVU352
 1103 0090 13F0007F 		tst	r3, #33554432
 1104 0094 23D1     		bne	.L68
 750:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 751:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Start ADC group injected conversion */
 752:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_INJ_StartConversion(hadc->Instance);
 1105              		.loc 1 752 9 is_stmt 1 view .LVU353
 1106              	.LVL88:
 1107              	.LBB274:
 1108              	.LBI274:
6317:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1109              		.loc 2 6317 22 view .LVU354
 1110              	.LBB275:
6322:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 1111              		.loc 2 6322 3 view .LVU355
 1112 0096 9368     		ldr	r3, [r2, #8]
 1113 0098 23F00043 		bic	r3, r3, #-2147483648
 1114 009c 23F03F03 		bic	r3, r3, #63
 1115 00a0 43F00803 		orr	r3, r3, #8
 1116 00a4 9360     		str	r3, [r2, #8]
6325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 1117              		.loc 2 6325 1 is_stmt 0 view .LVU356
 1118 00a6 1AE0     		b	.L68
 1119              	.LVL89:
 1120              	.L83:
6325:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 1121              		.loc 2 6325 1 view .LVU357
 1122              	.LBE275:
 1123              	.LBE274:
 644:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 1124              		.loc 1 644 7 is_stmt 1 view .LVU358
 1125 00a8 436D     		ldr	r3, [r0, #84]
 1126 00aa 43F02003 		orr	r3, r3, #32
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 147


 1127 00ae 4365     		str	r3, [r0, #84]
 645:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1128              		.loc 1 645 7 view .LVU359
 645:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1129              		.loc 1 645 14 is_stmt 0 view .LVU360
 1130 00b0 0120     		movs	r0, #1
 1131              	.LVL90:
 645:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1132              		.loc 1 645 14 view .LVU361
 1133 00b2 14E0     		b	.L68
 1134              	.LVL91:
 1135              	.L71:
 666:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1136              		.loc 1 666 9 is_stmt 1 view .LVU362
 1137 00b4 0023     		movs	r3, #0
 1138 00b6 A365     		str	r3, [r4, #88]
 1139 00b8 C4E7     		b	.L72
 1140              	.L84:
 708:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_ADC_ENABLE_IT(hadc, ADC_IT_JEOS);
 1141              		.loc 1 708 11 view .LVU363
 1142 00ba 2268     		ldr	r2, [r4]
 1143 00bc 5368     		ldr	r3, [r2, #4]
 1144 00be 23F02003 		bic	r3, r3, #32
 1145 00c2 5360     		str	r3, [r2, #4]
 709:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           break;
 1146              		.loc 1 709 11 view .LVU364
 1147 00c4 2268     		ldr	r2, [r4]
 1148 00c6 5368     		ldr	r3, [r2, #4]
 1149 00c8 43F04003 		orr	r3, r3, #64
 1150 00cc 5360     		str	r3, [r2, #4]
 710:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* case ADC_EOC_SINGLE_CONV */
 1151              		.loc 1 710 11 view .LVU365
 1152 00ce DDE7     		b	.L75
 1153              	.L70:
 753:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 754:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
 755:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 756:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 757:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 758:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 759:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 760:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 1154              		.loc 1 760 7 view .LVU366
 1155              		.loc 1 760 7 view .LVU367
 1156 00d0 0023     		movs	r3, #0
 1157 00d2 84F85030 		strb	r3, [r4, #80]
 1158              		.loc 1 760 7 view .LVU368
 761:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 762:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 763:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 764:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 1159              		.loc 1 764 5 view .LVU369
 1160              		.loc 1 764 12 is_stmt 0 view .LVU370
 1161 00d6 02E0     		b	.L68
 1162              	.LVL92:
 1163              	.L77:
 1164              	.LCFI15:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 148


 1165              		.cfi_def_cfa_offset 0
 1166              		.cfi_restore 4
 1167              		.cfi_restore 14
 627:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 1168              		.loc 1 627 12 view .LVU371
 1169 00d8 0220     		movs	r0, #2
 1170              	.LVL93:
 765:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 766:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1171              		.loc 1 766 1 view .LVU372
 1172 00da 7047     		bx	lr
 1173              	.LVL94:
 1174              	.L78:
 1175              	.LCFI16:
 1176              		.cfi_def_cfa_offset 8
 1177              		.cfi_offset 4, -8
 1178              		.cfi_offset 14, -4
 649:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1179              		.loc 1 649 5 view .LVU373
 1180 00dc 0220     		movs	r0, #2
 1181              	.LVL95:
 1182              	.L68:
 1183              		.loc 1 766 1 view .LVU374
 1184 00de 10BD     		pop	{r4, pc}
 1185              		.loc 1 766 1 view .LVU375
 1186              		.cfi_endproc
 1187              	.LFE294:
 1189              		.section	.text.HAL_ADCEx_InjectedStop_IT,"ax",%progbits
 1190              		.align	1
 1191              		.global	HAL_ADCEx_InjectedStop_IT
 1192              		.syntax unified
 1193              		.thumb
 1194              		.thumb_func
 1196              	HAL_ADCEx_InjectedStop_IT:
 1197              	.LVL96:
 1198              	.LFB295:
 767:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 768:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 769:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop conversion of injected channels, disable interruption of
 770:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         end-of-conversion. Disable ADC peripheral if no regular conversion
 771:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         is on going.
 772:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If ADC must be disabled and if conversion is on going on
 773:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         regular group, function HAL_ADC_Stop must be used to stop both
 774:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         injected and regular groups, and disable the ADC.
 775:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   If injected group mode auto-injection is enabled,
 776:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function HAL_ADC_Stop must be used.
 777:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Case of multimode enabled (when multimode feature is available):
 778:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedStop_IT() API must be called for ADC master first,
 779:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         then for ADC slave.
 780:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC master, conversion is stopped and ADC is disabled.
 781:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For ADC slave, ADC is disabled only (conversion stop of ADC master
 782:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         has already stopped conversion of ADC slave).
 783:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of auto-injection mode, HAL_ADC_Stop() must be used.
 784:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
 785:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 786:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 787:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedStop_IT(ADC_HandleTypeDef *hadc)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 149


 788:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1199              		.loc 1 788 1 is_stmt 1 view -0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 0
 1202              		@ frame_needed = 0, uses_anonymous_args = 0
 789:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1203              		.loc 1 789 3 view .LVU377
 790:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 791:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 792:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1204              		.loc 1 792 3 view .LVU378
 793:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 794:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 795:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1205              		.loc 1 795 3 view .LVU379
 1206              		.loc 1 795 3 view .LVU380
 1207 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1208 0004 012B     		cmp	r3, #1
 1209 0006 28D0     		beq	.L89
 788:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1210              		.loc 1 788 1 is_stmt 0 discriminator 2 view .LVU381
 1211 0008 10B5     		push	{r4, lr}
 1212              	.LCFI17:
 1213              		.cfi_def_cfa_offset 8
 1214              		.cfi_offset 4, -8
 1215              		.cfi_offset 14, -4
 1216 000a 0446     		mov	r4, r0
 1217              		.loc 1 795 3 is_stmt 1 discriminator 2 view .LVU382
 1218 000c 0123     		movs	r3, #1
 1219 000e 80F85030 		strb	r3, [r0, #80]
 1220              		.loc 1 795 3 discriminator 2 view .LVU383
 796:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 797:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential conversion on going on injected group only. */
 798:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_INJECTED_GROUP);
 1221              		.loc 1 798 3 discriminator 2 view .LVU384
 1222              		.loc 1 798 20 is_stmt 0 discriminator 2 view .LVU385
 1223 0012 0221     		movs	r1, #2
 1224 0014 FFF7FEFF 		bl	ADC_ConversionStop
 1225              	.LVL97:
 799:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 800:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if injected conversions are effectively stopped   */
 801:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* and if no conversion on the other group (regular group) is intended to   */
 802:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* continue.                                                                */
 803:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1226              		.loc 1 803 3 is_stmt 1 discriminator 2 view .LVU386
 1227              		.loc 1 803 6 is_stmt 0 discriminator 2 view .LVU387
 1228 0018 68B9     		cbnz	r0, .L87
 804:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 805:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC end of conversion interrupt for injected channels */
 806:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_JEOC | ADC_IT_JEOS | ADC_FLAG_JQOVF));
 1229              		.loc 1 806 5 is_stmt 1 view .LVU388
 1230 001a 2268     		ldr	r2, [r4]
 1231 001c 5368     		ldr	r3, [r2, #4]
 1232 001e 23F48C63 		bic	r3, r3, #1120
 1233 0022 5360     		str	r3, [r2, #4]
 807:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 808:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 150


 1234              		.loc 1 808 5 view .LVU389
 1235              		.loc 1 808 9 is_stmt 0 view .LVU390
 1236 0024 2368     		ldr	r3, [r4]
 1237              	.LVL98:
 1238              	.LBB276:
 1239              	.LBI276:
6170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1240              		.loc 2 6170 26 is_stmt 1 view .LVU391
 1241              	.LBB277:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1242              		.loc 2 6172 3 view .LVU392
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1243              		.loc 2 6172 12 is_stmt 0 view .LVU393
 1244 0026 9B68     		ldr	r3, [r3, #8]
 1245              	.LVL99:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1246              		.loc 2 6172 74 view .LVU394
 1247 0028 13F0040F 		tst	r3, #4
 1248 002c 07D0     		beq	.L88
 1249              	.LVL100:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 1250              		.loc 2 6172 74 view .LVU395
 1251              	.LBE277:
 1252              	.LBE276:
 809:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 810:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
 811:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
 812:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 813:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
 814:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
 815:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 816:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
 817:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
 818:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 819:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
 820:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 821:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 822:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
 823:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
 824:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 825:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 826:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 827:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1253              		.loc 1 827 7 is_stmt 1 view .LVU396
 1254 002e 636D     		ldr	r3, [r4, #84]
 1255 0030 23F48053 		bic	r3, r3, #4096
 1256 0034 6365     		str	r3, [r4, #84]
 1257              	.L87:
 828:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 829:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 830:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 831:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
 832:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1258              		.loc 1 832 3 view .LVU397
 1259              		.loc 1 832 3 view .LVU398
 1260 0036 0023     		movs	r3, #0
 1261 0038 84F85030 		strb	r3, [r4, #80]
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 151


 1262              		.loc 1 832 3 view .LVU399
 833:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 834:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
 835:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1263              		.loc 1 835 3 view .LVU400
 836:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1264              		.loc 1 836 1 is_stmt 0 view .LVU401
 1265 003c 10BD     		pop	{r4, pc}
 1266              	.LVL101:
 1267              	.L88:
 811:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1268              		.loc 1 811 7 is_stmt 1 view .LVU402
 811:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1269              		.loc 1 811 24 is_stmt 0 view .LVU403
 1270 003e 2046     		mov	r0, r4
 1271              	.LVL102:
 811:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1272              		.loc 1 811 24 view .LVU404
 1273 0040 FFF7FEFF 		bl	ADC_Disable
 1274              	.LVL103:
 814:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1275              		.loc 1 814 7 is_stmt 1 view .LVU405
 814:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1276              		.loc 1 814 10 is_stmt 0 view .LVU406
 1277 0044 0028     		cmp	r0, #0
 1278 0046 F6D1     		bne	.L87
 817:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
 1279              		.loc 1 817 9 is_stmt 1 view .LVU407
 1280 0048 636D     		ldr	r3, [r4, #84]
 1281 004a 23F48853 		bic	r3, r3, #4352
 1282 004e 23F00103 		bic	r3, r3, #1
 1283 0052 43F00103 		orr	r3, r3, #1
 1284 0056 6365     		str	r3, [r4, #84]
 1285 0058 EDE7     		b	.L87
 1286              	.LVL104:
 1287              	.L89:
 1288              	.LCFI18:
 1289              		.cfi_def_cfa_offset 0
 1290              		.cfi_restore 4
 1291              		.cfi_restore 14
 795:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1292              		.loc 1 795 3 is_stmt 0 view .LVU408
 1293 005a 0220     		movs	r0, #2
 1294              	.LVL105:
 1295              		.loc 1 836 1 view .LVU409
 1296 005c 7047     		bx	lr
 1297              		.cfi_endproc
 1298              	.LFE295:
 1300              		.section	.text.HAL_ADCEx_InjectedGetValue,"ax",%progbits
 1301              		.align	1
 1302              		.global	HAL_ADCEx_InjectedGetValue
 1303              		.syntax unified
 1304              		.thumb
 1305              		.thumb_func
 1307              	HAL_ADCEx_InjectedGetValue:
 1308              	.LVL106:
 1309              	.LFB296:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 152


 837:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 838:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
 839:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 840:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC, start MultiMode conversion and transfer regular results through DMA.
 841:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode must have been previously configured using
 842:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_MultiModeConfigChannel() function.
 843:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Interruptions enabled in this function:
 844:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          overrun, DMA half transfer, DMA transfer complete.
 845:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Each of these interruptions has its dedicated callback function.
 846:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   State field of Slave ADC handle is not updated in this configuration:
 847:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          user should not rely on it for information related to Slave regular
 848:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversions.
 849:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 850:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param pData Destination Buffer address.
 851:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param Length Length of data to be transferred from ADC peripheral to memory (in bytes).
 852:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 853:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 854:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStart_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t L
 855:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 856:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 857:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 858:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
 859:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 860:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 861:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 862:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
 863:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
 864:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(hadc->Init.DMAContinuousRequests));
 865:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 866:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_REG_IsConversionOngoing(hadc->Instance) != 0UL)
 867:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 868:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_BUSY;
 869:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 870:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
 871:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 872:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process locked */
 873:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_LOCK(hadc);
 874:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 875:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
 876:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
 877:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmphadcSlave);
 878:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 879:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 880:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
 881:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 882:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
 883:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 884:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 885:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
 886:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 887:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 888:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 889:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 890:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
 891:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 892:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 893:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Enable the ADC peripherals: master and slave (in case if not already   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 153


 894:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* enabled previously)                                                    */
 895:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = ADC_Enable(hadc);
 896:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 897:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 898:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Enable(&tmphadcSlave);
 899:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 900:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 901:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Start multimode conversion of ADCs pair */
 902:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
 903:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 904:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC state */
 905:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_STATE_CLR_SET(hadc->State,
 906:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         (HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR | HAL_
 907:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                         HAL_ADC_STATE_REG_BUSY);
 908:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 909:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC error code to none */
 910:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       ADC_CLEAR_ERRORCODE(hadc);
 911:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 912:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA transfer complete callback */
 913:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 914:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 915:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA half transfer complete callback */
 916:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 917:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 918:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set the DMA error callback */
 919:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->DMA_Handle->XferErrorCallback = ADC_DMAError ;
 920:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 921:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Pointer to the common control register  */
 922:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
 923:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 924:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
 925:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* start (in case of SW start):                                           */
 926:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 927:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Clear regular group conversion flag and overrun flag */
 928:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* (To ensure of no unknown state from potential previous ADC operations) */
 929:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_EOC | ADC_FLAG_EOS | ADC_FLAG_OVR));
 930:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 931:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 932:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Unlock before starting ADC conversions: in case of potential         */
 933:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* interruption, to let the process to ADC IRQ Handler.                 */
 934:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 935:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 936:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable ADC overrun interrupt */
 937:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 938:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 939:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Start the DMA channel */
 940:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&tmpADC_Common->CDR, (uint32_t)
 941:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 942:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable conversion of regular group.                                    */
 943:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If software start has been selected, conversion starts immediately.    */
 944:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If external trigger has been selected, conversion will start at next   */
 945:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* trigger event.                                                         */
 946:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Start ADC group regular conversion */
 947:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_REG_StartConversion(hadc->Instance);
 948:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 949:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
 950:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 154


 951:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
 952:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
 953:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 954:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 955:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Return function status */
 956:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return tmp_hal_status;
 957:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
 958:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 959:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 960:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
 961:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop multimode ADC conversion, disable ADC DMA transfer, disable ADC peripheral.
 962:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. MultiMode DMA bits
 963:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
 964:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
 965:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
 966:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
 967:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
 968:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADC_Stop_DMA() must be called after this function with handle of
 969:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
 970:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
 971:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
 972:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
 973:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeStop_DMA(ADC_HandleTypeDef *hadc)
 974:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 975:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 976:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
 977:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
 978:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
 979:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmphadcSlave_disable_status;
 980:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 981:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
 982:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
 983:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 984:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
 985:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 986:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 987:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 988:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular and injected groups */
 989:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_INJECTED_GROUP);
 990:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 991:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
 992:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 993:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
 994:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
 995:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
 996:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmphadcSlave);
 997:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 998:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
 999:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
1000:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1001:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
1002:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1003:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1004:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1005:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1006:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
1007:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 155


1008:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1009:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
1010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1011:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1012:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1013:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1014:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1015:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1016:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
1017:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1018:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
1019:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1020:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1021:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           )
1022:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1023:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1024:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1025:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1026:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1027:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1028:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             || (tmphadcSlave_conversion_on_going == 1UL)
1029:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            )
1030:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
1031:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1032:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1033:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1034:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
1035:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1036:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1037:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           return HAL_ERROR;
1038:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
1039:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1040:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1041:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
1042:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1043:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1044:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1045:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1046:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1047:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*       with HAL_ADC_Stop_DMA() API.                                     */
1048:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1049:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1050:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1051:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_ERROR)
1052:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1053:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1054:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1055:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1056:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1057:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1058:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1059:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1060:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave */
1061:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1062:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
1063:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1064:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 156


1065:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmphadcSlave_disable_status = ADC_Disable(&tmphadcSlave);
1066:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((ADC_Disable(hadc) == HAL_OK)           &&
1067:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           (tmphadcSlave_disable_status == HAL_OK))
1068:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1069:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = HAL_OK;
1070:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1071:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1072:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1073:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1074:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* In case of error, attempt to disable ADC master and slave without status assert */
1075:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (void) ADC_Disable(hadc);
1076:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (void) ADC_Disable(&tmphadcSlave);
1077:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1078:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1079:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set ADC state (ADC master) */
1080:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_STATE_CLR_SET(hadc->State,
1081:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
1082:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                       HAL_ADC_STATE_READY);
1083:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1084:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1085:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1086:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1087:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1088:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1089:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1090:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1091:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1092:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1093:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Return the last ADC Master and Slave regular conversions results when in multimode conf
1094:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC Master (handle of ADC Slave must not be used)
1095:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval The converted data values.
1096:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1097:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_MultiModeGetValue(ADC_HandleTypeDef *hadc)
1098:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
1099:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   const ADC_Common_TypeDef *tmpADC_Common;
1100:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1101:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1102:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1103:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1104:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning if no assert_param check */
1105:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* and possible no usage in __LL_ADC_COMMON_INSTANCE() below               */
1106:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
1107:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1108:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Pointer to the common control register  */
1109:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
1110:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1111:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return the multi mode conversion value */
1112:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmpADC_Common->CDR;
1113:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1114:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1115:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1116:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1117:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Get ADC injected group conversion result.
1118:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Reading register JDRx automatically clears ADC flag JEOC
1119:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (ADC group injected end of unitary conversion).
1120:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This function does not clear ADC flag JEOS
1121:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (ADC group injected end of sequence conversion)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 157


1122:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Occurrence of flag JEOS rising:
1123:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          - If sequencer is composed of 1 rank, flag JEOS is equivalent
1124:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            to flag JEOC.
1125:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          - If sequencer is composed of several ranks, during the scan
1126:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            sequence flag JEOC only is raised, at the end of the scan sequence
1127:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            both flags JEOC and EOS are raised.
1128:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Flag JEOS must not be cleared by this function because
1129:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         it would not be compliant with low power features
1130:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (feature low power auto-wait, not available on all STM32 families).
1131:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         To clear this flag, either use function:
1132:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         in programming model IT: @ref HAL_ADC_IRQHandler(), in programming
1133:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         model polling: @ref HAL_ADCEx_InjectedPollForConversion()
1134:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         or @ref __HAL_ADC_CLEAR_FLAG(&hadc, ADC_FLAG_JEOS).
1135:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1136:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param InjectedRank the converted ADC injected rank.
1137:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *          This parameter can be one of the following values:
1138:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_1 ADC group injected rank 1
1139:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_2 ADC group injected rank 2
1140:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_3 ADC group injected rank 3
1141:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *            @arg @ref ADC_INJECTED_RANK_4 ADC group injected rank 4
1142:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval ADC group injected conversion data
1143:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1144:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** uint32_t HAL_ADCEx_InjectedGetValue(ADC_HandleTypeDef *hadc, uint32_t InjectedRank)
1145:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1310              		.loc 1 1145 1 is_stmt 1 view -0
 1311              		.cfi_startproc
 1312              		@ args = 0, pretend = 0, frame = 0
 1313              		@ frame_needed = 0, uses_anonymous_args = 0
 1314              		@ link register save eliminated.
1146:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_jdr;
 1315              		.loc 1 1146 3 view .LVU411
1147:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1148:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1149:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1316              		.loc 1 1149 3 view .LVU412
1150:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_INJECTED_RANK(InjectedRank));
 1317              		.loc 1 1150 3 view .LVU413
1151:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1152:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Get ADC converted value */
1153:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   switch (InjectedRank)
 1318              		.loc 1 1153 3 view .LVU414
 1319 0000 B1F5057F 		cmp	r1, #532
 1320 0004 0ED0     		beq	.L95
 1321 0006 40F21A33 		movw	r3, #794
 1322 000a 9942     		cmp	r1, r3
 1323 000c 06D0     		beq	.L96
 1324 000e B1F5877F 		cmp	r1, #270
 1325 0012 0BD0     		beq	.L101
1154:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1155:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_4:
1156:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR4;
1157:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
1158:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
1159:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR3;
1160:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
1161:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
1162:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR2;
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 158


1163:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
1164:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
1165:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     default:
1166:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_jdr = hadc->Instance->JDR1;
 1326              		.loc 1 1166 7 view .LVU415
 1327              		.loc 1 1166 21 is_stmt 0 view .LVU416
 1328 0014 0368     		ldr	r3, [r0]
 1329              		.loc 1 1166 15 view .LVU417
 1330 0016 D3F88000 		ldr	r0, [r3, #128]
 1331              	.LVL107:
1167:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1332              		.loc 1 1167 7 is_stmt 1 view .LVU418
1168:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1169:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1170:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return ADC converted value */
1171:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_jdr;
 1333              		.loc 1 1171 3 view .LVU419
1172:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1334              		.loc 1 1172 1 is_stmt 0 view .LVU420
 1335 001a 7047     		bx	lr
 1336              	.LVL108:
 1337              	.L96:
1156:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1338              		.loc 1 1156 7 is_stmt 1 view .LVU421
1156:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1339              		.loc 1 1156 21 is_stmt 0 view .LVU422
 1340 001c 0368     		ldr	r3, [r0]
1156:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1341              		.loc 1 1156 15 view .LVU423
 1342 001e D3F88C00 		ldr	r0, [r3, #140]
 1343              	.LVL109:
1157:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_3:
 1344              		.loc 1 1157 7 is_stmt 1 view .LVU424
 1345 0022 7047     		bx	lr
 1346              	.LVL110:
 1347              	.L95:
1159:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1348              		.loc 1 1159 7 view .LVU425
1159:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1349              		.loc 1 1159 21 is_stmt 0 view .LVU426
 1350 0024 0368     		ldr	r3, [r0]
1159:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1351              		.loc 1 1159 15 view .LVU427
 1352 0026 D3F88800 		ldr	r0, [r3, #136]
 1353              	.LVL111:
1160:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_2:
 1354              		.loc 1 1160 7 is_stmt 1 view .LVU428
 1355 002a 7047     		bx	lr
 1356              	.LVL112:
 1357              	.L101:
1162:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1358              		.loc 1 1162 7 view .LVU429
1162:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1359              		.loc 1 1162 21 is_stmt 0 view .LVU430
 1360 002c 0368     		ldr	r3, [r0]
1162:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       break;
 1361              		.loc 1 1162 15 view .LVU431
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 159


 1362 002e D3F88400 		ldr	r0, [r3, #132]
 1363              	.LVL113:
1163:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     case ADC_INJECTED_RANK_1:
 1364              		.loc 1 1163 7 is_stmt 1 view .LVU432
 1365 0032 7047     		bx	lr
 1366              		.cfi_endproc
 1367              	.LFE296:
 1369              		.section	.text.HAL_ADCEx_InjectedConvCpltCallback,"ax",%progbits
 1370              		.align	1
 1371              		.weak	HAL_ADCEx_InjectedConvCpltCallback
 1372              		.syntax unified
 1373              		.thumb
 1374              		.thumb_func
 1376              	HAL_ADCEx_InjectedConvCpltCallback:
 1377              	.LVL114:
 1378              	.LFB297:
1173:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1174:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1175:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Injected conversion complete callback in non-blocking mode.
1176:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1177:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1178:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1179:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
1180:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1379              		.loc 1 1180 1 view -0
 1380              		.cfi_startproc
 1381              		@ args = 0, pretend = 0, frame = 0
 1382              		@ frame_needed = 0, uses_anonymous_args = 0
 1383              		@ link register save eliminated.
1181:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1182:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1384              		.loc 1 1182 3 view .LVU434
1183:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1184:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1185:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedConvCpltCallback must be implemented in the user file.
1186:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1187:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1385              		.loc 1 1187 1 is_stmt 0 view .LVU435
 1386 0000 7047     		bx	lr
 1387              		.cfi_endproc
 1388              	.LFE297:
 1390              		.section	.text.HAL_ADCEx_InjectedQueueOverflowCallback,"ax",%progbits
 1391              		.align	1
 1392              		.weak	HAL_ADCEx_InjectedQueueOverflowCallback
 1393              		.syntax unified
 1394              		.thumb
 1395              		.thumb_func
 1397              	HAL_ADCEx_InjectedQueueOverflowCallback:
 1398              	.LVL115:
 1399              	.LFB298:
1188:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1189:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1190:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Injected context queue overflow callback.
1191:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This callback is called if injected context queue is enabled
1192:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             (parameter "QueueInjectedContext" in injected channel configuration)
1193:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             and if a new injected context is set when queue is full (maximum 2
1194:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             contexts).
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 160


1195:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1196:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1197:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1198:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_InjectedQueueOverflowCallback(ADC_HandleTypeDef *hadc)
1199:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1400              		.loc 1 1199 1 is_stmt 1 view -0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              		@ link register save eliminated.
1200:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1201:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1405              		.loc 1 1201 3 view .LVU437
1202:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1203:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1204:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_InjectedQueueOverflowCallback must be implemented in the user file.
1205:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1206:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1406              		.loc 1 1206 1 is_stmt 0 view .LVU438
 1407 0000 7047     		bx	lr
 1408              		.cfi_endproc
 1409              	.LFE298:
 1411              		.section	.text.HAL_ADCEx_LevelOutOfWindow2Callback,"ax",%progbits
 1412              		.align	1
 1413              		.weak	HAL_ADCEx_LevelOutOfWindow2Callback
 1414              		.syntax unified
 1415              		.thumb
 1416              		.thumb_func
 1418              	HAL_ADCEx_LevelOutOfWindow2Callback:
 1419              	.LVL116:
 1420              	.LFB299:
1207:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1208:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1209:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Analog watchdog 2 callback in non-blocking mode.
1210:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1211:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1212:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1213:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow2Callback(ADC_HandleTypeDef *hadc)
1214:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1421              		.loc 1 1214 1 is_stmt 1 view -0
 1422              		.cfi_startproc
 1423              		@ args = 0, pretend = 0, frame = 0
 1424              		@ frame_needed = 0, uses_anonymous_args = 0
 1425              		@ link register save eliminated.
1215:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1216:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1426              		.loc 1 1216 3 view .LVU440
1217:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1218:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1219:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow2Callback must be implemented in the user file.
1220:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1221:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1427              		.loc 1 1221 1 is_stmt 0 view .LVU441
 1428 0000 7047     		bx	lr
 1429              		.cfi_endproc
 1430              	.LFE299:
 1432              		.section	.text.HAL_ADCEx_LevelOutOfWindow3Callback,"ax",%progbits
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 161


 1433              		.align	1
 1434              		.weak	HAL_ADCEx_LevelOutOfWindow3Callback
 1435              		.syntax unified
 1436              		.thumb
 1437              		.thumb_func
 1439              	HAL_ADCEx_LevelOutOfWindow3Callback:
 1440              	.LVL117:
 1441              	.LFB300:
1222:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1223:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1224:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Analog watchdog 3 callback in non-blocking mode.
1225:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1226:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1227:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1228:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_LevelOutOfWindow3Callback(ADC_HandleTypeDef *hadc)
1229:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1442              		.loc 1 1229 1 is_stmt 1 view -0
 1443              		.cfi_startproc
 1444              		@ args = 0, pretend = 0, frame = 0
 1445              		@ frame_needed = 0, uses_anonymous_args = 0
 1446              		@ link register save eliminated.
1230:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
1231:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1447              		.loc 1 1231 3 view .LVU443
1232:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1233:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1234:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_LevelOutOfWindow3Callback must be implemented in the user file.
1235:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1236:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1448              		.loc 1 1236 1 is_stmt 0 view .LVU444
 1449 0000 7047     		bx	lr
 1450              		.cfi_endproc
 1451              	.LFE300:
 1453              		.section	.text.HAL_ADCEx_EndOfSamplingCallback,"ax",%progbits
 1454              		.align	1
 1455              		.weak	HAL_ADCEx_EndOfSamplingCallback
 1456              		.syntax unified
 1457              		.thumb
 1458              		.thumb_func
 1460              	HAL_ADCEx_EndOfSamplingCallback:
 1461              	.LVL118:
 1462              	.LFB301:
1237:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1238:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1239:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1240:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  End Of Sampling callback in non-blocking mode.
1241:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1242:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval None
1243:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1244:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** __weak void HAL_ADCEx_EndOfSamplingCallback(ADC_HandleTypeDef *hadc)
1245:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1463              		.loc 1 1245 1 is_stmt 1 view -0
 1464              		.cfi_startproc
 1465              		@ args = 0, pretend = 0, frame = 0
 1466              		@ frame_needed = 0, uses_anonymous_args = 0
 1467              		@ link register save eliminated.
1246:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 162


1247:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   UNUSED(hadc);
 1468              		.loc 1 1247 3 view .LVU446
1248:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1249:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* NOTE : This function should not be modified. When the callback is needed,
1250:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             function HAL_ADCEx_EndOfSamplingCallback must be implemented in the user file.
1251:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1252:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1469              		.loc 1 1252 1 is_stmt 0 view .LVU447
 1470 0000 7047     		bx	lr
 1471              		.cfi_endproc
 1472              	.LFE301:
 1474              		.section	.text.HAL_ADCEx_RegularStop,"ax",%progbits
 1475              		.align	1
 1476              		.global	HAL_ADCEx_RegularStop
 1477              		.syntax unified
 1478              		.thumb
 1479              		.thumb_func
 1481              	HAL_ADCEx_RegularStop:
 1482              	.LVL119:
 1483              	.LFB302:
1253:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1254:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1255:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected channels in
1256:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC peripheral if no
1257:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is on going on injected group.
1258:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1259:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1260:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1261:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop(ADC_HandleTypeDef *hadc)
1262:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1484              		.loc 1 1262 1 is_stmt 1 view -0
 1485              		.cfi_startproc
 1486              		@ args = 0, pretend = 0, frame = 0
 1487              		@ frame_needed = 0, uses_anonymous_args = 0
1263:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1488              		.loc 1 1263 3 view .LVU449
1264:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1265:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1266:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1489              		.loc 1 1266 3 view .LVU450
1267:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1268:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1269:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1490              		.loc 1 1269 3 view .LVU451
 1491              		.loc 1 1269 3 view .LVU452
 1492 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1493 0004 012B     		cmp	r3, #1
 1494 0006 26D0     		beq	.L111
1262:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1495              		.loc 1 1262 1 is_stmt 0 discriminator 2 view .LVU453
 1496 0008 10B5     		push	{r4, lr}
 1497              	.LCFI19:
 1498              		.cfi_def_cfa_offset 8
 1499              		.cfi_offset 4, -8
 1500              		.cfi_offset 14, -4
 1501 000a 0446     		mov	r4, r0
 1502              		.loc 1 1269 3 is_stmt 1 discriminator 2 view .LVU454
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 163


 1503 000c 0121     		movs	r1, #1
 1504 000e 80F85010 		strb	r1, [r0, #80]
 1505              		.loc 1 1269 3 discriminator 2 view .LVU455
1270:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1271:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1272:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1506              		.loc 1 1272 3 discriminator 2 view .LVU456
 1507              		.loc 1 1272 20 is_stmt 0 discriminator 2 view .LVU457
 1508 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1509              	.LVL120:
1273:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1274:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if regular conversions are effectively stopped
1275:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      and if no injected conversions are on-going */
1276:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1510              		.loc 1 1276 3 is_stmt 1 discriminator 2 view .LVU458
 1511              		.loc 1 1276 6 is_stmt 0 discriminator 2 view .LVU459
 1512 0016 60B9     		cbnz	r0, .L109
1277:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1278:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1279:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1513              		.loc 1 1279 5 is_stmt 1 view .LVU460
 1514 0018 636D     		ldr	r3, [r4, #84]
 1515 001a 23F48073 		bic	r3, r3, #256
 1516 001e 6365     		str	r3, [r4, #84]
1280:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1281:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1517              		.loc 1 1281 5 view .LVU461
 1518              		.loc 1 1281 9 is_stmt 0 view .LVU462
 1519 0020 2368     		ldr	r3, [r4]
 1520              	.LVL121:
 1521              	.LBB278:
 1522              	.LBI278:
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1523              		.loc 2 6353 26 is_stmt 1 view .LVU463
 1524              	.LBB279:
 1525              		.loc 2 6355 3 view .LVU464
 1526              		.loc 2 6355 12 is_stmt 0 view .LVU465
 1527 0022 9B68     		ldr	r3, [r3, #8]
 1528              	.LVL122:
 1529              		.loc 2 6355 76 view .LVU466
 1530 0024 13F0080F 		tst	r3, #8
 1531 0028 07D0     		beq	.L110
 1532              	.LVL123:
 1533              		.loc 2 6355 76 view .LVU467
 1534              	.LBE279:
 1535              	.LBE278:
1282:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1283:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* 2. Disable the ADC peripheral */
1284:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1285:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1286:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1287:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1288:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1289:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1290:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1291:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1292:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 164


1293:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1294:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1295:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Conversion on injected group is stopped, but ADC not disabled since    */
1296:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* conversion on regular group is still running.                          */
1297:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1298:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1299:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1536              		.loc 1 1299 7 is_stmt 1 view .LVU468
 1537 002a 636D     		ldr	r3, [r4, #84]
 1538 002c 43F48053 		orr	r3, r3, #4096
 1539 0030 6365     		str	r3, [r4, #84]
 1540              	.L109:
1300:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1301:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1302:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1303:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1304:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1541              		.loc 1 1304 3 view .LVU469
 1542              		.loc 1 1304 3 view .LVU470
 1543 0032 0023     		movs	r3, #0
 1544 0034 84F85030 		strb	r3, [r4, #80]
 1545              		.loc 1 1304 3 view .LVU471
1305:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1306:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1307:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1546              		.loc 1 1307 3 view .LVU472
1308:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1547              		.loc 1 1308 1 is_stmt 0 view .LVU473
 1548 0038 10BD     		pop	{r4, pc}
 1549              	.LVL124:
 1550              	.L110:
1284:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1551              		.loc 1 1284 7 is_stmt 1 view .LVU474
1284:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1552              		.loc 1 1284 24 is_stmt 0 view .LVU475
 1553 003a 2046     		mov	r0, r4
 1554              	.LVL125:
1284:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1555              		.loc 1 1284 24 view .LVU476
 1556 003c FFF7FEFF 		bl	ADC_Disable
 1557              	.LVL126:
1287:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1558              		.loc 1 1287 7 is_stmt 1 view .LVU477
1287:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1559              		.loc 1 1287 10 is_stmt 0 view .LVU478
 1560 0040 0028     		cmp	r0, #0
 1561 0042 F6D1     		bne	.L109
1290:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1562              		.loc 1 1290 9 is_stmt 1 view .LVU479
 1563 0044 636D     		ldr	r3, [r4, #84]
 1564 0046 23F48053 		bic	r3, r3, #4096
 1565 004a 23F00103 		bic	r3, r3, #1
 1566 004e 43F00103 		orr	r3, r3, #1
 1567 0052 6365     		str	r3, [r4, #84]
 1568 0054 EDE7     		b	.L109
 1569              	.LVL127:
 1570              	.L111:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 165


 1571              	.LCFI20:
 1572              		.cfi_def_cfa_offset 0
 1573              		.cfi_restore 4
 1574              		.cfi_restore 14
1269:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1575              		.loc 1 1269 3 is_stmt 0 view .LVU480
 1576 0056 0220     		movs	r0, #2
 1577              	.LVL128:
 1578              		.loc 1 1308 1 view .LVU481
 1579 0058 7047     		bx	lr
 1580              		.cfi_endproc
 1581              	.LFE302:
 1583              		.section	.text.HAL_ADCEx_RegularStop_IT,"ax",%progbits
 1584              		.align	1
 1585              		.global	HAL_ADCEx_RegularStop_IT
 1586              		.syntax unified
 1587              		.thumb
 1588              		.thumb_func
 1590              	HAL_ADCEx_RegularStop_IT:
 1591              	.LVL129:
 1592              	.LFB303:
1309:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1310:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1311:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1312:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of ADC groups regular and injected,
1313:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         disable interrution of end-of-conversion,
1314:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         disable ADC peripheral if no conversion is on going
1315:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         on injected group.
1316:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1317:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1318:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1319:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_IT(ADC_HandleTypeDef *hadc)
1320:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1593              		.loc 1 1320 1 is_stmt 1 view -0
 1594              		.cfi_startproc
 1595              		@ args = 0, pretend = 0, frame = 0
 1596              		@ frame_needed = 0, uses_anonymous_args = 0
1321:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1597              		.loc 1 1321 3 view .LVU483
1322:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1323:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1324:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1598              		.loc 1 1324 3 view .LVU484
1325:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1326:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1327:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1599              		.loc 1 1327 3 view .LVU485
 1600              		.loc 1 1327 3 view .LVU486
 1601 0000 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1602 0004 012B     		cmp	r3, #1
 1603 0006 2BD0     		beq	.L120
1320:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1604              		.loc 1 1320 1 is_stmt 0 discriminator 2 view .LVU487
 1605 0008 10B5     		push	{r4, lr}
 1606              	.LCFI21:
 1607              		.cfi_def_cfa_offset 8
 1608              		.cfi_offset 4, -8
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 166


 1609              		.cfi_offset 14, -4
 1610 000a 0446     		mov	r4, r0
 1611              		.loc 1 1327 3 is_stmt 1 discriminator 2 view .LVU488
 1612 000c 0121     		movs	r1, #1
 1613 000e 80F85010 		strb	r1, [r0, #80]
 1614              		.loc 1 1327 3 discriminator 2 view .LVU489
1328:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1329:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1330:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1615              		.loc 1 1330 3 discriminator 2 view .LVU490
 1616              		.loc 1 1330 20 is_stmt 0 discriminator 2 view .LVU491
 1617 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1618              	.LVL130:
1331:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1332:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1333:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     and if no injected conversion is on-going */
1334:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1619              		.loc 1 1334 3 is_stmt 1 discriminator 2 view .LVU492
 1620              		.loc 1 1334 6 is_stmt 0 discriminator 2 view .LVU493
 1621 0016 88B9     		cbnz	r0, .L118
1335:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1336:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1337:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 1622              		.loc 1 1337 5 is_stmt 1 view .LVU494
 1623 0018 636D     		ldr	r3, [r4, #84]
 1624 001a 23F48073 		bic	r3, r3, #256
 1625 001e 6365     		str	r3, [r4, #84]
1338:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1339:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable all regular-related interrupts */
1340:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, (ADC_IT_EOC | ADC_IT_EOS | ADC_IT_OVR));
 1626              		.loc 1 1340 5 view .LVU495
 1627 0020 2268     		ldr	r2, [r4]
 1628 0022 5368     		ldr	r3, [r2, #4]
 1629 0024 23F01C03 		bic	r3, r3, #28
 1630 0028 5360     		str	r3, [r2, #4]
1341:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1342:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable ADC peripheral if no injected conversions are on-going */
1343:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
 1631              		.loc 1 1343 5 view .LVU496
 1632              		.loc 1 1343 9 is_stmt 0 view .LVU497
 1633 002a 2368     		ldr	r3, [r4]
 1634              	.LVL131:
 1635              	.LBB280:
 1636              	.LBI280:
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1637              		.loc 2 6353 26 is_stmt 1 view .LVU498
 1638              	.LBB281:
 1639              		.loc 2 6355 3 view .LVU499
 1640              		.loc 2 6355 12 is_stmt 0 view .LVU500
 1641 002c 9B68     		ldr	r3, [r3, #8]
 1642              	.LVL132:
 1643              		.loc 2 6355 76 view .LVU501
 1644 002e 13F0080F 		tst	r3, #8
 1645 0032 07D0     		beq	.L119
 1646              	.LVL133:
 1647              		.loc 2 6355 76 view .LVU502
 1648              	.LBE281:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 167


 1649              	.LBE280:
1344:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1345:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmp_hal_status = ADC_Disable(hadc);
1346:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
1347:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1348:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1349:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1350:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1351:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1352:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1353:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1354:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1355:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1356:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1357:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 1650              		.loc 1 1357 7 is_stmt 1 view .LVU503
 1651 0034 636D     		ldr	r3, [r4, #84]
 1652 0036 43F48053 		orr	r3, r3, #4096
 1653 003a 6365     		str	r3, [r4, #84]
 1654              	.L118:
1358:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1359:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1360:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1361:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1362:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1655              		.loc 1 1362 3 view .LVU504
 1656              		.loc 1 1362 3 view .LVU505
 1657 003c 0023     		movs	r3, #0
 1658 003e 84F85030 		strb	r3, [r4, #80]
 1659              		.loc 1 1362 3 view .LVU506
1363:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1364:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1365:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1660              		.loc 1 1365 3 view .LVU507
1366:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1661              		.loc 1 1366 1 is_stmt 0 view .LVU508
 1662 0042 10BD     		pop	{r4, pc}
 1663              	.LVL134:
 1664              	.L119:
1345:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
 1665              		.loc 1 1345 7 is_stmt 1 view .LVU509
1345:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
 1666              		.loc 1 1345 24 is_stmt 0 view .LVU510
 1667 0044 2046     		mov	r0, r4
 1668              	.LVL135:
1345:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* if no issue reported */
 1669              		.loc 1 1345 24 view .LVU511
 1670 0046 FFF7FEFF 		bl	ADC_Disable
 1671              	.LVL136:
1347:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1672              		.loc 1 1347 7 is_stmt 1 view .LVU512
1347:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1673              		.loc 1 1347 10 is_stmt 0 view .LVU513
 1674 004a 0028     		cmp	r0, #0
 1675 004c F6D1     		bne	.L118
1350:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1676              		.loc 1 1350 9 is_stmt 1 view .LVU514
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 168


 1677 004e 636D     		ldr	r3, [r4, #84]
 1678 0050 23F48053 		bic	r3, r3, #4096
 1679 0054 23F00103 		bic	r3, r3, #1
 1680 0058 43F00103 		orr	r3, r3, #1
 1681 005c 6365     		str	r3, [r4, #84]
 1682 005e EDE7     		b	.L118
 1683              	.LVL137:
 1684              	.L120:
 1685              	.LCFI22:
 1686              		.cfi_def_cfa_offset 0
 1687              		.cfi_restore 4
 1688              		.cfi_restore 14
1327:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1689              		.loc 1 1327 3 is_stmt 0 view .LVU515
 1690 0060 0220     		movs	r0, #2
 1691              	.LVL138:
 1692              		.loc 1 1366 1 view .LVU516
 1693 0062 7047     		bx	lr
 1694              		.cfi_endproc
 1695              	.LFE303:
 1697              		.section	.text.HAL_ADCEx_RegularStop_DMA,"ax",%progbits
 1698              		.align	1
 1699              		.global	HAL_ADCEx_RegularStop_DMA
 1700              		.syntax unified
 1701              		.thumb
 1702              		.thumb_func
 1704              	HAL_ADCEx_RegularStop_DMA:
 1705              	.LVL139:
 1706              	.LFB304:
1367:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1368:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1369:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop ADC conversion of regular group (and injected group in
1370:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         case of auto_injection mode), disable ADC DMA transfer, disable
1371:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC peripheral if no conversion is on going
1372:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         on injected group.
1373:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   HAL_ADCEx_RegularStop_DMA() function is dedicated to single-ADC mode only.
1374:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For multimode (when multimode feature is available),
1375:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularMultiModeStop_DMA() API must be used.
1376:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1377:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status.
1378:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1379:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularStop_DMA(ADC_HandleTypeDef *hadc)
1380:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1707              		.loc 1 1380 1 is_stmt 1 view -0
 1708              		.cfi_startproc
 1709              		@ args = 0, pretend = 0, frame = 0
 1710              		@ frame_needed = 0, uses_anonymous_args = 0
 1711              		.loc 1 1380 1 is_stmt 0 view .LVU518
 1712 0000 38B5     		push	{r3, r4, r5, lr}
 1713              	.LCFI23:
 1714              		.cfi_def_cfa_offset 16
 1715              		.cfi_offset 3, -16
 1716              		.cfi_offset 4, -12
 1717              		.cfi_offset 5, -8
 1718              		.cfi_offset 14, -4
1381:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 1719              		.loc 1 1381 3 is_stmt 1 view .LVU519
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 169


1382:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1383:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1384:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1720              		.loc 1 1384 3 view .LVU520
1385:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1386:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1387:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1721              		.loc 1 1387 3 view .LVU521
 1722              		.loc 1 1387 3 view .LVU522
 1723 0002 90F85030 		ldrb	r3, [r0, #80]	@ zero_extendqisi2
 1724 0006 012B     		cmp	r3, #1
 1725 0008 41D0     		beq	.L132
 1726 000a 0446     		mov	r4, r0
 1727              		.loc 1 1387 3 discriminator 2 view .LVU523
 1728 000c 0121     		movs	r1, #1
 1729 000e 80F85010 		strb	r1, [r0, #80]
 1730              		.loc 1 1387 3 discriminator 2 view .LVU524
1388:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1389:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential regular conversion on going */
1390:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
 1731              		.loc 1 1390 3 discriminator 2 view .LVU525
 1732              		.loc 1 1390 20 is_stmt 0 discriminator 2 view .LVU526
 1733 0012 FFF7FEFF 		bl	ADC_ConversionStop
 1734              	.LVL140:
1391:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1392:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped
1393:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      and if no injected conversion is on-going */
1394:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
 1735              		.loc 1 1394 3 is_stmt 1 discriminator 2 view .LVU527
 1736              		.loc 1 1394 6 is_stmt 0 discriminator 2 view .LVU528
 1737 0016 0546     		mov	r5, r0
 1738 0018 20B1     		cbz	r0, .L134
 1739              	.LVL141:
 1740              	.L127:
1395:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1396:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1397:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1398:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1399:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC DMA (ADC DMA configuration ADC_CFGR_DMACFG is kept) */
1400:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_DMAEN);
1401:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1402:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop while */
1403:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1404:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1405:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1406:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1407:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1408:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1409:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1410:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1411:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1412:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1413:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1414:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1415:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1416:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripheral */
1417:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed,          */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 170


1418:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* to keep in memory a potential failing status.                          */
1419:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1420:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1421:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1422:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1423:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = ADC_Disable(hadc);
1424:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1425:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1426:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1427:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         (void)ADC_Disable(hadc);
1428:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1429:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1430:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Check if ADC is effectively disabled */
1431:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1432:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1433:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Set ADC state */
1434:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State,
1435:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
1436:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_READY);
1437:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1438:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1439:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1440:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1441:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
1442:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1443:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1444:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1445:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1446:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 1741              		.loc 1 1446 3 is_stmt 1 view .LVU529
 1742              		.loc 1 1446 3 view .LVU530
 1743 001a 0023     		movs	r3, #0
 1744 001c 84F85030 		strb	r3, [r4, #80]
 1745              		.loc 1 1446 3 view .LVU531
1447:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1448:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1449:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 1746              		.loc 1 1449 3 view .LVU532
 1747              	.LVL142:
 1748              	.L126:
1450:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 1749              		.loc 1 1450 1 is_stmt 0 view .LVU533
 1750 0020 2846     		mov	r0, r5
 1751 0022 38BD     		pop	{r3, r4, r5, pc}
 1752              	.LVL143:
 1753              	.L134:
1397:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1754              		.loc 1 1397 5 is_stmt 1 view .LVU534
 1755 0024 636D     		ldr	r3, [r4, #84]
 1756 0026 23F48073 		bic	r3, r3, #256
 1757 002a 6365     		str	r3, [r4, #84]
1400:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1758              		.loc 1 1400 5 view .LVU535
 1759 002c 2268     		ldr	r2, [r4]
 1760 002e D368     		ldr	r3, [r2, #12]
 1761 0030 23F00103 		bic	r3, r3, #1
 1762 0034 D360     		str	r3, [r2, #12]
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 171


1404:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1763              		.loc 1 1404 5 view .LVU536
1404:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1764              		.loc 1 1404 22 is_stmt 0 view .LVU537
 1765 0036 E06C     		ldr	r0, [r4, #76]
 1766              	.LVL144:
1404:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1767              		.loc 1 1404 22 view .LVU538
 1768 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1769              	.LVL145:
1407:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1770              		.loc 1 1407 5 is_stmt 1 view .LVU539
1407:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1771              		.loc 1 1407 8 is_stmt 0 view .LVU540
 1772 003c 0546     		mov	r5, r0
 1773 003e 18B1     		cbz	r0, .L128
1410:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1774              		.loc 1 1410 7 is_stmt 1 view .LVU541
 1775 0040 636D     		ldr	r3, [r4, #84]
 1776 0042 43F04003 		orr	r3, r3, #64
 1777 0046 6365     		str	r3, [r4, #84]
 1778              	.L128:
1414:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1779              		.loc 1 1414 5 view .LVU542
 1780 0048 2268     		ldr	r2, [r4]
 1781 004a 5368     		ldr	r3, [r2, #4]
 1782 004c 23F01003 		bic	r3, r3, #16
 1783 0050 5360     		str	r3, [r2, #4]
1419:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1784              		.loc 1 1419 5 view .LVU543
1419:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1785              		.loc 1 1419 9 is_stmt 0 view .LVU544
 1786 0052 2368     		ldr	r3, [r4]
 1787              	.LVL146:
 1788              	.LBB282:
 1789              	.LBI282:
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1790              		.loc 2 6353 26 is_stmt 1 view .LVU545
 1791              	.LBB283:
 1792              		.loc 2 6355 3 view .LVU546
 1793              		.loc 2 6355 12 is_stmt 0 view .LVU547
 1794 0054 9B68     		ldr	r3, [r3, #8]
 1795              	.LVL147:
 1796              		.loc 2 6355 76 view .LVU548
 1797 0056 13F0080F 		tst	r3, #8
 1798 005a 04D0     		beq	.L129
 1799              	.LVL148:
 1800              		.loc 2 6355 76 view .LVU549
 1801              	.LBE283:
 1802              	.LBE282:
1441:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 1803              		.loc 1 1441 7 is_stmt 1 view .LVU550
 1804 005c 636D     		ldr	r3, [r4, #84]
 1805 005e 43F48053 		orr	r3, r3, #4096
 1806 0062 6365     		str	r3, [r4, #84]
 1807 0064 D9E7     		b	.L127
 1808              	.LVL149:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 172


 1809              	.L129:
1421:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1810              		.loc 1 1421 7 view .LVU551
1421:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1811              		.loc 1 1421 10 is_stmt 0 view .LVU552
 1812 0066 75B9     		cbnz	r5, .L130
1423:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1813              		.loc 1 1423 9 is_stmt 1 view .LVU553
1423:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1814              		.loc 1 1423 26 is_stmt 0 view .LVU554
 1815 0068 2046     		mov	r0, r4
 1816              	.LVL150:
1423:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1817              		.loc 1 1423 26 view .LVU555
 1818 006a FFF7FEFF 		bl	ADC_Disable
 1819              	.LVL151:
 1820 006e 0546     		mov	r5, r0
 1821              	.LVL152:
 1822              	.L131:
1431:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1823              		.loc 1 1431 7 is_stmt 1 view .LVU556
1431:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 1824              		.loc 1 1431 10 is_stmt 0 view .LVU557
 1825 0070 002D     		cmp	r5, #0
 1826 0072 D2D1     		bne	.L127
1434:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                           HAL_ADC_STATE_INJ_BUSY,
 1827              		.loc 1 1434 9 is_stmt 1 view .LVU558
 1828 0074 636D     		ldr	r3, [r4, #84]
 1829 0076 23F48053 		bic	r3, r3, #4096
 1830 007a 23F00103 		bic	r3, r3, #1
 1831 007e 43F00103 		orr	r3, r3, #1
 1832 0082 6365     		str	r3, [r4, #84]
 1833 0084 C9E7     		b	.L127
 1834              	.LVL153:
 1835              	.L130:
1427:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1836              		.loc 1 1427 9 view .LVU559
1427:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1837              		.loc 1 1427 15 is_stmt 0 view .LVU560
 1838 0086 2046     		mov	r0, r4
 1839              	.LVL154:
1427:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 1840              		.loc 1 1427 15 view .LVU561
 1841 0088 FFF7FEFF 		bl	ADC_Disable
 1842              	.LVL155:
 1843 008c F0E7     		b	.L131
 1844              	.LVL156:
 1845              	.L132:
1387:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 1846              		.loc 1 1387 3 view .LVU562
 1847 008e 0225     		movs	r5, #2
 1848 0090 C6E7     		b	.L126
 1849              		.cfi_endproc
 1850              	.LFE304:
 1852              		.section	.text.HAL_ADCEx_InjectedConfigChannel,"ax",%progbits
 1853              		.align	1
 1854              		.global	HAL_ADCEx_InjectedConfigChannel
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 173


 1855              		.syntax unified
 1856              		.thumb
 1857              		.thumb_func
 1859              	HAL_ADCEx_InjectedConfigChannel:
 1860              	.LVL157:
 1861              	.LFB305:
1451:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1452:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
1453:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1454:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Stop DMA-based multimode ADC conversion, disable ADC DMA transfer, disable ADC peripher
1455:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Multimode is kept enabled after this function. Multimode DMA bits
1456:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         (MDMA and DMACFG bits of common CCR register) are maintained. To disable
1457:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         multimode (set with HAL_ADCEx_MultiModeConfigChannel()), ADC must be
1458:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         reinitialized using HAL_ADC_Init() or HAL_ADC_DeInit(), or the user can
1459:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADCEx_DisableMultiMode() API.
1460:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of DMA configured in circular mode, function
1461:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_RegularStop_DMA() must be called after this function with handle of
1462:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC slave, to properly disable the DMA channel.
1463:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle of ADC master (handle of ADC slave must not be used)
1464:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
1465:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1466:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_RegularMultiModeStop_DMA(ADC_HandleTypeDef *hadc)
1467:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
1468:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
1469:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tickstart;
1470:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
1471:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
1472:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1473:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1474:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
1475:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1476:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1477:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
1478:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1479:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1480:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* 1. Stop potential multimode conversion on going, on regular groups */
1481:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_hal_status = ADC_ConversionStop(hadc, ADC_REGULAR_GROUP);
1482:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1483:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Disable ADC peripheral if conversions are effectively stopped */
1484:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmp_hal_status == HAL_OK)
1485:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1486:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear HAL_ADC_STATE_REG_BUSY bit */
1487:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
1488:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1489:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Temporary handle minimum initialization */
1490:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
1491:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_CLEAR_ERRORCODE(&tmphadcSlave);
1492:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1493:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set a temporary handle of the ADC slave associated to the ADC master   */
1494:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
1495:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1496:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmphadcSlave.Instance == NULL)
1497:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1498:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1499:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1500:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1501:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Process unlocked */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 174


1502:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       __HAL_UNLOCK(hadc);
1503:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1504:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       return HAL_ERROR;
1505:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1506:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1507:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Procedure to disable the ADC peripheral: wait for conversions          */
1508:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* effectively stopped (ADC master and ADC slave), then disable ADC       */
1509:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1510:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 1. Wait for ADC conversion completion for ADC master and ADC slave */
1511:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tickstart = HAL_GetTick();
1512:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1513:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
1514:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     while ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1515:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            || (tmphadcSlave_conversion_on_going == 1UL)
1516:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           )
1517:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1518:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if ((HAL_GetTick() - tickstart) > ADC_STOP_CONVERSION_TIMEOUT)
1519:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1520:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* New check to avoid false timeout detection in case of preemption */
1521:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance
1522:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 1UL)
1523:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             || (tmphadcSlave_conversion_on_going == 1UL)
1524:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            )
1525:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
1526:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Update ADC state machine to error */
1527:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
1528:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1529:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           /* Process unlocked */
1530:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           __HAL_UNLOCK(hadc);
1531:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1532:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           return HAL_ERROR;
1533:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
1534:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1535:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1536:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
1537:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1538:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1539:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable the DMA channel (in case of DMA in circular mode or stop       */
1540:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* while DMA transfer is on going)                                        */
1541:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: DMA channel of ADC slave should be stopped after this function   */
1542:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* with HAL_ADCEx_RegularStop_DMA() API.                                  */
1543:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_DMA_Abort(hadc->DMA_Handle);
1544:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1545:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Check if DMA channel effectively disabled */
1546:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status != HAL_OK)
1547:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1548:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Update ADC state machine to error */
1549:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_DMA);
1550:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1551:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1552:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Disable ADC overrun interrupt */
1553:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_ADC_DISABLE_IT(hadc, ADC_IT_OVR);
1554:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1555:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Disable the ADC peripherals: master and slave if no injected        */
1556:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*   conversion is on-going.                                              */
1557:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update "tmp_hal_status" only if DMA channel disabling passed, to keep in */
1558:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* memory a potential failing status.                                     */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 175


1559:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (tmp_hal_status == HAL_OK)
1560:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1561:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
1562:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1563:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status =  ADC_Disable(hadc);
1564:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         if (tmp_hal_status == HAL_OK)
1565:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
1566:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           if (LL_ADC_INJ_IsConversionOngoing((&tmphadcSlave)->Instance) == 0UL)
1567:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           {
1568:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****             tmp_hal_status =  ADC_Disable(&tmphadcSlave);
1569:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           }
1570:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
1571:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1572:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1573:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (tmp_hal_status == HAL_OK)
1574:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1575:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Both Master and Slave ADC's could be disabled. Update Master State */
1576:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Clear HAL_ADC_STATE_INJ_BUSY bit, set HAL_ADC_STATE_READY bit */
1577:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY, HAL_ADC_STATE_READY);
1578:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1579:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1580:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1581:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* injected (Master or Slave) conversions are still on-going,
1582:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****            no Master State change */
1583:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1584:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1585:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1586:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1587:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
1588:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
1589:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1590:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
1591:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
1592:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
1593:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
1594:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1595:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1596:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @}
1597:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1598:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1599:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /** @defgroup ADCEx_Exported_Functions_Group2 ADC Extended Peripheral Control functions
1600:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief    ADC Extended Peripheral Control functions
1601:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *
1602:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @verbatim
1603:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
1604:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****              ##### Peripheral Control functions #####
1605:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****  ===============================================================================
1606:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     [..]  This section provides functions allowing to:
1607:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Configure channels on injected group
1608:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Configure multimode when multimode feature is available
1609:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Enable or Disable Injected Queue
1610:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Disable ADC voltage regulator
1611:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (+) Enter ADC deep-power-down mode
1612:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1613:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** @endverbatim
1614:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @{
1615:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 176


1616:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1617:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
1618:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Configure a channel to be assigned to ADC group injected.
1619:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
1620:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         This function initializes injected group, following calls to this
1621:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         function can be used to reconfigure some parameters of structure
1622:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         "ADC_InjectionConfTypeDef" on the fly, without resetting the ADC.
1623:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state:
1624:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Refer to comments of structure "ADC_InjectionConfTypeDef".
1625:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   In case of usage of internal measurement channels:
1626:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Vbat/VrefInt/TempSensor.
1627:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         These internal paths can be disabled using function
1628:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADC_DeInit().
1629:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Caution: For Injected Context Queue use, a context must be fully
1630:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         defined before start of injected conversion. All channels are configured
1631:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         consecutively for the same ADC instance. Therefore, the number of calls to
1632:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_InjectedConfigChannel() must be equal to the value of parameter
1633:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         InjectedNbrOfConversion for each context.
1634:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *  - Example 1: If 1 context is intended to be used (or if there is no use of the
1635:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    Injected Queue Context feature) and if the context contains 3 injected ranks
1636:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    (InjectedNbrOfConversion = 3), HAL_ADCEx_InjectedConfigChannel() must be
1637:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    called once for each channel (i.e. 3 times) before starting a conversion.
1638:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    This function must not be called to configure a 4th injected channel:
1639:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    it would start a new context into context queue.
1640:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *  - Example 2: If 2 contexts are intended to be used and each of them contains
1641:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    3 injected ranks (InjectedNbrOfConversion = 3),
1642:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() must be called once for each channel and
1643:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    for each context (3 channels x 2 contexts = 6 calls). Conversion can
1644:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    start once the 1st context is set, that is after the first three
1645:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *    HAL_ADCEx_InjectedConfigChannel() calls. The 2nd context can be set on the fly.
1646:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
1647:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param sConfigInjected Structure of ADC injected group and ADC channel for
1648:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         injected group.
1649:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
1650:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
1651:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_InjectedConfigChannel(ADC_HandleTypeDef *hadc, ADC_InjectionConfTypeDef
1652:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 1862              		.loc 1 1652 1 is_stmt 1 view -0
 1863              		.cfi_startproc
 1864              		@ args = 0, pretend = 0, frame = 8
 1865              		@ frame_needed = 0, uses_anonymous_args = 0
 1866              		@ link register save eliminated.
 1867              		.loc 1 1652 1 is_stmt 0 view .LVU564
 1868 0000 F0B4     		push	{r4, r5, r6, r7}
 1869              	.LCFI24:
 1870              		.cfi_def_cfa_offset 16
 1871              		.cfi_offset 4, -16
 1872              		.cfi_offset 5, -12
 1873              		.cfi_offset 6, -8
 1874              		.cfi_offset 7, -4
 1875 0002 82B0     		sub	sp, sp, #8
 1876              	.LCFI25:
 1877              		.cfi_def_cfa_offset 24
 1878 0004 0346     		mov	r3, r0
1653:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 1879              		.loc 1 1653 3 is_stmt 1 view .LVU565
 1880              	.LVL158:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 177


1654:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 1881              		.loc 1 1654 3 view .LVU566
1655:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_config_internal_channel;
 1882              		.loc 1 1655 3 view .LVU567
1656:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 1883              		.loc 1 1656 3 view .LVU568
1657:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 1884              		.loc 1 1657 3 view .LVU569
1658:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __IO uint32_t wait_loop_index = 0;
 1885              		.loc 1 1658 3 view .LVU570
 1886              		.loc 1 1658 17 is_stmt 0 view .LVU571
 1887 0006 0022     		movs	r2, #0
 1888 0008 0192     		str	r2, [sp, #4]
1659:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1660:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_JSQR_ContextQueueBeingBuilt = 0U;
 1889              		.loc 1 1660 3 is_stmt 1 view .LVU572
 1890              	.LVL159:
1661:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1662:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
1663:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 1891              		.loc 1 1663 3 view .LVU573
1664:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SAMPLE_TIME(sConfigInjected->InjectedSamplingTime));
 1892              		.loc 1 1664 3 view .LVU574
1665:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_SINGLE_DIFFERENTIAL(sConfigInjected->InjectedSingleDiff));
 1893              		.loc 1 1665 3 view .LVU575
1666:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->AutoInjectedConv));
 1894              		.loc 1 1666 3 view .LVU576
1667:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->QueueInjectedContext));
 1895              		.loc 1 1667 3 view .LVU577
1668:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC_EDGE(sConfigInjected->ExternalTrigInjecConvEdge));
 1896              		.loc 1 1668 3 view .LVU578
1669:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_EXTTRIGINJEC(hadc, sConfigInjected->ExternalTrigInjecConv));
 1897              		.loc 1 1669 3 view .LVU579
1670:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_OFFSET_NUMBER(sConfigInjected->InjectedOffsetNumber));
 1898              		.loc 1 1670 3 view .LVU580
1671:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_RANGE(ADC_GET_RESOLUTION(hadc), sConfigInjected->InjectedOffset));
 1899              		.loc 1 1671 3 view .LVU581
1672:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjecOversamplingMode));
 1900              		.loc 1 1672 3 view .LVU582
1673:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1674:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (hadc->Init.ScanConvMode != ADC_SCAN_DISABLE)
 1901              		.loc 1 1674 3 view .LVU583
 1902              		.loc 1 1674 17 is_stmt 0 view .LVU584
 1903 000a 0069     		ldr	r0, [r0, #16]
 1904              	.LVL160:
1675:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1676:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_RANK(sConfigInjected->InjectedRank));
 1905              		.loc 1 1676 5 is_stmt 1 view .LVU585
1677:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_INJECTED_NB_CONV(sConfigInjected->InjectedNbrOfConversion));
 1906              		.loc 1 1677 5 view .LVU586
1678:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_FUNCTIONAL_STATE(sConfigInjected->InjectedDiscontinuousConvMode));
 1907              		.loc 1 1678 5 view .LVU587
1679:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1680:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1681:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1682:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* if JOVSE is set, the value of the OFFSETy_EN bit in ADCx_OFRy register is
1683:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      ignored (considered as reset) */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 178


1684:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE) && (sConfigInjected->In
 1908              		.loc 1 1684 3 view .LVU588
1685:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1686:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* JDISCEN and JAUTO bits can't be set at the same time  */
1687:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(!((sConfigInjected->InjectedDiscontinuousConvMode == ENABLE) && (sConfigInjected->Au
 1909              		.loc 1 1687 3 view .LVU589
1688:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1689:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  DISCEN and JAUTO bits can't be set at the same time */
1690:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(!((hadc->Init.DiscontinuousConvMode == ENABLE) && (sConfigInjected->AutoInjectedConv
 1910              		.loc 1 1690 3 view .LVU590
1691:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1692:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Verification of channel number */
1693:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (sConfigInjected->InjectedSingleDiff != ADC_DIFFERENTIAL_ENDED)
 1911              		.loc 1 1693 3 view .LVU591
1694:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1695:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_CHANNEL(hadc, sConfigInjected->InjectedChannel));
1696:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1697:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
1698:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1699:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_DIFF_CHANNEL(hadc, sConfigInjected->InjectedChannel));
 1912              		.loc 1 1699 5 view .LVU592
1700:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1701:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1702:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
1703:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
 1913              		.loc 1 1703 3 view .LVU593
 1914              		.loc 1 1703 3 view .LVU594
 1915 000c 93F85020 		ldrb	r2, [r3, #80]	@ zero_extendqisi2
 1916 0010 012A     		cmp	r2, #1
 1917 0012 00F0AE82 		beq	.L201
 1918              		.loc 1 1703 3 discriminator 2 view .LVU595
 1919 0016 0122     		movs	r2, #1
 1920 0018 83F85020 		strb	r2, [r3, #80]
 1921              		.loc 1 1703 3 discriminator 2 view .LVU596
1704:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1705:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Configuration of injected group sequencer:                               */
1706:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Hardware constraint: Must fully define injected context register JSQR    */
1707:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* before make it entering into injected sequencer queue.                   */
1708:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*                                                                          */
1709:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* - if scan mode is disabled:                                              */
1710:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to 0x00: 1 channel         */
1711:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      converted (channel on injected rank 1)                              */
1712:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      Parameter "InjectedNbrOfConversion" is discarded.                   */
1713:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting is simple: register is fully */
1714:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      defined on one call of this function (for injected rank 1) and can  */
1715:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      be entered into queue directly.                                     */
1716:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* - if scan mode is enabled:                                               */
1717:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected channels sequence length is set to parameter               */
1718:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      "InjectedNbrOfConversion".                                          */
1719:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    * Injected context register JSQR setting more complex: register is    */
1720:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      fully defined over successive calls of this function, for each      */
1721:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      injected channel rank. It is entered into queue only when all       */
1722:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*      injected ranks have been set.                                       */
1723:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*   Note: Scan mode is not present by hardware on this device, but used    */
1724:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*   by software for alignment over all STM32 devices.                      */
1725:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1726:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((hadc->Init.ScanConvMode == ADC_SCAN_DISABLE)  ||
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 179


 1922              		.loc 1 1726 3 discriminator 2 view .LVU597
 1923              		.loc 1 1726 6 is_stmt 0 discriminator 2 view .LVU598
 1924 001c A8B1     		cbz	r0, .L137
1727:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 1925              		.loc 1 1727 23 discriminator 1 view .LVU599
 1926 001e 8A69     		ldr	r2, [r1, #24]
1726:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       (sConfigInjected->InjectedNbrOfConversion == 1U))
 1927              		.loc 1 1726 54 discriminator 1 view .LVU600
 1928 0020 012A     		cmp	r2, #1
 1929 0022 12D0     		beq	.L137
1728:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1729:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Configuration of context register JSQR:                                */
1730:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - number of ranks in injected group sequencer: fixed to 1st rank      */
1731:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*    (scan mode disabled, only rank 1 used)                              */
1732:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - external trigger to start conversion                                */
1733:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - external trigger polarity                                           */
1734:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*  - channel set to rank 1 (scan mode disabled, only rank 1 can be used) */
1735:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1736:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedRank == ADC_INJECTED_RANK_1)
1737:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1738:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1739:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* software start.                                                      */
1740:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1741:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1742:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       software start.                                                */
1743:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
1744:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1745:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1746:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
1747:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
1748:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                           );
1749:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1750:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1751:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1752:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = (ADC_JSQR_RK(sConfigInjected->InjectedChannel, ADC_INJECT
1753:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1754:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1755:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, tmp_JSQR_ContextQueueBeingBuilt);
1756:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
1757:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = tmp_JSQR_ContextQueueBeingBuilt;
1758:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1759:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1760:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1761:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
1762:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1763:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Case of scan mode enabled, several channels to set into injected group */
1764:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* sequencer.                                                             */
1765:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*                                                                        */
1766:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Procedure to define injected context register JSQR over successive     */
1767:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* calls of this function, for each injected channel rank:                */
1768:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 1. Start new context and set parameters related to all injected        */
1769:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*    channels: injected sequence length and trigger.                     */
1770:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1771:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* if hadc->InjectionConfig.ChannelCount is equal to 0, this is the first */
1772:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*   call of the context under setting                                    */
1773:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
 1930              		.loc 1 1773 5 is_stmt 1 view .LVU601
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 180


 1931              		.loc 1 1773 30 is_stmt 0 view .LVU602
 1932 0024 186E     		ldr	r0, [r3, #96]
 1933              		.loc 1 1773 8 view .LVU603
 1934 0026 0028     		cmp	r0, #0
 1935 0028 40F0A180 		bne	.L202
1774:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1775:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Initialize number of channels that will be configured on the context */
1776:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  being built                                                         */
1777:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ChannelCount = sConfigInjected->InjectedNbrOfConversion;
 1936              		.loc 1 1777 7 is_stmt 1 view .LVU604
 1937              		.loc 1 1777 42 is_stmt 0 view .LVU605
 1938 002c 1A66     		str	r2, [r3, #96]
1778:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Handle hadc saves the context under build up over each HAL_ADCEx_InjectedConfigChannel()
1779:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          call, this context will be written in JSQR register at the last call.
1780:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****          At this point, the context is merely reset  */
1781:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       hadc->InjectionConfig.ContextQueue = 0x00000000U;
 1939              		.loc 1 1781 7 is_stmt 1 view .LVU606
 1940              		.loc 1 1781 42 is_stmt 0 view .LVU607
 1941 002e 0022     		movs	r2, #0
 1942 0030 DA65     		str	r2, [r3, #92]
1782:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1783:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Configuration of context register JSQR:                              */
1784:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - number of ranks in injected group sequencer                       */
1785:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - external trigger to start conversion                              */
1786:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - external trigger polarity                                         */
1787:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1788:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable external trigger if trigger selection is different of         */
1789:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* software start.                                                      */
1790:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Note: This configuration keeps the hardware feature of parameter     */
1791:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       ExternalTrigInjecConvEdge "trigger edge none" equivalent to    */
1792:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*       software start.                                                */
1793:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->ExternalTrigInjecConv != ADC_INJECTED_SOFTWARE_START)
 1943              		.loc 1 1793 7 is_stmt 1 view .LVU608
 1944              		.loc 1 1793 26 is_stmt 0 view .LVU609
 1945 0032 0C6A     		ldr	r4, [r1, #32]
 1946              		.loc 1 1793 10 view .LVU610
 1947 0034 002C     		cmp	r4, #0
 1948 0036 00F09780 		beq	.L143
1794:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1795:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U)
 1949              		.loc 1 1795 9 is_stmt 1 view .LVU611
 1950              		.loc 1 1795 60 is_stmt 0 view .LVU612
 1951 003a 8A69     		ldr	r2, [r1, #24]
 1952              		.loc 1 1795 86 view .LVU613
 1953 003c 013A     		subs	r2, r2, #1
1796:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1954              		.loc 1 1796 86 view .LVU614
 1955 003e 04F03C04 		and	r4, r4, #60
 1956              		.loc 1 1796 44 view .LVU615
 1957 0042 2243     		orrs	r2, r2, r4
1797:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 1958              		.loc 1 1797 61 view .LVU616
 1959 0044 4C6A     		ldr	r4, [r1, #36]
1795:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1960              		.loc 1 1795 41 view .LVU617
 1961 0046 1443     		orrs	r4, r4, r2
 1962              	.LVL161:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 181


1795:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 1963              		.loc 1 1795 41 view .LVU618
 1964 0048 92E0     		b	.L142
 1965              	.LVL162:
 1966              	.L137:
1736:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1967              		.loc 1 1736 5 is_stmt 1 view .LVU619
1736:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1968              		.loc 1 1736 24 is_stmt 0 view .LVU620
 1969 004a 4A68     		ldr	r2, [r1, #4]
1736:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 1970              		.loc 1 1736 8 view .LVU621
 1971 004c 082A     		cmp	r2, #8
 1972 004e 6BD0     		beq	.L217
 1973              	.LVL163:
 1974              	.L139:
1798:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                           );
1799:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1800:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1801:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1802:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_JSQR_ContextQueueBeingBuilt = ((sConfigInjected->InjectedNbrOfConversion - 1U));
1803:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1804:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1805:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1806:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1807:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 2. Continue setting of context under definition with parameter       */
1808:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /*    related to each channel: channel rank sequence                    */
1809:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Clear the old JSQx bits for the selected rank */
1810:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt &= ~ADC_JSQR_RK(ADC_SQR3_SQ10, sConfigInjected->InjectedRank);
1811:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1812:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set the JSQx bits for the selected rank */
1813:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_JSQR_ContextQueueBeingBuilt |= ADC_JSQR_RK(sConfigInjected->InjectedChannel, sConfigInjecte
1814:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1815:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Decrease channel count  */
1816:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     hadc->InjectionConfig.ChannelCount--;
1817:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1818:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 3. tmp_JSQR_ContextQueueBeingBuilt is fully built for this HAL_ADCEx_InjectedConfigChannel()
1819:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           call, aggregate the setting to those already built during the previous
1820:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           HAL_ADCEx_InjectedConfigChannel() calls (for the same context of course)  */
1821:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     hadc->InjectionConfig.ContextQueue |= tmp_JSQR_ContextQueueBeingBuilt;
1822:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1823:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* 4. End of context setting: if this is the last channel set, then write context
1824:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         into register JSQR and make it enter into queue                   */
1825:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (hadc->InjectionConfig.ChannelCount == 0U)
1826:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1827:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->JSQR, ADC_JSQR_FIELDS, hadc->InjectionConfig.ContextQueue);
1828:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1829:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1830:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1831:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1832:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
1833:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on injected group:                                   */
1834:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Injected context queue: Queue disable (active context is kept) or     */
1835:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    enable (context decremented, up to 2 contexts queued)                 */
1836:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Injected discontinuous mode: can be enabled only if auto-injected     */
1837:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    mode is disabled.                                                     */
1838:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_INJ_IsConversionOngoing(hadc->Instance) == 0UL)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 182


 1975              		.loc 1 1838 3 is_stmt 1 view .LVU622
 1976              		.loc 1 1838 7 is_stmt 0 view .LVU623
 1977 0050 1A68     		ldr	r2, [r3]
 1978              	.LVL164:
 1979              	.LBB376:
 1980              	.LBI376:
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 1981              		.loc 2 6353 26 is_stmt 1 view .LVU624
 1982              	.LBB377:
 1983              		.loc 2 6355 3 view .LVU625
 1984              		.loc 2 6355 12 is_stmt 0 view .LVU626
 1985 0052 9068     		ldr	r0, [r2, #8]
 1986              		.loc 2 6355 76 view .LVU627
 1987 0054 10F0080F 		tst	r0, #8
 1988 0058 0DD1     		bne	.L144
 1989              	.LVL165:
 1990              		.loc 2 6355 76 view .LVU628
 1991              	.LBE377:
 1992              	.LBE376:
1839:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1840:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If auto-injected mode is disabled: no constraint                       */
1841:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->AutoInjectedConv == DISABLE)
 1993              		.loc 1 1841 5 is_stmt 1 view .LVU629
 1994              		.loc 1 1841 24 is_stmt 0 view .LVU630
 1995 005a 487F     		ldrb	r0, [r1, #29]	@ zero_extendqisi2
 1996              		.loc 1 1841 8 view .LVU631
 1997 005c 0028     		cmp	r0, #0
 1998 005e 40F0A680 		bne	.L145
1842:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1843:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
 1999              		.loc 1 1843 7 is_stmt 1 view .LVU632
 2000 0062 D068     		ldr	r0, [r2, #12]
 2001 0064 20F44010 		bic	r0, r0, #3145728
 2002 0068 8D7F     		ldrb	r5, [r1, #30]	@ zero_extendqisi2
 2003 006a 0C7F     		ldrb	r4, [r1, #28]	@ zero_extendqisi2
 2004 006c 2405     		lsls	r4, r4, #20
 2005 006e 44EA4554 		orr	r4, r4, r5, lsl #21
 2006 0072 2043     		orrs	r0, r0, r4
 2007 0074 D060     		str	r0, [r2, #12]
 2008              	.L144:
1844:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1845:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext)    
1846:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_DISCCONTINUOUS((uint32_t)sConfigInjected->InjectedDiscontinuousCon
1847:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1848:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If auto-injected mode is enabled: Injected discontinuous setting is    */
1849:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* discarded.                                                             */
1850:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1851:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1852:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR,
1853:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
1854:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_INJECT_CONTEXT_QUEUE((uint32_t)sConfigInjected->QueueInjectedContext));
1855:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1856:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1857:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1858:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1859:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1860:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 183


1861:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on regular and injected groups:                      */
1862:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Automatic injected conversion: can be enabled if injected group       */
1863:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*    external triggers are disabled.                                       */
1864:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Channel sampling time                                                 */
1865:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Channel offset                                                        */
1866:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 2009              		.loc 1 1866 3 view .LVU633
 2010              		.loc 1 1866 44 is_stmt 0 view .LVU634
 2011 0076 1C68     		ldr	r4, [r3]
 2012              	.LVL166:
 2013              	.LBB378:
 2014              	.LBI378:
6170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2015              		.loc 2 6170 26 is_stmt 1 view .LVU635
 2016              	.LBB379:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2017              		.loc 2 6172 3 view .LVU636
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2018              		.loc 2 6172 12 is_stmt 0 view .LVU637
 2019 0078 A268     		ldr	r2, [r4, #8]
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2020              		.loc 2 6172 74 view .LVU638
 2021 007a 12F00402 		ands	r2, r2, #4
 2022 007e 00D0     		beq	.L146
 2023 0080 0122     		movs	r2, #1
 2024              	.L146:
 2025              	.LVL167:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2026              		.loc 2 6172 74 view .LVU639
 2027              	.LBE379:
 2028              	.LBE378:
1867:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 2029              		.loc 1 1867 3 is_stmt 1 view .LVU640
 2030              	.LBB380:
 2031              	.LBI380:
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2032              		.loc 2 6353 26 view .LVU641
 2033              	.LBB381:
 2034              		.loc 2 6355 3 view .LVU642
 2035              		.loc 2 6355 12 is_stmt 0 view .LVU643
 2036 0082 A068     		ldr	r0, [r4, #8]
 2037              		.loc 2 6355 76 view .LVU644
 2038 0084 10F00800 		ands	r0, r0, #8
 2039 0088 00D0     		beq	.L147
 2040 008a 0120     		movs	r0, #1
 2041              	.L147:
 2042              	.LVL168:
 2043              		.loc 2 6355 76 view .LVU645
 2044              	.LBE381:
 2045              	.LBE380:
1868:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1869:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 2046              		.loc 1 1869 3 is_stmt 1 view .LVU646
 2047              		.loc 1 1869 6 is_stmt 0 view .LVU647
 2048 008c 002A     		cmp	r2, #0
 2049 008e 40F01D81 		bne	.L203
1870:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 184


 2050              		.loc 1 1870 7 view .LVU648
 2051 0092 0028     		cmp	r0, #0
 2052 0094 40F05281 		bne	.L204
1871:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
1872:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
1873:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If injected group external triggers are disabled (set to injected      */
1874:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* software start): no constraint                                         */
1875:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((sConfigInjected->ExternalTrigInjecConv == ADC_INJECTED_SOFTWARE_START)
 2053              		.loc 1 1875 5 is_stmt 1 view .LVU649
 2054              		.loc 1 1875 25 is_stmt 0 view .LVU650
 2055 0098 0A6A     		ldr	r2, [r1, #32]
 2056              	.LVL169:
 2057              		.loc 1 1875 8 view .LVU651
 2058 009a 1AB1     		cbz	r2, .L149
1876:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         || (sConfigInjected->ExternalTrigInjecConvEdge == ADC_EXTERNALTRIGINJECCONV_EDGE_NONE))
 2059              		.loc 1 1876 28 view .LVU652
 2060 009c 4A6A     		ldr	r2, [r1, #36]
 2061              		.loc 1 1876 9 view .LVU653
 2062 009e 002A     		cmp	r2, #0
 2063 00a0 40F09380 		bne	.L150
 2064              	.L149:
1877:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1878:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
 2065              		.loc 1 1878 7 is_stmt 1 view .LVU654
 2066              		.loc 1 1878 26 is_stmt 0 view .LVU655
 2067 00a4 4A7F     		ldrb	r2, [r1, #29]	@ zero_extendqisi2
 2068              		.loc 1 1878 10 view .LVU656
 2069 00a6 012A     		cmp	r2, #1
 2070 00a8 00F08980 		beq	.L218
1879:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1880:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
1881:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1882:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1883:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1884:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
 2071              		.loc 1 1884 9 is_stmt 1 view .LVU657
 2072 00ac E268     		ldr	r2, [r4, #12]
 2073 00ae 22F00072 		bic	r2, r2, #33554432
 2074 00b2 E260     		str	r2, [r4, #12]
1653:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2075              		.loc 1 1653 21 is_stmt 0 view .LVU658
 2076 00b4 0020     		movs	r0, #0
 2077              	.LVL170:
 2078              	.L152:
1885:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1886:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1887:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If Automatic injected conversion was intended to be set and could not  */
1888:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* due to injected group external triggers enabled, error is reported.    */
1889:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1890:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1891:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (sConfigInjected->AutoInjectedConv == ENABLE)
1892:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1893:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Update ADC state machine to error */
1894:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
1895:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1896:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         tmp_hal_status = HAL_ERROR;
1897:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 185


1898:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       else
1899:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1900:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JAUTO);
1901:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1902:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1903:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1904:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjecOversamplingMode == ENABLE)
 2079              		.loc 1 1904 5 is_stmt 1 view .LVU659
 2080              		.loc 1 1904 24 is_stmt 0 view .LVU660
 2081 00b6 91F82820 		ldrb	r2, [r1, #40]	@ zero_extendqisi2
 2082              		.loc 1 1904 8 view .LVU661
 2083 00ba 012A     		cmp	r2, #1
 2084 00bc 00F09380 		beq	.L219
1905:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1906:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_OVERSAMPLING_RATIO(sConfigInjected->InjecOversampling.Ratio));
1907:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
1908:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1909:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  JOVSE must be reset in case of triggered regular mode  */
1910:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(!(READ_BIT(hadc->Instance->CFGR2, ADC_CFGR2_ROVSE | ADC_CFGR2_TROVS) == (ADC_CFG
1911:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1912:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Configuration of Injected Oversampler:                                 */
1913:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Oversampling Ratio                                                  */
1914:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Right bit shift                                                     */
1915:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1916:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Enable OverSampling mode */
1917:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(hadc->Instance->CFGR2,
1918:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
1919:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSR  |
1920:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_OVSS,
1921:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE                                  |
1922:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  sConfigInjected->InjecOversampling.Ratio         |
1923:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  sConfigInjected->InjecOversampling.RightBitShift
1924:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                 );
1925:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1926:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1927:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1928:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Disable Regular OverSampling */
1929:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(hadc->Instance->CFGR2, ADC_CFGR2_JOVSE);
 2085              		.loc 1 1929 7 is_stmt 1 view .LVU662
 2086 00c0 1C68     		ldr	r4, [r3]
 2087 00c2 2269     		ldr	r2, [r4, #16]
 2088 00c4 22F00202 		bic	r2, r2, #2
 2089 00c8 2261     		str	r2, [r4, #16]
 2090              	.L155:
1930:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1931:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1932:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_SMPR1_SMPPLUS)
1933:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Manage specific case of sampling time 3.5 cycles replacing 2.5 cyles */
1934:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSamplingTime == ADC_SAMPLETIME_3CYCLES_5)
1935:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1936:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1937:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, LL_ADC_SAMPLI
1938:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1939:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
1940:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_3C5_REPL_2C5);
1941:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1942:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 186


1943:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1944:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
1945:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInject
1946:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1947:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC sampling time common configuration */
1948:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetSamplingTimeCommonConfig(hadc->Instance, LL_ADC_SAMPLINGTIME_COMMON_DEFAULT);
1949:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1950:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #else
1951:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set sampling time of the selected ADC channel */
1952:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetChannelSamplingTime(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected
 2091              		.loc 1 1952 5 view .LVU663
 2092 00ca 1A68     		ldr	r2, [r3]
 2093 00cc 0E68     		ldr	r6, [r1]
 2094 00ce 8D68     		ldr	r5, [r1, #8]
 2095              	.LVL171:
 2096              	.LBB382:
 2097              	.LBI382:
4716:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2098              		.loc 2 4716 22 view .LVU664
 2099              	.LBB383:
4722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2100              		.loc 2 4722 3 view .LVU665
4722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2101              		.loc 2 4722 25 is_stmt 0 view .LVU666
 2102 00d0 02F1140C 		add	ip, r2, #20
 2103 00d4 720E     		lsrs	r2, r6, #25
 2104              	.LVL172:
4722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2105              		.loc 2 4722 25 view .LVU667
 2106 00d6 9200     		lsls	r2, r2, #2
 2107 00d8 02F00402 		and	r2, r2, #4
 2108              	.LVL173:
4724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2109              		.loc 2 4724 3 is_stmt 1 view .LVU668
 2110 00dc 5CF80240 		ldr	r4, [ip, r2]
 2111 00e0 C6F30456 		ubfx	r6, r6, #20, #5
 2112              	.LVL174:
4724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2113              		.loc 2 4724 3 is_stmt 0 view .LVU669
 2114 00e4 0727     		movs	r7, #7
 2115 00e6 B740     		lsls	r7, r7, r6
 2116 00e8 24EA0704 		bic	r4, r4, r7
 2117 00ec B540     		lsls	r5, r5, r6
 2118              	.LVL175:
4724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2119              		.loc 2 4724 3 view .LVU670
 2120 00ee 2C43     		orrs	r4, r4, r5
 2121 00f0 4CF80240 		str	r4, [ip, r2]
 2122              	.LVL176:
4724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2123              		.loc 2 4724 3 view .LVU671
 2124              	.LBE383:
 2125              	.LBE382:
1953:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif
1954:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1955:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Configure the offset: offset enable/disable, channel, offset value */
1956:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 187


1957:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Shift the offset with respect to the selected ADC resolution. */
1958:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Offset has to be left-aligned on bit 11, the LSB (right bits) are set to 0 */
1959:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmpOffsetShifted = ADC_OFFSET_SHIFT_RESOLUTION(hadc, sConfigInjected->InjectedOffset);
 2126              		.loc 1 1959 5 is_stmt 1 view .LVU672
 2127              		.loc 1 1959 24 is_stmt 0 view .LVU673
 2128 00f4 4D69     		ldr	r5, [r1, #20]
 2129 00f6 1C68     		ldr	r4, [r3]
 2130 00f8 E268     		ldr	r2, [r4, #12]
 2131 00fa C2F3C102 		ubfx	r2, r2, #3, #2
 2132 00fe 5200     		lsls	r2, r2, #1
 2133              		.loc 1 1959 22 view .LVU674
 2134 0100 05FA02F2 		lsl	r2, r5, r2
 2135              	.LVL177:
1960:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1961:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedOffsetNumber != ADC_OFFSET_NONE)
 2136              		.loc 1 1961 5 is_stmt 1 view .LVU675
 2137              		.loc 1 1961 24 is_stmt 0 view .LVU676
 2138 0104 0E69     		ldr	r6, [r1, #16]
 2139              		.loc 1 1961 8 view .LVU677
 2140 0106 042E     		cmp	r6, #4
 2141 0108 79D0     		beq	.L156
1962:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1963:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set ADC selected offset number */
1964:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetOffset(hadc->Instance, sConfigInjected->InjectedOffsetNumber, sConfigInjected->Inje
 2142              		.loc 1 1964 7 is_stmt 1 view .LVU678
 2143              	.LVL178:
 2144              	.LBB384:
 2145              	.LBI384:
2929:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2146              		.loc 2 2929 22 view .LVU679
 2147              	.LBB385:
2931:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2148              		.loc 2 2931 3 view .LVU680
2931:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2149              		.loc 2 2931 25 is_stmt 0 view .LVU681
 2150 010a 6034     		adds	r4, r4, #96
 2151              	.LVL179:
2933:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2152              		.loc 2 2933 3 is_stmt 1 view .LVU682
 2153 010c 54F82670 		ldr	r7, [r4, r6, lsl #2]
 2154 0110 AB4D     		ldr	r5, .L228
 2155 0112 3D40     		ands	r5, r5, r7
 2156 0114 0F68     		ldr	r7, [r1]
 2157 0116 07F0F847 		and	r7, r7, #2080374784
 2158 011a 3A43     		orrs	r2, r2, r7
 2159              	.LVL180:
2933:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN | ADC_OFR1_OFFSET1_CH | ADC_OFR1_OFFSET1,
 2160              		.loc 2 2933 3 is_stmt 0 view .LVU683
 2161 011c 1543     		orrs	r5, r5, r2
 2162 011e 45F00045 		orr	r5, r5, #-2147483648
 2163 0122 44F82650 		str	r5, [r4, r6, lsl #2]
 2164              	.LVL181:
2936:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2165              		.loc 2 2936 1 view .LVU684
 2166 0126 D2E0     		b	.L148
 2167              	.LVL182:
 2168              	.L217:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 188


2936:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2169              		.loc 2 2936 1 view .LVU685
 2170              	.LBE385:
 2171              	.LBE384:
1743:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2172              		.loc 1 1743 7 is_stmt 1 view .LVU686
1743:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2173              		.loc 1 1743 26 is_stmt 0 view .LVU687
 2174 0128 0C6A     		ldr	r4, [r1, #32]
1743:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2175              		.loc 1 1743 10 view .LVU688
 2176 012a BCB1     		cbz	r4, .L140
1745:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2177              		.loc 1 1745 9 is_stmt 1 view .LVU689
1745:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2178              		.loc 1 1745 44 is_stmt 0 view .LVU690
 2179 012c 0868     		ldr	r0, [r1]
 2180 012e 820E     		lsrs	r2, r0, #26
 2181 0130 1202     		lsls	r2, r2, #8
 2182 0132 02F4F852 		and	r2, r2, #7936
1746:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 2183              		.loc 1 1746 86 view .LVU691
 2184 0136 04F03C04 		and	r4, r4, #60
1746:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | sConfigInjected->ExternalTrigInjecConvEdge
 2185              		.loc 1 1746 44 view .LVU692
 2186 013a 2243     		orrs	r2, r2, r4
1747:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                           );
 2187              		.loc 1 1747 61 view .LVU693
 2188 013c 486A     		ldr	r0, [r1, #36]
1745:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                            | (sConfigInjected->ExternalTrigInjecConv & ADC_JSQR_JEX
 2189              		.loc 1 1745 41 view .LVU694
 2190 013e 0243     		orrs	r2, r2, r0
 2191              	.LVL183:
 2192              	.L141:
1755:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* For debug and informative reasons, hadc handle saves JSQR setting */
 2193              		.loc 1 1755 7 is_stmt 1 view .LVU695
 2194 0140 1C68     		ldr	r4, [r3]
 2195 0142 E06C     		ldr	r0, [r4, #76]
 2196 0144 20F0FB40 		bic	r0, r0, #2105540608
 2197 0148 20F4EF00 		bic	r0, r0, #7831552
 2198 014c 20F4BF40 		bic	r0, r0, #24448
 2199 0150 20F07F00 		bic	r0, r0, #127
 2200 0154 1043     		orrs	r0, r0, r2
 2201 0156 E064     		str	r0, [r4, #76]
1757:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2202              		.loc 1 1757 7 view .LVU696
1757:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2203              		.loc 1 1757 42 is_stmt 0 view .LVU697
 2204 0158 DA65     		str	r2, [r3, #92]
 2205 015a 79E7     		b	.L139
 2206              	.LVL184:
 2207              	.L140:
1752:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2208              		.loc 1 1752 9 is_stmt 1 view .LVU698
1752:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2209              		.loc 1 1752 44 is_stmt 0 view .LVU699
 2210 015c 0A68     		ldr	r2, [r1]
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 189


 2211 015e 920E     		lsrs	r2, r2, #26
 2212 0160 1202     		lsls	r2, r2, #8
1752:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2213              		.loc 1 1752 41 view .LVU700
 2214 0162 02F4F852 		and	r2, r2, #7936
 2215              	.LVL185:
1752:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2216              		.loc 1 1752 41 view .LVU701
 2217 0166 EBE7     		b	.L141
 2218              	.LVL186:
 2219              	.L143:
1802:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2220              		.loc 1 1802 9 is_stmt 1 view .LVU702
1802:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2221              		.loc 1 1802 60 is_stmt 0 view .LVU703
 2222 0168 8A69     		ldr	r2, [r1, #24]
1802:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2223              		.loc 1 1802 41 view .LVU704
 2224 016a 541E     		subs	r4, r2, #1
 2225              	.LVL187:
1802:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2226              		.loc 1 1802 41 view .LVU705
 2227 016c 00E0     		b	.L142
 2228              	.LVL188:
 2229              	.L202:
1660:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2230              		.loc 1 1660 12 view .LVU706
 2231 016e 0024     		movs	r4, #0
 2232              	.LVL189:
 2233              	.L142:
1810:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2234              		.loc 1 1810 5 is_stmt 1 view .LVU707
1813:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2235              		.loc 1 1813 5 view .LVU708
1813:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2236              		.loc 1 1813 40 is_stmt 0 view .LVU709
 2237 0170 0868     		ldr	r0, [r1]
 2238 0172 C0F38460 		ubfx	r0, r0, #26, #5
 2239 0176 4A68     		ldr	r2, [r1, #4]
 2240 0178 02F01F02 		and	r2, r2, #31
 2241 017c 00FA02F2 		lsl	r2, r0, r2
1813:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2242              		.loc 1 1813 37 view .LVU710
 2243 0180 2243     		orrs	r2, r2, r4
 2244              	.LVL190:
1816:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2245              		.loc 1 1816 5 is_stmt 1 view .LVU711
1816:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2246              		.loc 1 1816 26 is_stmt 0 view .LVU712
 2247 0182 186E     		ldr	r0, [r3, #96]
1816:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2248              		.loc 1 1816 39 view .LVU713
 2249 0184 0138     		subs	r0, r0, #1
 2250 0186 1866     		str	r0, [r3, #96]
1821:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2251              		.loc 1 1821 5 is_stmt 1 view .LVU714
1821:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 190


 2252              		.loc 1 1821 40 is_stmt 0 view .LVU715
 2253 0188 DC6D     		ldr	r4, [r3, #92]
 2254 018a 2243     		orrs	r2, r2, r4
 2255              	.LVL191:
1821:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2256              		.loc 1 1821 40 view .LVU716
 2257 018c DA65     		str	r2, [r3, #92]
1825:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 2258              		.loc 1 1825 5 is_stmt 1 view .LVU717
1825:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 2259              		.loc 1 1825 8 is_stmt 0 view .LVU718
 2260 018e 0028     		cmp	r0, #0
 2261 0190 7FF45EAF 		bne	.L139
1827:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 2262              		.loc 1 1827 7 is_stmt 1 view .LVU719
 2263 0194 1C68     		ldr	r4, [r3]
 2264 0196 E06C     		ldr	r0, [r4, #76]
 2265 0198 20F0FB40 		bic	r0, r0, #2105540608
 2266 019c 20F4EF00 		bic	r0, r0, #7831552
 2267 01a0 20F4BF40 		bic	r0, r0, #24448
 2268 01a4 20F07F00 		bic	r0, r0, #127
 2269 01a8 0243     		orrs	r2, r2, r0
 2270 01aa E264     		str	r2, [r4, #76]
 2271 01ac 50E7     		b	.L139
 2272              	.L145:
1852:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR_JQM | ADC_CFGR_JDISCEN,
 2273              		.loc 1 1852 7 view .LVU720
 2274 01ae D068     		ldr	r0, [r2, #12]
 2275 01b0 20F44010 		bic	r0, r0, #3145728
 2276 01b4 8C7F     		ldrb	r4, [r1, #30]	@ zero_extendqisi2
 2277 01b6 40EA4450 		orr	r0, r0, r4, lsl #21
 2278 01ba D060     		str	r0, [r2, #12]
 2279 01bc 5BE7     		b	.L144
 2280              	.LVL192:
 2281              	.L218:
1880:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2282              		.loc 1 1880 9 view .LVU721
 2283 01be E268     		ldr	r2, [r4, #12]
 2284 01c0 42F00072 		orr	r2, r2, #33554432
 2285 01c4 E260     		str	r2, [r4, #12]
1653:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2286              		.loc 1 1653 21 is_stmt 0 view .LVU722
 2287 01c6 0020     		movs	r0, #0
 2288              	.LVL193:
1653:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2289              		.loc 1 1653 21 view .LVU723
 2290 01c8 75E7     		b	.L152
 2291              	.LVL194:
 2292              	.L150:
1891:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2293              		.loc 1 1891 7 is_stmt 1 view .LVU724
1891:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2294              		.loc 1 1891 26 is_stmt 0 view .LVU725
 2295 01ca 487F     		ldrb	r0, [r1, #29]	@ zero_extendqisi2
 2296              	.LVL195:
1891:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 2297              		.loc 1 1891 10 view .LVU726
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 191


 2298 01cc 0128     		cmp	r0, #1
 2299 01ce 05D0     		beq	.L220
1900:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2300              		.loc 1 1900 9 is_stmt 1 view .LVU727
 2301 01d0 E268     		ldr	r2, [r4, #12]
 2302 01d2 22F00072 		bic	r2, r2, #33554432
 2303 01d6 E260     		str	r2, [r4, #12]
1653:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2304              		.loc 1 1653 21 is_stmt 0 view .LVU728
 2305 01d8 0020     		movs	r0, #0
 2306 01da 6CE7     		b	.L152
 2307              	.L220:
1894:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2308              		.loc 1 1894 9 is_stmt 1 view .LVU729
 2309 01dc 5A6D     		ldr	r2, [r3, #84]
 2310 01de 42F02002 		orr	r2, r2, #32
 2311 01e2 5A65     		str	r2, [r3, #84]
1896:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2312              		.loc 1 1896 9 view .LVU730
 2313              	.LVL196:
1896:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2314              		.loc 1 1896 9 is_stmt 0 view .LVU731
 2315 01e4 67E7     		b	.L152
 2316              	.LVL197:
 2317              	.L219:
1906:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       assert_param(IS_ADC_RIGHT_BIT_SHIFT(sConfigInjected->InjecOversampling.RightBitShift));
 2318              		.loc 1 1906 7 is_stmt 1 view .LVU732
1907:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2319              		.loc 1 1907 7 view .LVU733
1910:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 2320              		.loc 1 1910 7 view .LVU734
1917:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CFGR2_JOVSE |
 2321              		.loc 1 1917 7 view .LVU735
 2322 01e6 1D68     		ldr	r5, [r3]
 2323 01e8 2A69     		ldr	r2, [r5, #16]
 2324 01ea 22F4FF72 		bic	r2, r2, #510
 2325 01ee CC6A     		ldr	r4, [r1, #44]
 2326 01f0 0E6B     		ldr	r6, [r1, #48]
 2327 01f2 3443     		orrs	r4, r4, r6
 2328 01f4 2243     		orrs	r2, r2, r4
 2329 01f6 42F00202 		orr	r2, r2, #2
 2330 01fa 2A61     		str	r2, [r5, #16]
 2331 01fc 65E7     		b	.L155
 2332              	.LVL198:
 2333              	.L156:
1965:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                        tmpOffsetShifted);
1966:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1967:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1968:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
1969:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
1970:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Scan each offset register to check if the selected channel is targeted. */
1971:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* If this is the case, the corresponding offset number is disabled.       */
1972:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_1))
 2334              		.loc 1 1972 7 view .LVU736
 2335              	.LBB386:
 2336              	.LBI386:
3008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 192


 2337              		.loc 2 3008 26 view .LVU737
 2338              	.LBB387:
3010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2339              		.loc 2 3010 3 view .LVU738
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2340              		.loc 2 3012 3 view .LVU739
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2341              		.loc 2 3012 10 is_stmt 0 view .LVU740
 2342 01fe 226E     		ldr	r2, [r4, #96]
 2343              	.LVL199:
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2344              		.loc 2 3012 10 view .LVU741
 2345              	.LBE387:
 2346              	.LBE386:
 2347              	.LBB388:
 2348              	.LBI388:
3008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2349              		.loc 2 3008 26 is_stmt 1 view .LVU742
 2350              	.LBB389:
3010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2351              		.loc 2 3010 3 view .LVU743
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2352              		.loc 2 3012 3 view .LVU744
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2353              		.loc 2 3012 10 is_stmt 0 view .LVU745
 2354 0200 256E     		ldr	r5, [r4, #96]
 2355              	.LVL200:
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2356              		.loc 2 3012 10 view .LVU746
 2357              	.LBE389:
 2358              	.LBE388:
 2359              		.loc 1 1972 11 view .LVU747
 2360 0202 C5F38465 		ubfx	r5, r5, #26, #5
1973:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2361              		.loc 1 1973 14 view .LVU748
 2362 0206 0A68     		ldr	r2, [r1]
 2363 0208 C2F31206 		ubfx	r6, r2, #0, #19
 2364 020c 7EBB     		cbnz	r6, .L157
 2365              		.loc 1 1973 14 discriminator 1 view .LVU749
 2366 020e C2F38462 		ubfx	r2, r2, #26, #5
 2367              	.L158:
1972:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2368              		.loc 1 1972 10 view .LVU750
 2369 0212 9542     		cmp	r5, r2
 2370 0214 33D0     		beq	.L221
 2371              	.L160:
1974:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1975:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_1, LL_ADC_OFFSET_DISABLE);
1976:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1977:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_2))
 2372              		.loc 1 1977 7 is_stmt 1 view .LVU751
 2373              		.loc 1 1977 11 is_stmt 0 view .LVU752
 2374 0216 1D68     		ldr	r5, [r3]
 2375              	.LVL201:
 2376              	.LBB390:
 2377              	.LBI390:
3008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 193


 2378              		.loc 2 3008 26 is_stmt 1 view .LVU753
 2379              	.LBB391:
3010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2380              		.loc 2 3010 3 view .LVU754
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2381              		.loc 2 3012 3 view .LVU755
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2382              		.loc 2 3012 10 is_stmt 0 view .LVU756
 2383 0218 6A6E     		ldr	r2, [r5, #100]
 2384              	.LVL202:
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2385              		.loc 2 3012 10 view .LVU757
 2386              	.LBE391:
 2387              	.LBE390:
 2388              	.LBB392:
 2389              	.LBI392:
3008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2390              		.loc 2 3008 26 is_stmt 1 view .LVU758
 2391              	.LBB393:
3010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2392              		.loc 2 3010 3 view .LVU759
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2393              		.loc 2 3012 3 view .LVU760
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2394              		.loc 2 3012 10 is_stmt 0 view .LVU761
 2395 021a 6C6E     		ldr	r4, [r5, #100]
 2396              	.LVL203:
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2397              		.loc 2 3012 10 view .LVU762
 2398              	.LBE393:
 2399              	.LBE392:
 2400              		.loc 1 1977 11 view .LVU763
 2401 021c C4F38464 		ubfx	r4, r4, #26, #5
1978:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2402              		.loc 1 1978 14 view .LVU764
 2403 0220 0A68     		ldr	r2, [r1]
 2404 0222 C2F31206 		ubfx	r6, r2, #0, #19
 2405 0226 7EBB     		cbnz	r6, .L161
 2406              		.loc 1 1978 14 discriminator 1 view .LVU765
 2407 0228 C2F38462 		ubfx	r2, r2, #26, #5
 2408              	.L162:
1977:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2409              		.loc 1 1977 10 view .LVU766
 2410 022c 9442     		cmp	r4, r2
 2411 022e 33D0     		beq	.L222
 2412              	.L164:
1979:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1980:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_2, LL_ADC_OFFSET_DISABLE);
1981:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1982:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_3))
 2413              		.loc 1 1982 7 is_stmt 1 view .LVU767
 2414              		.loc 1 1982 11 is_stmt 0 view .LVU768
 2415 0230 1D68     		ldr	r5, [r3]
 2416              	.LVL204:
 2417              	.LBB394:
 2418              	.LBI394:
3008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 194


 2419              		.loc 2 3008 26 is_stmt 1 view .LVU769
 2420              	.LBB395:
3010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2421              		.loc 2 3010 3 view .LVU770
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2422              		.loc 2 3012 3 view .LVU771
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2423              		.loc 2 3012 10 is_stmt 0 view .LVU772
 2424 0232 AA6E     		ldr	r2, [r5, #104]
 2425              	.LVL205:
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2426              		.loc 2 3012 10 view .LVU773
 2427              	.LBE395:
 2428              	.LBE394:
 2429              	.LBB396:
 2430              	.LBI396:
3008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2431              		.loc 2 3008 26 is_stmt 1 view .LVU774
 2432              	.LBB397:
3010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2433              		.loc 2 3010 3 view .LVU775
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2434              		.loc 2 3012 3 view .LVU776
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2435              		.loc 2 3012 10 is_stmt 0 view .LVU777
 2436 0234 AC6E     		ldr	r4, [r5, #104]
 2437              	.LVL206:
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2438              		.loc 2 3012 10 view .LVU778
 2439              	.LBE397:
 2440              	.LBE396:
 2441              		.loc 1 1982 11 view .LVU779
 2442 0236 C4F38464 		ubfx	r4, r4, #26, #5
1983:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2443              		.loc 1 1983 14 view .LVU780
 2444 023a 0A68     		ldr	r2, [r1]
 2445 023c C2F31206 		ubfx	r6, r2, #0, #19
 2446 0240 7EBB     		cbnz	r6, .L165
 2447              		.loc 1 1983 14 discriminator 1 view .LVU781
 2448 0242 C2F38462 		ubfx	r2, r2, #26, #5
 2449              	.L166:
1982:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2450              		.loc 1 1982 10 view .LVU782
 2451 0246 9442     		cmp	r4, r2
 2452 0248 33D0     		beq	.L223
 2453              	.L168:
1984:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1985:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_3, LL_ADC_OFFSET_DISABLE);
1986:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1987:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_CHANNEL_TO_DECIMAL_NB(LL_ADC_GetOffsetChannel(hadc->Instance, LL_ADC_OFFSET_4))
 2454              		.loc 1 1987 7 is_stmt 1 view .LVU783
 2455              		.loc 1 1987 11 is_stmt 0 view .LVU784
 2456 024a 1D68     		ldr	r5, [r3]
 2457              	.LVL207:
 2458              	.LBB398:
 2459              	.LBI398:
3008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 195


 2460              		.loc 2 3008 26 is_stmt 1 view .LVU785
 2461              	.LBB399:
3010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2462              		.loc 2 3010 3 view .LVU786
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2463              		.loc 2 3012 3 view .LVU787
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2464              		.loc 2 3012 10 is_stmt 0 view .LVU788
 2465 024c EA6E     		ldr	r2, [r5, #108]
 2466              	.LVL208:
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2467              		.loc 2 3012 10 view .LVU789
 2468              	.LBE399:
 2469              	.LBE398:
 2470              	.LBB400:
 2471              	.LBI400:
3008:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2472              		.loc 2 3008 26 is_stmt 1 view .LVU790
 2473              	.LBB401:
3010:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2474              		.loc 2 3010 3 view .LVU791
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2475              		.loc 2 3012 3 view .LVU792
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2476              		.loc 2 3012 10 is_stmt 0 view .LVU793
 2477 024e EC6E     		ldr	r4, [r5, #108]
 2478              	.LVL209:
3012:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2479              		.loc 2 3012 10 view .LVU794
 2480              	.LBE401:
 2481              	.LBE400:
 2482              		.loc 1 1987 11 view .LVU795
 2483 0250 C4F38464 		ubfx	r4, r4, #26, #5
1988:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2484              		.loc 1 1988 14 view .LVU796
 2485 0254 0A68     		ldr	r2, [r1]
 2486 0256 C2F31206 		ubfx	r6, r2, #0, #19
 2487 025a 7EBB     		cbnz	r6, .L169
 2488              		.loc 1 1988 14 discriminator 1 view .LVU797
 2489 025c C2F38462 		ubfx	r2, r2, #26, #5
 2490              	.L170:
1987:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           == __LL_ADC_CHANNEL_TO_DECIMAL_NB(sConfigInjected->InjectedChannel))
 2491              		.loc 1 1987 10 view .LVU798
 2492 0260 9442     		cmp	r4, r2
 2493 0262 34D1     		bne	.L148
1989:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
1990:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetOffsetState(hadc->Instance, LL_ADC_OFFSET_4, LL_ADC_OFFSET_DISABLE);
 2494              		.loc 1 1990 9 is_stmt 1 view .LVU799
 2495              	.LVL210:
 2496              	.LBB402:
 2497              	.LBI402:
3067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2498              		.loc 2 3067 22 view .LVU800
 2499              	.LBB403:
3069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2500              		.loc 2 3069 3 view .LVU801
3071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 196


 2501              		.loc 2 3071 3 view .LVU802
 2502 0264 EA6E     		ldr	r2, [r5, #108]
 2503 0266 22F00042 		bic	r2, r2, #-2147483648
 2504 026a EA66     		str	r2, [r5, #108]
3074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2505              		.loc 2 3074 1 is_stmt 0 view .LVU803
 2506 026c 2FE0     		b	.L148
 2507              	.LVL211:
 2508              	.L157:
3074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2509              		.loc 2 3074 1 view .LVU804
 2510              	.LBE403:
 2511              	.LBE402:
 2512              	.LBB404:
 2513              	.LBI404:
 2514              		.file 3 "../03_Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 197


  42:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 198


  99:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 199


 156:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 211:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 212:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 200


 213:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 214:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 215:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 217:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 218:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 220:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 221:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 222:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 224:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 225:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 226:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 232:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 241:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 245:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 252:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 253:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 254:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 256:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 260:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 262:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 264:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 265:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 268:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 269:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 201


 270:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 271:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 272:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 274:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 275:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 276:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 278:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 279:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 281:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 282:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 283:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 285:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 286:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 288:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 289:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 290:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 292:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 296:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 297:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 299:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 300:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 302:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 303:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 306:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 307:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 308:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 313:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 317:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 318:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 320:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 321:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 322:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 323:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 325:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 202


 327:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 328:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 329:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 331:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 332:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 335:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 336:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 337:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 344:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 346:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 348:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 360:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 361:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 362:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 363:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 364:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 367:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 368:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 370:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 371:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 372:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 374:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 375:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 379:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 382:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 203


 384:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 386:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 387:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 389:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 390:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 391:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 392:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 393:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 394:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 398:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 400:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 402:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 403:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 404:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 406:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 410:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 412:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 414:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 415:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 416:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 419:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 422:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 423:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 425:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 426:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 427:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 429:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 430:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 433:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 437:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 439:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 204


 441:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 442:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 446:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 448:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 449:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 451:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 452:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 453:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 454:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 455:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 456:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 460:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 463:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 464:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 466:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 467:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 468:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 469:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 470:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 471:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 472:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 474:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 475:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 476:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 479:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 481:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 496:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 205


 498:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 502:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 503:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 506:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 508:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 510:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 511:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 512:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 513:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 514:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 519:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 521:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 523:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 524:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 525:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 527:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 528:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 530:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 531:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 532:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 534:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 535:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 537:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 539:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 542:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 543:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 545:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 546:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 547:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 549:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 551:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 553:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 554:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 206


 555:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 558:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 560:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 562:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 564:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 566:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 570:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 572:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 574:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 575:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 576:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 577:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 578:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 583:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 585:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 587:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 588:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 589:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 590:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 591:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 593:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 594:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 596:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 597:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 598:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 600:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 601:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 603:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 605:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 608:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 609:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 611:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 207


 612:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 613:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 615:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 616:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 617:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 618:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 619:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 620:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 621:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 624:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 626:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 628:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 629:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 630:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 632:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 636:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 638:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 640:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 641:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 642:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 647:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 650:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 655:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 656:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 658:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 659:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 661:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 665:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 666:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 667:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 208


 669:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 670:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 678:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 680:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 681:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 683:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 686:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 687:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 688:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 690:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 691:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 692:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 693:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 694:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 695:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 696:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 700:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   
 701:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 704:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 706:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 711:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 713:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 714:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 718:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 209


 726:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 731:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 733:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 734:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 735:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 738:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 742:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 745:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 752:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 753:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 754:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 756:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 757:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 758:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 759:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 768:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 769:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 771:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 774:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 775:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 776:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 778:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 779:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 780:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 782:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 210


 783:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 784:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 788:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 789:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 799:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 801:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 802:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 803:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 804:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 806:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 813:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 815:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 819:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 821:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 822:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 823:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 827:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 828:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 829:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 830:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 833:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 835:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 211


 840:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 843:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 844:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 847:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 848:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 849:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 850:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 851:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 852:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 854:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 855:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 856:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 859:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 861:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 869:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 871:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 872:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 873:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 874:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 875:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 876:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 879:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 880:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 883:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 884:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** */
 885:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 886:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 894:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 212


 897:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 898:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 901:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 903:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 905:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 906:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 909:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 910:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 913:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 914:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 917:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 918:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 919:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 920:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 921:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 922:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 926:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 928:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 932:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 933:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 935:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 937:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 939:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 940:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 944:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 946:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 947:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 948:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 949:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 950:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 951:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 213


 954:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 955:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 957:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 958:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 959:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 960:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 961:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 962:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 963:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 964:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 965:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 966:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 967:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 968:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 969:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 970:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 971:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 972:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 973:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 975:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 976:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 977:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 978:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 979:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 980:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 981:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 982:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 983:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 984:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 985:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 986:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 987:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 988:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 989:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 990:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 991:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 992:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 993:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 994:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 995:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 996:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 997:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 998:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 999:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1000:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1001:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
1002:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
1003:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1004:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
1005:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1006:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
1007:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1008:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
1009:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1010:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 214


1011:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
1012:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1015:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
1016:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
1017:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
1018:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
1019:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
1020:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1021:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
1022:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
1023:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
1024:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
1025:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1026:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
1027:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1028:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
1029:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
1030:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1031:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1032:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1033:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
1034:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
1035:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
1036:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
1037:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
1038:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1039:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
1040:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1041:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1042:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1043:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
1044:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
1045:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
1046:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
1047:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2515              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU805
 2516              	.LBB405:
1049:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2517              		.loc 3 1050 3 discriminator 2 view .LVU806
1051:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1052:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1053:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1054:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2518              		.loc 3 1055 4 discriminator 2 view .LVU807
 2519              		.syntax unified
 2520              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2521 026e 92FAA2F2 		rbit r2, r2
 2522              	@ 0 "" 2
 2523              	.LVL212:
1056:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1057:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
1058:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 215


1059:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
1060:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
1061:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1062:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
1063:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
1064:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
1065:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1066:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1067:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2524              		.loc 3 1068 3 discriminator 2 view .LVU808
 2525              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU809
 2526              		.thumb
 2527              		.syntax unified
 2528              	.LBE405:
 2529              	.LBE404:
 2530              	.LBB406:
 2531              	.LBI406:
1069:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
1070:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1071:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1073:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1074:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1075:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1076:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1077:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 2532              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU810
 2533              	.LBB407:
1079:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
1080:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
1081:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
1082:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
1083:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
1084:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
1085:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
1086:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
1087:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
1088:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****    */
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 2534              		.loc 3 1089 3 discriminator 2 view .LVU811
 2535              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU812
 2536 0272 12B1     		cbz	r2, .L205
1090:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
1092:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
1093:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 2537              		.loc 3 1093 3 is_stmt 1 view .LVU813
 2538              		.loc 3 1093 10 is_stmt 0 view .LVU814
 2539 0274 B2FA82F2 		clz	r2, r2
 2540              	.LVL213:
 2541              		.loc 3 1093 10 view .LVU815
 2542 0278 CBE7     		b	.L158
 2543              	.LVL214:
 2544              	.L205:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 216


 2545              		.loc 3 1091 12 view .LVU816
 2546 027a 2022     		movs	r2, #32
 2547              	.LVL215:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2548              		.loc 3 1091 12 view .LVU817
 2549 027c C9E7     		b	.L158
 2550              	.L221:
 2551              	.LBE407:
 2552              	.LBE406:
1975:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2553              		.loc 1 1975 9 is_stmt 1 view .LVU818
 2554              	.LVL216:
 2555              	.LBB408:
 2556              	.LBI408:
3067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2557              		.loc 2 3067 22 view .LVU819
 2558              	.LBB409:
3069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2559              		.loc 2 3069 3 view .LVU820
3071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2560              		.loc 2 3071 3 view .LVU821
 2561 027e 226E     		ldr	r2, [r4, #96]
 2562 0280 22F00042 		bic	r2, r2, #-2147483648
 2563 0284 2266     		str	r2, [r4, #96]
3074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2564              		.loc 2 3074 1 is_stmt 0 view .LVU822
 2565 0286 C6E7     		b	.L160
 2566              	.LVL217:
 2567              	.L161:
3074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2568              		.loc 2 3074 1 view .LVU823
 2569              	.LBE409:
 2570              	.LBE408:
 2571              	.LBB410:
 2572              	.LBI410:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2573              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU824
 2574              	.LBB411:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2575              		.loc 3 1050 3 discriminator 2 view .LVU825
1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2576              		.loc 3 1055 4 discriminator 2 view .LVU826
 2577              		.syntax unified
 2578              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2579 0288 92FAA2F2 		rbit r2, r2
 2580              	@ 0 "" 2
 2581              	.LVL218:
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2582              		.loc 3 1068 3 discriminator 2 view .LVU827
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2583              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU828
 2584              		.thumb
 2585              		.syntax unified
 2586              	.LBE411:
 2587              	.LBE410:
 2588              	.LBB412:
 2589              	.LBI412:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 217


1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2590              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU829
 2591              	.LBB413:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2592              		.loc 3 1089 3 discriminator 2 view .LVU830
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2593              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU831
 2594 028c 12B1     		cbz	r2, .L206
 2595              		.loc 3 1093 3 is_stmt 1 view .LVU832
 2596              		.loc 3 1093 10 is_stmt 0 view .LVU833
 2597 028e B2FA82F2 		clz	r2, r2
 2598              	.LVL219:
 2599              		.loc 3 1093 10 view .LVU834
 2600 0292 CBE7     		b	.L162
 2601              	.LVL220:
 2602              	.L206:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2603              		.loc 3 1091 12 view .LVU835
 2604 0294 2022     		movs	r2, #32
 2605              	.LVL221:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2606              		.loc 3 1091 12 view .LVU836
 2607 0296 C9E7     		b	.L162
 2608              	.L222:
 2609              	.LBE413:
 2610              	.LBE412:
1980:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2611              		.loc 1 1980 9 is_stmt 1 view .LVU837
 2612              	.LVL222:
 2613              	.LBB414:
 2614              	.LBI414:
3067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2615              		.loc 2 3067 22 view .LVU838
 2616              	.LBB415:
3069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2617              		.loc 2 3069 3 view .LVU839
3071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2618              		.loc 2 3071 3 view .LVU840
 2619 0298 6A6E     		ldr	r2, [r5, #100]
 2620 029a 22F00042 		bic	r2, r2, #-2147483648
 2621 029e 6A66     		str	r2, [r5, #100]
3074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2622              		.loc 2 3074 1 is_stmt 0 view .LVU841
 2623 02a0 C6E7     		b	.L164
 2624              	.LVL223:
 2625              	.L165:
3074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2626              		.loc 2 3074 1 view .LVU842
 2627              	.LBE415:
 2628              	.LBE414:
 2629              	.LBB416:
 2630              	.LBI416:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2631              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU843
 2632              	.LBB417:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2633              		.loc 3 1050 3 discriminator 2 view .LVU844
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 218


1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2634              		.loc 3 1055 4 discriminator 2 view .LVU845
 2635              		.syntax unified
 2636              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2637 02a2 92FAA2F2 		rbit r2, r2
 2638              	@ 0 "" 2
 2639              	.LVL224:
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2640              		.loc 3 1068 3 discriminator 2 view .LVU846
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2641              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU847
 2642              		.thumb
 2643              		.syntax unified
 2644              	.LBE417:
 2645              	.LBE416:
 2646              	.LBB418:
 2647              	.LBI418:
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2648              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU848
 2649              	.LBB419:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2650              		.loc 3 1089 3 discriminator 2 view .LVU849
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2651              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU850
 2652 02a6 12B1     		cbz	r2, .L207
 2653              		.loc 3 1093 3 is_stmt 1 view .LVU851
 2654              		.loc 3 1093 10 is_stmt 0 view .LVU852
 2655 02a8 B2FA82F2 		clz	r2, r2
 2656              	.LVL225:
 2657              		.loc 3 1093 10 view .LVU853
 2658 02ac CBE7     		b	.L166
 2659              	.LVL226:
 2660              	.L207:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2661              		.loc 3 1091 12 view .LVU854
 2662 02ae 2022     		movs	r2, #32
 2663              	.LVL227:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2664              		.loc 3 1091 12 view .LVU855
 2665 02b0 C9E7     		b	.L166
 2666              	.L223:
 2667              	.LBE419:
 2668              	.LBE418:
1985:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
 2669              		.loc 1 1985 9 is_stmt 1 view .LVU856
 2670              	.LVL228:
 2671              	.LBB420:
 2672              	.LBI420:
3067:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2673              		.loc 2 3067 22 view .LVU857
 2674              	.LBB421:
3069:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2675              		.loc 2 3069 3 view .LVU858
3071:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_OFR1_OFFSET1_EN,
 2676              		.loc 2 3071 3 view .LVU859
 2677 02b2 AA6E     		ldr	r2, [r5, #104]
 2678 02b4 22F00042 		bic	r2, r2, #-2147483648
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 219


 2679 02b8 AA66     		str	r2, [r5, #104]
3074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2680              		.loc 2 3074 1 is_stmt 0 view .LVU860
 2681 02ba C6E7     		b	.L168
 2682              	.LVL229:
 2683              	.L169:
3074:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2684              		.loc 2 3074 1 view .LVU861
 2685              	.LBE421:
 2686              	.LBE420:
 2687              	.LBB422:
 2688              	.LBI422:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2689              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU862
 2690              	.LBB423:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2691              		.loc 3 1050 3 discriminator 2 view .LVU863
1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2692              		.loc 3 1055 4 discriminator 2 view .LVU864
 2693              		.syntax unified
 2694              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2695 02bc 92FAA2F2 		rbit r2, r2
 2696              	@ 0 "" 2
 2697              	.LVL230:
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2698              		.loc 3 1068 3 discriminator 2 view .LVU865
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2699              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU866
 2700              		.thumb
 2701              		.syntax unified
 2702              	.LBE423:
 2703              	.LBE422:
 2704              	.LBB424:
 2705              	.LBI424:
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2706              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU867
 2707              	.LBB425:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2708              		.loc 3 1089 3 discriminator 2 view .LVU868
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2709              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU869
 2710 02c0 12B1     		cbz	r2, .L208
 2711              		.loc 3 1093 3 is_stmt 1 view .LVU870
 2712              		.loc 3 1093 10 is_stmt 0 view .LVU871
 2713 02c2 B2FA82F2 		clz	r2, r2
 2714              	.LVL231:
 2715              		.loc 3 1093 10 view .LVU872
 2716 02c6 CBE7     		b	.L170
 2717              	.LVL232:
 2718              	.L208:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2719              		.loc 3 1091 12 view .LVU873
 2720 02c8 2022     		movs	r2, #32
 2721              	.LVL233:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2722              		.loc 3 1091 12 view .LVU874
 2723 02ca C9E7     		b	.L170
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 220


 2724              	.LVL234:
 2725              	.L203:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 2726              		.loc 3 1091 12 view .LVU875
 2727              	.LBE425:
 2728              	.LBE424:
1653:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2729              		.loc 1 1653 21 view .LVU876
 2730 02cc 0020     		movs	r0, #0
 2731              	.LVL235:
 2732              	.L148:
1991:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
1992:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
1993:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1994:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
1995:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
1996:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
1997:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated only when ADC is disabled:                */
1998:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Single or differential mode                                           */
1999:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 2733              		.loc 1 1999 3 is_stmt 1 view .LVU877
 2734              		.loc 1 1999 7 is_stmt 0 view .LVU878
 2735 02ce 1D68     		ldr	r5, [r3]
 2736              	.LVL236:
 2737              	.LBB426:
 2738              	.LBI426:
6048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2739              		.loc 2 6048 26 is_stmt 1 view .LVU879
 2740              	.LBB427:
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2741              		.loc 2 6050 3 view .LVU880
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2742              		.loc 2 6050 12 is_stmt 0 view .LVU881
 2743 02d0 AA68     		ldr	r2, [r5, #8]
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2744              		.loc 2 6050 68 view .LVU882
 2745 02d2 12F0010F 		tst	r2, #1
 2746 02d6 17D1     		bne	.L172
 2747              	.LVL237:
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2748              		.loc 2 6050 68 view .LVU883
 2749              	.LBE427:
 2750              	.LBE426:
2000:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2001:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Set mode single-ended or differential input of the selected ADC channel */
2002:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_SetChannelSingleDiff(hadc->Instance, sConfigInjected->InjectedChannel, sConfigInjected->
 2751              		.loc 1 2002 5 is_stmt 1 view .LVU884
 2752 02d8 0A68     		ldr	r2, [r1]
 2753 02da CE68     		ldr	r6, [r1, #12]
 2754              	.LVL238:
 2755              	.LBB428:
 2756              	.LBI428:
4870:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2757              		.loc 2 4870 22 view .LVU885
 2758              	.LBB429:
4875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2759              		.loc 2 4875 3 view .LVU886
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 221


 2760 02dc D5F8B040 		ldr	r4, [r5, #176]
 2761 02e0 C2F31207 		ubfx	r7, r2, #0, #19
 2762 02e4 24EA0704 		bic	r4, r4, r7
 2763 02e8 06F0180C 		and	ip, r6, #24
 2764 02ec 354E     		ldr	r6, .L228+4
 2765              	.LVL239:
4875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2766              		.loc 2 4875 3 is_stmt 0 view .LVU887
 2767 02ee 26FA0CFC 		lsr	ip, r6, ip
 2768 02f2 02EA0C02 		and	r2, r2, ip
 2769              	.LVL240:
4875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2770              		.loc 2 4875 3 view .LVU888
 2771 02f6 C2F31202 		ubfx	r2, r2, #0, #19
 2772 02fa 2243     		orrs	r2, r2, r4
 2773 02fc C5F8B020 		str	r2, [r5, #176]
 2774              	.LVL241:
4875:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              Channel & ADC_SINGLEDIFF_CHANNEL_MASK,
 2775              		.loc 2 4875 3 view .LVU889
 2776              	.LBE429:
 2777              	.LBE428:
2003:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2004:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Configuration of differential mode */
2005:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Note: ADC channel number masked with value "0x1F" to ensure shift value within 32 bits range
2006:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (sConfigInjected->InjectedSingleDiff == ADC_DIFFERENTIAL_ENDED)
 2778              		.loc 1 2006 5 is_stmt 1 view .LVU890
 2779              		.loc 1 2006 24 is_stmt 0 view .LVU891
 2780 0300 CC68     		ldr	r4, [r1, #12]
 2781              		.loc 1 2006 8 view .LVU892
 2782 0302 314A     		ldr	r2, .L228+8
 2783 0304 9442     		cmp	r4, r2
 2784 0306 1BD0     		beq	.L224
 2785              	.L172:
2007:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2008:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Set sampling time of the selected ADC channel */
2009:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       LL_ADC_SetChannelSamplingTime(hadc->Instance,
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
2011:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
2012:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2013:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2014:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2015:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2016:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Management of internal measurement channels: Vbat/VrefInt/TempSensor   */
2017:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* internal measurement paths enable: If internal channel selected,       */
2018:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* enable dedicated internal buffers and path.                            */
2019:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Note: these internal measurement paths can be disabled using           */
2020:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* HAL_ADC_DeInit().                                                      */
2021:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2022:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (__LL_ADC_IS_CHANNEL_INTERNAL(sConfigInjected->InjectedChannel))
 2786              		.loc 1 2022 3 is_stmt 1 view .LVU893
 2787              		.loc 1 2022 7 is_stmt 0 view .LVU894
 2788 0308 0A68     		ldr	r2, [r1]
 2789              		.loc 1 2022 6 view .LVU895
 2790 030a 3049     		ldr	r1, .L228+12
 2791              	.LVL242:
 2792              		.loc 1 2022 6 view .LVU896
 2793 030c 0A42     		tst	r2, r1
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 222


 2794 030e 0FD0     		beq	.L196
2023:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2024:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_config_internal_channel = LL_ADC_GetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Ins
 2795              		.loc 1 2024 5 is_stmt 1 view .LVU897
 2796              	.LVL243:
 2797              	.LBB430:
 2798              	.LBI430:
2590:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2799              		.loc 2 2590 26 view .LVU898
 2800              	.LBB431:
2592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2801              		.loc 2 2592 3 view .LVU899
2592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2802              		.loc 2 2592 21 is_stmt 0 view .LVU900
 2803 0310 2F49     		ldr	r1, .L228+16
 2804 0312 8968     		ldr	r1, [r1, #8]
2592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2805              		.loc 2 2592 10 view .LVU901
 2806 0314 01F0E075 		and	r5, r1, #29360128
 2807              	.LVL244:
2592:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 2808              		.loc 2 2592 10 view .LVU902
 2809              	.LBE431:
 2810              	.LBE430:
2025:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2026:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If the requested internal measurement path has already been enabled,   */
2027:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* bypass the configuration processing.                                   */
2028:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_TEMPSENSOR)
 2811              		.loc 1 2028 5 is_stmt 1 view .LVU903
 2812              		.loc 1 2028 8 is_stmt 0 view .LVU904
 2813 0318 2E4C     		ldr	r4, .L228+20
 2814 031a A242     		cmp	r2, r4
 2815 031c 00F0E080 		beq	.L225
 2816              	.L197:
2029:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_TEMPSENSOR) == 0UL))
2030:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2031:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (ADC_TEMPERATURE_SENSOR_INSTANCE(hadc))
2032:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2033:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2034:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channe
2035:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2036:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Delay for temperature sensor stabilization time */
2037:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Wait loop initialization and execution */
2038:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /* Note: Variable divided by 2 to compensate partially              */
2039:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /*       CPU processing cycles, scaling in us split to not          */
2040:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         /*       exceed 32 bits register capacity and handle low frequency. */
2041:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         wait_loop_index = ((LL_ADC_DELAY_TEMPSENSOR_STAB_US / 10UL) * (((SystemCoreClock / (100000U
2042:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
2043:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
2044:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****           wait_loop_index--;
2045:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
2046:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2047:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2048:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VBAT)
 2817              		.loc 1 2048 10 is_stmt 1 view .LVU905
 2818              		.loc 1 2048 13 is_stmt 0 view .LVU906
 2819 0320 2D4C     		ldr	r4, .L228+24
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 223


 2820 0322 A242     		cmp	r2, r4
 2821 0324 00F00181 		beq	.L226
 2822              	.L200:
2049:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VBAT) == 0UL))
2050:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2051:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (ADC_BATTERY_VOLTAGE_INSTANCE(hadc))
2052:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2053:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2054:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
2055:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2056:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2057:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else if ((sConfigInjected->InjectedChannel == ADC_CHANNEL_VREFINT)
 2823              		.loc 1 2057 10 is_stmt 1 view .LVU907
 2824              		.loc 1 2057 13 is_stmt 0 view .LVU908
 2825 0328 2C4C     		ldr	r4, .L228+28
 2826 032a A242     		cmp	r2, r4
 2827 032c 00F00F81 		beq	.L227
 2828              	.LVL245:
 2829              	.L196:
2058:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****              && ((tmp_config_internal_channel & LL_ADC_PATH_INTERNAL_VREFINT) == 0UL))
2059:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2060:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (ADC_VREFINT_INSTANCE(hadc))
2061:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2062:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         LL_ADC_SetCommonPathInternalCh(__LL_ADC_COMMON_INSTANCE(hadc->Instance),
2063:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
2064:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2065:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2066:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else
2067:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2068:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* nothing to do */
2069:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
 2830              		.loc 1 2069 5 is_stmt 1 view .LVU909
2070:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2071:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2072:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
2073:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
 2831              		.loc 1 2073 3 view .LVU910
 2832              		.loc 1 2073 3 view .LVU911
 2833 0330 0022     		movs	r2, #0
 2834 0332 83F85020 		strb	r2, [r3, #80]
 2835              		.loc 1 2073 3 view .LVU912
2074:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2075:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
2076:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 2836              		.loc 1 2076 3 view .LVU913
 2837              	.LVL246:
 2838              	.L136:
2077:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 2839              		.loc 1 2077 1 is_stmt 0 view .LVU914
 2840 0336 02B0     		add	sp, sp, #8
 2841              	.LCFI26:
 2842              		.cfi_remember_state
 2843              		.cfi_def_cfa_offset 16
 2844              		@ sp needed
 2845 0338 F0BC     		pop	{r4, r5, r6, r7}
 2846              	.LCFI27:
 2847              		.cfi_restore 7
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 224


 2848              		.cfi_restore 6
 2849              		.cfi_restore 5
 2850              		.cfi_restore 4
 2851              		.cfi_def_cfa_offset 0
 2852 033a 7047     		bx	lr
 2853              	.LVL247:
 2854              	.L204:
 2855              	.LCFI28:
 2856              		.cfi_restore_state
1653:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2857              		.loc 1 1653 21 view .LVU915
 2858 033c 0020     		movs	r0, #0
 2859              	.LVL248:
1653:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmpOffsetShifted;
 2860              		.loc 1 1653 21 view .LVU916
 2861 033e C6E7     		b	.L148
 2862              	.LVL249:
 2863              	.L224:
2009:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 2864              		.loc 1 2009 7 is_stmt 1 view .LVU917
 2865 0340 1D68     		ldr	r5, [r3]
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 2866              		.loc 1 2010 48 is_stmt 0 view .LVU918
 2867 0342 0A68     		ldr	r2, [r1]
 2868 0344 C2F31206 		ubfx	r6, r2, #0, #19
 2869 0348 002E     		cmp	r6, #0
 2870 034a 49D1     		bne	.L173
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 2871              		.loc 1 2010 48 discriminator 1 view .LVU919
 2872 034c 940E     		lsrs	r4, r2, #26
 2873 034e 0134     		adds	r4, r4, #1
 2874 0350 04F01F04 		and	r4, r4, #31
 2875 0354 092C     		cmp	r4, #9
 2876 0356 8CBF     		ite	hi
 2877 0358 0024     		movhi	r4, #0
 2878 035a 0124     		movls	r4, #1
 2879              	.L174:
2009:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 2880              		.loc 1 2009 7 view .LVU920
 2881 035c 002C     		cmp	r4, #0
 2882 035e 77D0     		beq	.L176
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 2883              		.loc 1 2010 48 view .LVU921
 2884 0360 002E     		cmp	r6, #0
 2885 0362 4CD1     		bne	.L177
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 2886              		.loc 1 2010 48 discriminator 3 view .LVU922
 2887 0364 940E     		lsrs	r4, r2, #26
 2888 0366 0134     		adds	r4, r4, #1
 2889 0368 A406     		lsls	r4, r4, #26
 2890 036a 04F0F844 		and	r4, r4, #2080374784
 2891              	.L178:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 2892              		.loc 1 2010 48 discriminator 6 view .LVU923
 2893 036e 002E     		cmp	r6, #0
 2894 0370 51D1     		bne	.L180
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 225


 2895              		.loc 1 2010 48 discriminator 7 view .LVU924
 2896 0372 970E     		lsrs	r7, r2, #26
 2897 0374 0137     		adds	r7, r7, #1
 2898 0376 07F01F0C 		and	ip, r7, #31
 2899 037a 0127     		movs	r7, #1
 2900 037c 07FA0CF7 		lsl	r7, r7, ip
 2901              	.L181:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 2902              		.loc 1 2010 48 discriminator 10 view .LVU925
 2903 0380 3C43     		orrs	r4, r4, r7
 2904 0382 002E     		cmp	r6, #0
 2905 0384 56D1     		bne	.L183
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 2906              		.loc 1 2010 48 discriminator 11 view .LVU926
 2907 0386 920E     		lsrs	r2, r2, #26
 2908 0388 0132     		adds	r2, r2, #1
 2909 038a 02F01F02 		and	r2, r2, #31
 2910 038e 02EB4202 		add	r2, r2, r2, lsl #1
 2911 0392 1205     		lsls	r2, r2, #20
 2912              	.L184:
2009:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 2913              		.loc 1 2009 7 view .LVU927
 2914 0394 2243     		orrs	r2, r2, r4
 2915              	.L186:
2009:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 2916              		.loc 1 2009 7 discriminator 1 view .LVU928
 2917 0396 8C68     		ldr	r4, [r1, #8]
 2918              	.LVL250:
 2919              	.LBB432:
 2920              	.LBI432:
4716:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 2921              		.loc 2 4716 22 is_stmt 1 discriminator 1 view .LVU929
 2922              	.LBB433:
4722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2923              		.loc 2 4722 3 discriminator 1 view .LVU930
4722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2924              		.loc 2 4722 25 is_stmt 0 discriminator 1 view .LVU931
 2925 0398 1435     		adds	r5, r5, #20
 2926              	.LVL251:
4722:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2927              		.loc 2 4722 25 discriminator 1 view .LVU932
 2928 039a 560E     		lsrs	r6, r2, #25
 2929 039c B600     		lsls	r6, r6, #2
 2930 039e 06F00406 		and	r6, r6, #4
 2931              	.LVL252:
4724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2932              		.loc 2 4724 3 is_stmt 1 discriminator 1 view .LVU933
 2933 03a2 AF59     		ldr	r7, [r5, r6]
 2934 03a4 C2F30452 		ubfx	r2, r2, #20, #5
 2935              	.LVL253:
4724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2936              		.loc 2 4724 3 is_stmt 0 discriminator 1 view .LVU934
 2937 03a8 4FF0070C 		mov	ip, #7
 2938 03ac 0CFA02FC 		lsl	ip, ip, r2
 2939 03b0 27EA0C0C 		bic	ip, r7, ip
 2940 03b4 9440     		lsls	r4, r4, r2
 2941              	.LVL254:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 226


4724:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_SMPR1_SMP0 << ((Channel & ADC_CHANNEL_SMPx_BITOFFSET_MASK) >> ADC_CHANNEL_SMPx_BIT
 2942              		.loc 2 4724 3 discriminator 1 view .LVU935
 2943 03b6 4CEA0404 		orr	r4, ip, r4
 2944 03ba AC51     		str	r4, [r5, r6]
 2945              	.LVL255:
4727:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2946              		.loc 2 4727 1 discriminator 1 view .LVU936
 2947 03bc A4E7     		b	.L172
 2948              	.L229:
 2949 03be 00BF     		.align	2
 2950              	.L228:
 2951 03c0 00F0FF03 		.word	67104768
 2952 03c4 FFFF0700 		.word	524287
 2953 03c8 00007F40 		.word	1082064896
 2954 03cc 00000880 		.word	-2146959360
 2955 03d0 00030450 		.word	1342440192
 2956 03d4 000052C7 		.word	-950927360
 2957 03d8 000084CB 		.word	-880541696
 2958 03dc 01000080 		.word	-2147483647
 2959              	.LVL256:
 2960              	.L173:
4727:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 2961              		.loc 2 4727 1 discriminator 1 view .LVU937
 2962              	.LBE433:
 2963              	.LBE432:
 2964              	.LBB434:
 2965              	.LBI434:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2966              		.loc 3 1048 31 is_stmt 1 discriminator 2 view .LVU938
 2967              	.LBB435:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 2968              		.loc 3 1050 3 discriminator 2 view .LVU939
1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 2969              		.loc 3 1055 4 discriminator 2 view .LVU940
 2970              		.syntax unified
 2971              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2972 03e0 92FAA2F4 		rbit r4, r2
 2973              	@ 0 "" 2
 2974              	.LVL257:
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2975              		.loc 3 1068 3 discriminator 2 view .LVU941
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2976              		.loc 3 1068 3 is_stmt 0 discriminator 2 view .LVU942
 2977              		.thumb
 2978              		.syntax unified
 2979              	.LBE435:
 2980              	.LBE434:
 2981              	.LBB436:
 2982              	.LBI436:
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 2983              		.loc 3 1078 30 is_stmt 1 discriminator 2 view .LVU943
 2984              	.LBB437:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2985              		.loc 3 1089 3 discriminator 2 view .LVU944
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 2986              		.loc 3 1089 6 is_stmt 0 discriminator 2 view .LVU945
 2987 03e4 4CB1     		cbz	r4, .L209
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 227


 2988              		.loc 3 1093 3 is_stmt 1 view .LVU946
 2989              		.loc 3 1093 10 is_stmt 0 view .LVU947
 2990 03e6 B4FA84F4 		clz	r4, r4
 2991              	.LVL258:
 2992              	.L175:
 2993              		.loc 3 1093 10 view .LVU948
 2994              	.LBE437:
 2995              	.LBE436:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 2996              		.loc 1 2010 48 view .LVU949
 2997 03ea 0134     		adds	r4, r4, #1
 2998 03ec 04F01F04 		and	r4, r4, #31
 2999 03f0 092C     		cmp	r4, #9
 3000 03f2 8CBF     		ite	hi
 3001 03f4 0024     		movhi	r4, #0
 3002 03f6 0124     		movls	r4, #1
 3003 03f8 B0E7     		b	.L174
 3004              	.LVL259:
 3005              	.L209:
 3006              	.LBB439:
 3007              	.LBB438:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3008              		.loc 3 1091 12 view .LVU950
 3009 03fa 2024     		movs	r4, #32
 3010              	.LVL260:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3011              		.loc 3 1091 12 view .LVU951
 3012 03fc F5E7     		b	.L175
 3013              	.L177:
 3014              	.LVL261:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3015              		.loc 3 1091 12 view .LVU952
 3016              	.LBE438:
 3017              	.LBE439:
 3018              	.LBB440:
 3019              	.LBI440:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3020              		.loc 3 1048 31 is_stmt 1 discriminator 4 view .LVU953
 3021              	.LBB441:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3022              		.loc 3 1050 3 discriminator 4 view .LVU954
1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3023              		.loc 3 1055 4 discriminator 4 view .LVU955
 3024              		.syntax unified
 3025              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3026 03fe 92FAA2F4 		rbit r4, r2
 3027              	@ 0 "" 2
 3028              	.LVL262:
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3029              		.loc 3 1068 3 discriminator 4 view .LVU956
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3030              		.loc 3 1068 3 is_stmt 0 discriminator 4 view .LVU957
 3031              		.thumb
 3032              		.syntax unified
 3033              	.LBE441:
 3034              	.LBE440:
 3035              	.LBB442:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 228


 3036              	.LBI442:
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3037              		.loc 3 1078 30 is_stmt 1 discriminator 4 view .LVU958
 3038              	.LBB443:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3039              		.loc 3 1089 3 discriminator 4 view .LVU959
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3040              		.loc 3 1089 6 is_stmt 0 discriminator 4 view .LVU960
 3041 0402 34B1     		cbz	r4, .L210
 3042              		.loc 3 1093 3 is_stmt 1 view .LVU961
 3043              		.loc 3 1093 10 is_stmt 0 view .LVU962
 3044 0404 B4FA84F4 		clz	r4, r4
 3045              	.LVL263:
 3046              	.L179:
 3047              		.loc 3 1093 10 view .LVU963
 3048              	.LBE443:
 3049              	.LBE442:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3050              		.loc 1 2010 48 view .LVU964
 3051 0408 0134     		adds	r4, r4, #1
 3052 040a A406     		lsls	r4, r4, #26
 3053 040c 04F0F844 		and	r4, r4, #2080374784
 3054 0410 ADE7     		b	.L178
 3055              	.LVL264:
 3056              	.L210:
 3057              	.LBB445:
 3058              	.LBB444:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3059              		.loc 3 1091 12 view .LVU965
 3060 0412 2024     		movs	r4, #32
 3061              	.LVL265:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3062              		.loc 3 1091 12 view .LVU966
 3063 0414 F8E7     		b	.L179
 3064              	.L180:
 3065              	.LVL266:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3066              		.loc 3 1091 12 view .LVU967
 3067              	.LBE444:
 3068              	.LBE445:
 3069              	.LBB446:
 3070              	.LBI446:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3071              		.loc 3 1048 31 is_stmt 1 discriminator 8 view .LVU968
 3072              	.LBB447:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3073              		.loc 3 1050 3 discriminator 8 view .LVU969
1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3074              		.loc 3 1055 4 discriminator 8 view .LVU970
 3075              		.syntax unified
 3076              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3077 0416 92FAA2F7 		rbit r7, r2
 3078              	@ 0 "" 2
 3079              	.LVL267:
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3080              		.loc 3 1068 3 discriminator 8 view .LVU971
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 229


 3081              		.loc 3 1068 3 is_stmt 0 discriminator 8 view .LVU972
 3082              		.thumb
 3083              		.syntax unified
 3084              	.LBE447:
 3085              	.LBE446:
 3086              	.LBB448:
 3087              	.LBI448:
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3088              		.loc 3 1078 30 is_stmt 1 discriminator 8 view .LVU973
 3089              	.LBB449:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3090              		.loc 3 1089 3 discriminator 8 view .LVU974
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3091              		.loc 3 1089 6 is_stmt 0 discriminator 8 view .LVU975
 3092 041a 4FB1     		cbz	r7, .L211
 3093              		.loc 3 1093 3 is_stmt 1 view .LVU976
 3094              		.loc 3 1093 10 is_stmt 0 view .LVU977
 3095 041c B7FA87F7 		clz	r7, r7
 3096              	.LVL268:
 3097              	.L182:
 3098              		.loc 3 1093 10 view .LVU978
 3099              	.LBE449:
 3100              	.LBE448:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3101              		.loc 1 2010 48 view .LVU979
 3102 0420 0137     		adds	r7, r7, #1
 3103 0422 07F01F07 		and	r7, r7, #31
 3104 0426 4FF0010C 		mov	ip, #1
 3105 042a 0CFA07F7 		lsl	r7, ip, r7
 3106 042e A7E7     		b	.L181
 3107              	.LVL269:
 3108              	.L211:
 3109              	.LBB451:
 3110              	.LBB450:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3111              		.loc 3 1091 12 view .LVU980
 3112 0430 2027     		movs	r7, #32
 3113              	.LVL270:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3114              		.loc 3 1091 12 view .LVU981
 3115 0432 F5E7     		b	.L182
 3116              	.L183:
 3117              	.LVL271:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3118              		.loc 3 1091 12 view .LVU982
 3119              	.LBE450:
 3120              	.LBE451:
 3121              	.LBB452:
 3122              	.LBI452:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3123              		.loc 3 1048 31 is_stmt 1 discriminator 12 view .LVU983
 3124              	.LBB453:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3125              		.loc 3 1050 3 discriminator 12 view .LVU984
1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3126              		.loc 3 1055 4 discriminator 12 view .LVU985
 3127              		.syntax unified
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 230


 3128              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3129 0434 92FAA2F2 		rbit r2, r2
 3130              	@ 0 "" 2
 3131              	.LVL272:
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3132              		.loc 3 1068 3 discriminator 12 view .LVU986
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3133              		.loc 3 1068 3 is_stmt 0 discriminator 12 view .LVU987
 3134              		.thumb
 3135              		.syntax unified
 3136              	.LBE453:
 3137              	.LBE452:
 3138              	.LBB454:
 3139              	.LBI454:
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3140              		.loc 3 1078 30 is_stmt 1 discriminator 12 view .LVU988
 3141              	.LBB455:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3142              		.loc 3 1089 3 discriminator 12 view .LVU989
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3143              		.loc 3 1089 6 is_stmt 0 discriminator 12 view .LVU990
 3144 0438 42B1     		cbz	r2, .L212
 3145              		.loc 3 1093 3 is_stmt 1 view .LVU991
 3146              		.loc 3 1093 10 is_stmt 0 view .LVU992
 3147 043a B2FA82F2 		clz	r2, r2
 3148              	.LVL273:
 3149              	.L185:
 3150              		.loc 3 1093 10 view .LVU993
 3151              	.LBE455:
 3152              	.LBE454:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3153              		.loc 1 2010 48 view .LVU994
 3154 043e 0132     		adds	r2, r2, #1
 3155 0440 02F01F02 		and	r2, r2, #31
 3156 0444 02EB4202 		add	r2, r2, r2, lsl #1
 3157 0448 1205     		lsls	r2, r2, #20
 3158 044a A3E7     		b	.L184
 3159              	.LVL274:
 3160              	.L212:
 3161              	.LBB457:
 3162              	.LBB456:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3163              		.loc 3 1091 12 view .LVU995
 3164 044c 2022     		movs	r2, #32
 3165              	.LVL275:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3166              		.loc 3 1091 12 view .LVU996
 3167 044e F6E7     		b	.L185
 3168              	.L176:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3169              		.loc 3 1091 12 view .LVU997
 3170              	.LBE456:
 3171              	.LBE457:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3172              		.loc 1 2010 48 view .LVU998
 3173 0450 D6B9     		cbnz	r6, .L187
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 231


 3174              		.loc 1 2010 48 discriminator 13 view .LVU999
 3175 0452 940E     		lsrs	r4, r2, #26
 3176 0454 0134     		adds	r4, r4, #1
 3177 0456 A406     		lsls	r4, r4, #26
 3178 0458 04F0F844 		and	r4, r4, #2080374784
 3179              	.L188:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3180              		.loc 1 2010 48 discriminator 16 view .LVU1000
 3181 045c 06BB     		cbnz	r6, .L190
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3182              		.loc 1 2010 48 discriminator 17 view .LVU1001
 3183 045e 970E     		lsrs	r7, r2, #26
 3184 0460 0137     		adds	r7, r7, #1
 3185 0462 07F01F0C 		and	ip, r7, #31
 3186 0466 0127     		movs	r7, #1
 3187 0468 07FA0CF7 		lsl	r7, r7, ip
 3188              	.L191:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3189              		.loc 1 2010 48 discriminator 20 view .LVU1002
 3190 046c 3C43     		orrs	r4, r4, r7
 3191 046e 36BB     		cbnz	r6, .L193
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3192              		.loc 1 2010 48 discriminator 21 view .LVU1003
 3193 0470 920E     		lsrs	r2, r2, #26
 3194 0472 0132     		adds	r2, r2, #1
 3195 0474 02F01F02 		and	r2, r2, #31
 3196 0478 02EB4202 		add	r2, r2, r2, lsl #1
 3197 047c 1E3A     		subs	r2, r2, #30
 3198 047e 1205     		lsls	r2, r2, #20
 3199 0480 42F00072 		orr	r2, r2, #33554432
 3200              	.L194:
2009:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                     (uint32_t)(__LL_ADC_DECIMAL_NB_TO_CHANNEL((__LL_ADC_CHANNEL_TO_
 3201              		.loc 1 2009 7 discriminator 2 view .LVU1004
 3202 0484 2243     		orrs	r2, r2, r4
 3203 0486 86E7     		b	.L186
 3204              	.L187:
 3205              	.LVL276:
 3206              	.LBB458:
 3207              	.LBI458:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3208              		.loc 3 1048 31 is_stmt 1 discriminator 14 view .LVU1005
 3209              	.LBB459:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3210              		.loc 3 1050 3 discriminator 14 view .LVU1006
1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3211              		.loc 3 1055 4 discriminator 14 view .LVU1007
 3212              		.syntax unified
 3213              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3214 0488 92FAA2F4 		rbit r4, r2
 3215              	@ 0 "" 2
 3216              	.LVL277:
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3217              		.loc 3 1068 3 discriminator 14 view .LVU1008
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3218              		.loc 3 1068 3 is_stmt 0 discriminator 14 view .LVU1009
 3219              		.thumb
 3220              		.syntax unified
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 232


 3221              	.LBE459:
 3222              	.LBE458:
 3223              	.LBB460:
 3224              	.LBI460:
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3225              		.loc 3 1078 30 is_stmt 1 discriminator 14 view .LVU1010
 3226              	.LBB461:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3227              		.loc 3 1089 3 discriminator 14 view .LVU1011
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3228              		.loc 3 1089 6 is_stmt 0 discriminator 14 view .LVU1012
 3229 048c 34B1     		cbz	r4, .L213
 3230              		.loc 3 1093 3 is_stmt 1 view .LVU1013
 3231              		.loc 3 1093 10 is_stmt 0 view .LVU1014
 3232 048e B4FA84F4 		clz	r4, r4
 3233              	.LVL278:
 3234              	.L189:
 3235              		.loc 3 1093 10 view .LVU1015
 3236              	.LBE461:
 3237              	.LBE460:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3238              		.loc 1 2010 48 view .LVU1016
 3239 0492 0134     		adds	r4, r4, #1
 3240 0494 A406     		lsls	r4, r4, #26
 3241 0496 04F0F844 		and	r4, r4, #2080374784
 3242 049a DFE7     		b	.L188
 3243              	.LVL279:
 3244              	.L213:
 3245              	.LBB463:
 3246              	.LBB462:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3247              		.loc 3 1091 12 view .LVU1017
 3248 049c 2024     		movs	r4, #32
 3249              	.LVL280:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3250              		.loc 3 1091 12 view .LVU1018
 3251 049e F8E7     		b	.L189
 3252              	.L190:
 3253              	.LVL281:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3254              		.loc 3 1091 12 view .LVU1019
 3255              	.LBE462:
 3256              	.LBE463:
 3257              	.LBB464:
 3258              	.LBI464:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3259              		.loc 3 1048 31 is_stmt 1 discriminator 18 view .LVU1020
 3260              	.LBB465:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3261              		.loc 3 1050 3 discriminator 18 view .LVU1021
1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3262              		.loc 3 1055 4 discriminator 18 view .LVU1022
 3263              		.syntax unified
 3264              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3265 04a0 92FAA2F7 		rbit r7, r2
 3266              	@ 0 "" 2
 3267              	.LVL282:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 233


1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3268              		.loc 3 1068 3 discriminator 18 view .LVU1023
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3269              		.loc 3 1068 3 is_stmt 0 discriminator 18 view .LVU1024
 3270              		.thumb
 3271              		.syntax unified
 3272              	.LBE465:
 3273              	.LBE464:
 3274              	.LBB466:
 3275              	.LBI466:
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3276              		.loc 3 1078 30 is_stmt 1 discriminator 18 view .LVU1025
 3277              	.LBB467:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3278              		.loc 3 1089 3 discriminator 18 view .LVU1026
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3279              		.loc 3 1089 6 is_stmt 0 discriminator 18 view .LVU1027
 3280 04a4 4FB1     		cbz	r7, .L214
 3281              		.loc 3 1093 3 is_stmt 1 view .LVU1028
 3282              		.loc 3 1093 10 is_stmt 0 view .LVU1029
 3283 04a6 B7FA87F7 		clz	r7, r7
 3284              	.LVL283:
 3285              	.L192:
 3286              		.loc 3 1093 10 view .LVU1030
 3287              	.LBE467:
 3288              	.LBE466:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3289              		.loc 1 2010 48 view .LVU1031
 3290 04aa 0137     		adds	r7, r7, #1
 3291 04ac 07F01F07 		and	r7, r7, #31
 3292 04b0 4FF0010C 		mov	ip, #1
 3293 04b4 0CFA07F7 		lsl	r7, ip, r7
 3294 04b8 D8E7     		b	.L191
 3295              	.LVL284:
 3296              	.L214:
 3297              	.LBB469:
 3298              	.LBB468:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3299              		.loc 3 1091 12 view .LVU1032
 3300 04ba 2027     		movs	r7, #32
 3301              	.LVL285:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3302              		.loc 3 1091 12 view .LVU1033
 3303 04bc F5E7     		b	.L192
 3304              	.L193:
 3305              	.LVL286:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3306              		.loc 3 1091 12 view .LVU1034
 3307              	.LBE468:
 3308              	.LBE469:
 3309              	.LBB470:
 3310              	.LBI470:
1048:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3311              		.loc 3 1048 31 is_stmt 1 discriminator 22 view .LVU1035
 3312              	.LBB471:
1050:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** 
 3313              		.loc 3 1050 3 discriminator 22 view .LVU1036
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 234


1055:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 3314              		.loc 3 1055 4 discriminator 22 view .LVU1037
 3315              		.syntax unified
 3316              	@ 1055 "../03_Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3317 04be 92FAA2F2 		rbit r2, r2
 3318              	@ 0 "" 2
 3319              	.LVL287:
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3320              		.loc 3 1068 3 discriminator 22 view .LVU1038
1068:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3321              		.loc 3 1068 3 is_stmt 0 discriminator 22 view .LVU1039
 3322              		.thumb
 3323              		.syntax unified
 3324              	.LBE471:
 3325              	.LBE470:
 3326              	.LBB472:
 3327              	.LBI472:
1078:../03_Drivers/CMSIS/Include/cmsis_gcc.h **** {
 3328              		.loc 3 1078 30 is_stmt 1 discriminator 22 view .LVU1040
 3329              	.LBB473:
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3330              		.loc 3 1089 3 discriminator 22 view .LVU1041
1089:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 3331              		.loc 3 1089 6 is_stmt 0 discriminator 22 view .LVU1042
 3332 04c2 5AB1     		cbz	r2, .L215
 3333              		.loc 3 1093 3 is_stmt 1 view .LVU1043
 3334              		.loc 3 1093 10 is_stmt 0 view .LVU1044
 3335 04c4 B2FA82F2 		clz	r2, r2
 3336              	.LVL288:
 3337              	.L195:
 3338              		.loc 3 1093 10 view .LVU1045
 3339              	.LBE473:
 3340              	.LBE472:
2010:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                                                                + 1UL) & 0x1FUL)), s
 3341              		.loc 1 2010 48 view .LVU1046
 3342 04c8 0132     		adds	r2, r2, #1
 3343 04ca 02F01F02 		and	r2, r2, #31
 3344 04ce 02EB4202 		add	r2, r2, r2, lsl #1
 3345 04d2 1E3A     		subs	r2, r2, #30
 3346 04d4 1205     		lsls	r2, r2, #20
 3347 04d6 42F00072 		orr	r2, r2, #33554432
 3348 04da D3E7     		b	.L194
 3349              	.LVL289:
 3350              	.L215:
 3351              	.LBB475:
 3352              	.LBB474:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3353              		.loc 3 1091 12 view .LVU1047
 3354 04dc 2022     		movs	r2, #32
 3355              	.LVL290:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3356              		.loc 3 1091 12 view .LVU1048
 3357 04de F3E7     		b	.L195
 3358              	.LVL291:
 3359              	.L225:
1091:../03_Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 3360              		.loc 3 1091 12 view .LVU1049
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 235


 3361              	.LBE474:
 3362              	.LBE475:
2029:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 3363              		.loc 1 2029 9 view .LVU1050
 3364 04e0 11F4000F 		tst	r1, #8388608
 3365 04e4 7FF41CAF 		bne	.L197
2031:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3366              		.loc 1 2031 7 is_stmt 1 view .LVU1051
2031:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3367              		.loc 1 2031 11 is_stmt 0 view .LVU1052
 3368 04e8 1968     		ldr	r1, [r3]
2031:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3369              		.loc 1 2031 10 view .LVU1053
 3370 04ea 234A     		ldr	r2, .L230
 3371 04ec 9142     		cmp	r1, r2
 3372 04ee 7FF41FAF 		bne	.L196
2033:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_TEMPSENSOR | tmp_config_internal_channe
 3373              		.loc 1 2033 9 is_stmt 1 view .LVU1054
 3374 04f2 45F40005 		orr	r5, r5, #8388608
 3375              	.LVL292:
 3376              	.LBB476:
 3377              	.LBI476:
2508:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3378              		.loc 2 2508 22 view .LVU1055
 3379              	.LBB477:
2510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3380              		.loc 2 2510 3 view .LVU1056
 3381 04f6 2149     		ldr	r1, .L230+4
 3382 04f8 8A68     		ldr	r2, [r1, #8]
 3383 04fa 22F0E072 		bic	r2, r2, #29360128
 3384 04fe 1543     		orrs	r5, r5, r2
 3385              	.LVL293:
2510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3386              		.loc 2 2510 3 is_stmt 0 view .LVU1057
 3387 0500 8D60     		str	r5, [r1, #8]
 3388              	.LVL294:
2510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3389              		.loc 2 2510 3 view .LVU1058
 3390              	.LBE477:
 3391              	.LBE476:
2041:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 3392              		.loc 1 2041 9 is_stmt 1 view .LVU1059
2041:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 3393              		.loc 1 2041 90 is_stmt 0 view .LVU1060
 3394 0502 1F4A     		ldr	r2, .L230+8
 3395 0504 1268     		ldr	r2, [r2]
 3396 0506 9209     		lsrs	r2, r2, #6
 3397 0508 1E49     		ldr	r1, .L230+12
 3398 050a A1FB0212 		umull	r1, r2, r1, r2
 3399 050e 9209     		lsrs	r2, r2, #6
2041:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 3400              		.loc 1 2041 69 view .LVU1061
 3401 0510 02EB4202 		add	r2, r2, r2, lsl #1
 3402 0514 9200     		lsls	r2, r2, #2
 3403 0516 1832     		adds	r2, r2, #24
2041:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         while (wait_loop_index != 0UL)
 3404              		.loc 1 2041 25 view .LVU1062
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 236


 3405 0518 0192     		str	r2, [sp, #4]
2042:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 3406              		.loc 1 2042 9 is_stmt 1 view .LVU1063
 3407              	.L198:
2042:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 3408              		.loc 1 2042 15 view .LVU1064
2042:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 3409              		.loc 1 2042 32 is_stmt 0 view .LVU1065
 3410 051a 019A     		ldr	r2, [sp, #4]
2042:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         {
 3411              		.loc 1 2042 15 view .LVU1066
 3412 051c 002A     		cmp	r2, #0
 3413 051e 3FF407AF 		beq	.L196
2044:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 3414              		.loc 1 2044 11 is_stmt 1 view .LVU1067
2044:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         }
 3415              		.loc 1 2044 26 is_stmt 0 view .LVU1068
 3416 0522 019A     		ldr	r2, [sp, #4]
 3417 0524 013A     		subs	r2, r2, #1
 3418 0526 0192     		str	r2, [sp, #4]
 3419 0528 F7E7     		b	.L198
 3420              	.LVL295:
 3421              	.L226:
2049:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 3422              		.loc 1 2049 14 view .LVU1069
 3423 052a 11F0807F 		tst	r1, #16777216
 3424 052e 7FF4FBAE 		bne	.L200
2051:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3425              		.loc 1 2051 7 is_stmt 1 view .LVU1070
2051:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3426              		.loc 1 2051 11 is_stmt 0 view .LVU1071
 3427 0532 1968     		ldr	r1, [r3]
2051:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3428              		.loc 1 2051 10 view .LVU1072
 3429 0534 104A     		ldr	r2, .L230
 3430 0536 9142     		cmp	r1, r2
 3431 0538 7FF4FAAE 		bne	.L196
2053:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VBAT | tmp_config_internal_channel);
 3432              		.loc 1 2053 9 is_stmt 1 view .LVU1073
 3433 053c 45F08075 		orr	r5, r5, #16777216
 3434              	.LVL296:
 3435              	.LBB478:
 3436              	.LBI478:
2508:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3437              		.loc 2 2508 22 view .LVU1074
 3438              	.LBB479:
2510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3439              		.loc 2 2510 3 view .LVU1075
 3440 0540 0E49     		ldr	r1, .L230+4
 3441 0542 8A68     		ldr	r2, [r1, #8]
 3442 0544 22F0E072 		bic	r2, r2, #29360128
 3443 0548 1543     		orrs	r5, r5, r2
 3444              	.LVL297:
2510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3445              		.loc 2 2510 3 is_stmt 0 view .LVU1076
 3446 054a 8D60     		str	r5, [r1, #8]
2511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 237


 3447              		.loc 2 2511 1 view .LVU1077
 3448 054c F0E6     		b	.L196
 3449              	.LVL298:
 3450              	.L227:
2511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3451              		.loc 2 2511 1 view .LVU1078
 3452              	.LBE479:
 3453              	.LBE478:
2058:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
 3454              		.loc 1 2058 14 view .LVU1079
 3455 054e 11F4800F 		tst	r1, #4194304
 3456 0552 7FF4EDAE 		bne	.L196
2060:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3457              		.loc 1 2060 7 is_stmt 1 view .LVU1080
2060:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3458              		.loc 1 2060 11 is_stmt 0 view .LVU1081
 3459 0556 1968     		ldr	r1, [r3]
2060:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
 3460              		.loc 1 2060 10 view .LVU1082
 3461 0558 074A     		ldr	r2, .L230
 3462 055a 9142     		cmp	r1, r2
 3463 055c 7FF4E8AE 		bne	.L196
2062:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                                        LL_ADC_PATH_INTERNAL_VREFINT | tmp_config_internal_channel);
 3464              		.loc 1 2062 9 is_stmt 1 view .LVU1083
 3465 0560 45F48002 		orr	r2, r5, #4194304
 3466              	.LVL299:
 3467              	.LBB480:
 3468              	.LBI480:
2508:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3469              		.loc 2 2508 22 view .LVU1084
 3470              	.LBB481:
2510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3471              		.loc 2 2510 3 view .LVU1085
 3472 0564 054C     		ldr	r4, .L230+4
 3473 0566 A168     		ldr	r1, [r4, #8]
 3474 0568 21F0E071 		bic	r1, r1, #29360128
 3475 056c 0A43     		orrs	r2, r2, r1
 3476              	.LVL300:
2510:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3477              		.loc 2 2510 3 is_stmt 0 view .LVU1086
 3478 056e A260     		str	r2, [r4, #8]
2511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3479              		.loc 2 2511 1 view .LVU1087
 3480 0570 DEE6     		b	.L196
 3481              	.LVL301:
 3482              	.L201:
2511:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** 
 3483              		.loc 2 2511 1 view .LVU1088
 3484              	.LBE481:
 3485              	.LBE480:
1703:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
 3486              		.loc 1 1703 3 view .LVU1089
 3487 0572 0220     		movs	r0, #2
 3488 0574 DFE6     		b	.L136
 3489              	.L231:
 3490 0576 00BF     		.align	2
 3491              	.L230:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 238


 3492 0578 00000450 		.word	1342439424
 3493 057c 00030450 		.word	1342440192
 3494 0580 00000000 		.word	SystemCoreClock
 3495 0584 632D3E05 		.word	87960931
 3496              		.cfi_endproc
 3497              	.LFE305:
 3499              		.section	.text.HAL_ADCEx_EnableInjectedQueue,"ax",%progbits
 3500              		.align	1
 3501              		.global	HAL_ADCEx_EnableInjectedQueue
 3502              		.syntax unified
 3503              		.thumb
 3504              		.thumb_func
 3506              	HAL_ADCEx_EnableInjectedQueue:
 3507              	.LVL302:
 3508              	.LFB306:
2078:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2079:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #if defined(ADC_MULTIMODE_SUPPORT)
2080:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2081:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable ADC multimode and configure multimode parameters
2082:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Possibility to update parameters on the fly:
2083:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         This function initializes multimode parameters, following
2084:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         calls to this function can be used to reconfigure some parameters
2085:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         of structure "ADC_MultiModeTypeDef" on the fly, without resetting
2086:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         the ADCs.
2087:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         The setting of these parameters is conditioned to ADC state.
2088:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         For parameters constraints, see comments of structure
2089:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         "ADC_MultiModeTypeDef".
2090:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   To move back configuration from multimode to single mode, ADC must
2091:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         be reset (using function HAL_ADC_Init() ).
2092:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc Master ADC handle
2093:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param multimode Structure of ADC multimode configuration
2094:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2095:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2096:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_MultiModeConfigChannel(ADC_HandleTypeDef *hadc, ADC_MultiModeTypeDef *m
2097:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
2098:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status = HAL_OK;
2099:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_Common_TypeDef *tmpADC_Common;
2100:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_HandleTypeDef tmphadcSlave;
2101:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmphadcSlave_conversion_on_going;
2102:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2103:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2104:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE_MASTER_INSTANCE(hadc->Instance));
2105:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_MULTIMODE(multimode->Mode));
2106:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (multimode->Mode != ADC_MODE_INDEPENDENT)
2107:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2108:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_DMA_ACCESS_MULTIMODE(multimode->DMAAccessMode));
2109:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     assert_param(IS_ADC_SAMPLING_DELAY(multimode->TwoSamplingDelay));
2110:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2111:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2112:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process locked */
2113:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_LOCK(hadc);
2114:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2115:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Temporary handle minimum initialization */
2116:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_ADC_RESET_HANDLE_STATE(&tmphadcSlave);
2117:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_CLEAR_ERRORCODE(&tmphadcSlave);
2118:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2119:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   ADC_MULTI_SLAVE(hadc, &tmphadcSlave);
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 239


2120:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2121:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (tmphadcSlave.Instance == NULL)
2122:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2123:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2124:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2125:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2126:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Process unlocked */
2127:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     __HAL_UNLOCK(hadc);
2128:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2129:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     return HAL_ERROR;
2130:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2131:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2132:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters update conditioned to ADC state:                              */
2133:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameters that can be updated when ADC is disabled or enabled without   */
2134:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* conversion on going on regular group:                                    */
2135:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Multimode DMA configuration                                           */
2136:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /*  - Multimode DMA mode                                                    */
2137:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmphadcSlave_conversion_on_going = LL_ADC_REG_IsConversionOngoing((&tmphadcSlave)->Instance);
2138:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((LL_ADC_REG_IsConversionOngoing(hadc->Instance) == 0UL)
2139:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmphadcSlave_conversion_on_going == 0UL))
2140:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2141:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Pointer to the common control register */
2142:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmpADC_Common = __LL_ADC_COMMON_INSTANCE(hadc->Instance);
2143:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2144:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* If multimode is selected, configure all multimode parameters.          */
2145:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Otherwise, reset multimode parameters (can be used in case of          */
2146:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* transition from multimode to independent mode).                        */
2147:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     if (multimode->Mode != ADC_MODE_INDEPENDENT)
2148:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2149:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       MODIFY_REG(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG,
2150:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  multimode->DMAAccessMode |
2151:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                  ADC_CCR_MULTI_DMACONTREQ((uint32_t)hadc->Init.DMAContinuousRequests));
2152:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2153:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2154:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2155:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2156:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    Note: Delay range depends on selected resolution:                     */
2157:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 12 clock cycles for 12 bits                               */
2158:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 10 clock cycles for 10 bits,                              */
2159:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 8 clock cycles for 8 bits                                 */
2160:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*      from 1 to 6 clock cycles for 6 bits                                 */
2161:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    If a higher delay is selected, it will be clipped to maximum delay    */
2162:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*    range                                                                 */
2163:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
2164:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2165:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         MODIFY_REG(tmpADC_Common->CCR,
2166:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    ADC_CCR_DUAL |
2167:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    ADC_CCR_DELAY,
2168:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    multimode->Mode |
2169:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                    multimode->TwoSamplingDelay
2170:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****                   );
2171:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2172:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2173:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     else /* ADC_MODE_INDEPENDENT */
2174:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     {
2175:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_MDMA | ADC_CCR_DMACFG);
2176:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 240


2177:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /* Parameters that can be updated only when ADC is disabled:                */
2178:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode mode selection                                              */
2179:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       /*  - Multimode delay                                                       */
2180:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       if (__LL_ADC_IS_ENABLED_ALL_COMMON_INSTANCE(__LL_ADC_COMMON_INSTANCE(hadc->Instance)) == 0UL)
2181:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       {
2182:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****         CLEAR_BIT(tmpADC_Common->CCR, ADC_CCR_DUAL | ADC_CCR_DELAY);
2183:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       }
2184:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     }
2185:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2186:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* If one of the ADC sharing the same common group is enabled, no update    */
2187:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* could be done on neither of the multimode structure parameters.          */
2188:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2189:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2190:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update ADC state machine to error */
2191:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_CONFIG);
2192:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2193:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
2194:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2195:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2196:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Process unlocked */
2197:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   __HAL_UNLOCK(hadc);
2198:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2199:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Return function status */
2200:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
2201:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
2202:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** #endif /* ADC_MULTIMODE_SUPPORT */
2203:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2204:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2205:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enable Injected Queue
2206:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This function resets CFGR register JQDIS bit in order to enable the
2207:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2208:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2209:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is ongoing.
2210:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2211:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2212:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2213:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnableInjectedQueue(ADC_HandleTypeDef *hadc)
2214:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 3509              		.loc 1 2214 1 is_stmt 1 view -0
 3510              		.cfi_startproc
 3511              		@ args = 0, pretend = 0, frame = 0
 3512              		@ frame_needed = 0, uses_anonymous_args = 0
 3513              		@ link register save eliminated.
2215:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3514              		.loc 1 2215 3 view .LVU1091
2216:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3515              		.loc 1 2216 3 view .LVU1092
2217:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3516              		.loc 1 2217 3 view .LVU1093
2218:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2219:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2220:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3517              		.loc 1 2220 3 view .LVU1094
2221:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2222:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 3518              		.loc 1 2222 3 view .LVU1095
 3519              		.loc 1 2222 44 is_stmt 0 view .LVU1096
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 241


 3520 0000 0168     		ldr	r1, [r0]
 3521              	.LVL303:
 3522              	.LBB482:
 3523              	.LBI482:
6170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3524              		.loc 2 6170 26 is_stmt 1 view .LVU1097
 3525              	.LBB483:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3526              		.loc 2 6172 3 view .LVU1098
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3527              		.loc 2 6172 12 is_stmt 0 view .LVU1099
 3528 0002 8B68     		ldr	r3, [r1, #8]
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3529              		.loc 2 6172 74 view .LVU1100
 3530 0004 13F00403 		ands	r3, r3, #4
 3531 0008 00D0     		beq	.L233
 3532 000a 0123     		movs	r3, #1
 3533              	.L233:
 3534              	.LVL304:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3535              		.loc 2 6172 74 view .LVU1101
 3536              	.LBE483:
 3537              	.LBE482:
2223:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3538              		.loc 1 2223 3 is_stmt 1 view .LVU1102
 3539              	.LBB484:
 3540              	.LBI484:
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3541              		.loc 2 6353 26 view .LVU1103
 3542              	.LBB485:
 3543              		.loc 2 6355 3 view .LVU1104
 3544              		.loc 2 6355 12 is_stmt 0 view .LVU1105
 3545 000c 8A68     		ldr	r2, [r1, #8]
 3546              		.loc 2 6355 76 view .LVU1106
 3547 000e 12F00802 		ands	r2, r2, #8
 3548 0012 00D0     		beq	.L234
 3549 0014 0122     		movs	r2, #1
 3550              	.L234:
 3551              	.LVL305:
 3552              		.loc 2 6355 76 view .LVU1107
 3553              	.LBE485:
 3554              	.LBE484:
2224:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2225:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2226:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3555              		.loc 1 2226 3 is_stmt 1 view .LVU1108
 3556              		.loc 1 2226 6 is_stmt 0 view .LVU1109
 3557 0016 53B9     		cbnz	r3, .L236
2227:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3558              		.loc 1 2227 7 view .LVU1110
 3559 0018 5AB9     		cbnz	r2, .L237
2228:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
2229:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2230:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->Instance->CFGR, ADC_CFGR_JQDIS);
 3560              		.loc 1 2230 5 is_stmt 1 view .LVU1111
 3561 001a CB68     		ldr	r3, [r1, #12]
 3562              	.LVL306:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 242


 3563              		.loc 1 2230 5 is_stmt 0 view .LVU1112
 3564 001c 23F00043 		bic	r3, r3, #-2147483648
 3565 0020 CB60     		str	r3, [r1, #12]
2231:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2232:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     /* Update state, clear previous result related to injected queue overflow */
2233:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_JQOVF);
 3566              		.loc 1 2233 5 is_stmt 1 view .LVU1113
 3567 0022 436D     		ldr	r3, [r0, #84]
 3568 0024 23F48043 		bic	r3, r3, #16384
 3569 0028 4365     		str	r3, [r0, #84]
2234:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2235:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3570              		.loc 1 2235 5 view .LVU1114
 3571              	.LVL307:
 3572              		.loc 1 2235 20 is_stmt 0 view .LVU1115
 3573 002a 0020     		movs	r0, #0
 3574              	.LVL308:
 3575              		.loc 1 2235 20 view .LVU1116
 3576 002c 7047     		bx	lr
 3577              	.LVL309:
 3578              	.L236:
2236:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2237:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2238:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2239:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3579              		.loc 1 2239 20 view .LVU1117
 3580 002e 0120     		movs	r0, #1
 3581              	.LVL310:
 3582              		.loc 1 2239 20 view .LVU1118
 3583 0030 7047     		bx	lr
 3584              	.LVL311:
 3585              	.L237:
 3586              		.loc 1 2239 20 view .LVU1119
 3587 0032 0120     		movs	r0, #1
 3588              	.LVL312:
2240:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2241:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2242:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 3589              		.loc 1 2242 3 is_stmt 1 view .LVU1120
2243:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 3590              		.loc 1 2243 1 is_stmt 0 view .LVU1121
 3591 0034 7047     		bx	lr
 3592              		.cfi_endproc
 3593              	.LFE306:
 3595              		.section	.text.HAL_ADCEx_DisableInjectedQueue,"ax",%progbits
 3596              		.align	1
 3597              		.global	HAL_ADCEx_DisableInjectedQueue
 3598              		.syntax unified
 3599              		.thumb
 3600              		.thumb_func
 3602              	HAL_ADCEx_DisableInjectedQueue:
 3603              	.LVL313:
 3604              	.LFB307:
2244:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2245:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2246:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Disable Injected Queue
2247:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This function sets CFGR register JQDIS bit in order to disable the
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 243


2248:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         Injected Queue. JQDIS can be written only when ADSTART and JDSTART
2249:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         are both equal to 0 to ensure that no regular nor injected
2250:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         conversion is ongoing.
2251:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2252:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2253:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2254:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableInjectedQueue(ADC_HandleTypeDef *hadc)
2255:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 3605              		.loc 1 2255 1 is_stmt 1 view -0
 3606              		.cfi_startproc
 3607              		@ args = 0, pretend = 0, frame = 0
 3608              		@ frame_needed = 0, uses_anonymous_args = 0
 3609              		@ link register save eliminated.
2256:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3610              		.loc 1 2256 3 view .LVU1123
2257:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_regular;
 3611              		.loc 1 2257 3 view .LVU1124
2258:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   uint32_t tmp_adc_is_conversion_on_going_injected;
 3612              		.loc 1 2258 3 view .LVU1125
2259:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2260:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2261:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3613              		.loc 1 2261 3 view .LVU1126
2262:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2263:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_regular = LL_ADC_REG_IsConversionOngoing(hadc->Instance);
 3614              		.loc 1 2263 3 view .LVU1127
 3615              		.loc 1 2263 44 is_stmt 0 view .LVU1128
 3616 0000 0168     		ldr	r1, [r0]
 3617              	.LVL314:
 3618              	.LBB486:
 3619              	.LBI486:
6170:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3620              		.loc 2 6170 26 is_stmt 1 view .LVU1129
 3621              	.LBB487:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3622              		.loc 2 6172 3 view .LVU1130
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3623              		.loc 2 6172 12 is_stmt 0 view .LVU1131
 3624 0002 8B68     		ldr	r3, [r1, #8]
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3625              		.loc 2 6172 74 view .LVU1132
 3626 0004 13F00403 		ands	r3, r3, #4
 3627 0008 00D0     		beq	.L239
 3628 000a 0123     		movs	r3, #1
 3629              	.L239:
 3630              	.LVL315:
6172:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3631              		.loc 2 6172 74 view .LVU1133
 3632              	.LBE487:
 3633              	.LBE486:
2264:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   tmp_adc_is_conversion_on_going_injected = LL_ADC_INJ_IsConversionOngoing(hadc->Instance);
 3634              		.loc 1 2264 3 is_stmt 1 view .LVU1134
 3635              	.LBB488:
 3636              	.LBI488:
6353:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3637              		.loc 2 6353 26 view .LVU1135
 3638              	.LBB489:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 244


 3639              		.loc 2 6355 3 view .LVU1136
 3640              		.loc 2 6355 12 is_stmt 0 view .LVU1137
 3641 000c 8A68     		ldr	r2, [r1, #8]
 3642              		.loc 2 6355 76 view .LVU1138
 3643 000e 12F00802 		ands	r2, r2, #8
 3644 0012 00D0     		beq	.L240
 3645 0014 0122     		movs	r2, #1
 3646              	.L240:
 3647              	.LVL316:
 3648              		.loc 2 6355 76 view .LVU1139
 3649              	.LBE489:
 3650              	.LBE488:
2265:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2266:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Parameter can be set only if no conversion is on-going */
2267:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if ((tmp_adc_is_conversion_on_going_regular == 0UL)
 3651              		.loc 1 2267 3 is_stmt 1 view .LVU1140
 3652              		.loc 1 2267 6 is_stmt 0 view .LVU1141
 3653 0016 53B9     		cbnz	r3, .L242
2268:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****       && (tmp_adc_is_conversion_on_going_injected == 0UL)
 3654              		.loc 1 2268 7 view .LVU1142
 3655 0018 5AB9     		cbnz	r2, .L243
2269:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****      )
2270:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2271:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_INJ_SetQueueMode(hadc->Instance, LL_ADC_INJ_QUEUE_DISABLE);
 3656              		.loc 1 2271 5 is_stmt 1 view .LVU1143
 3657              	.LVL317:
 3658              	.LBB490:
 3659              	.LBI490:
4336:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3660              		.loc 2 4336 22 view .LVU1144
 3661              	.LBB491:
4338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3662              		.loc 2 4338 3 view .LVU1145
 3663 001a CB68     		ldr	r3, [r1, #12]
 3664              	.LVL318:
4338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3665              		.loc 2 4338 3 is_stmt 0 view .LVU1146
 3666 001c 23F00043 		bic	r3, r3, #-2147483648
 3667 0020 23F40013 		bic	r3, r3, #2097152
 3668 0024 43F00043 		orr	r3, r3, #-2147483648
 3669 0028 CB60     		str	r3, [r1, #12]
 3670              	.LVL319:
4338:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3671              		.loc 2 4338 3 view .LVU1147
 3672              	.LBE491:
 3673              	.LBE490:
2272:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3674              		.loc 1 2272 5 is_stmt 1 view .LVU1148
 3675              		.loc 1 2272 20 is_stmt 0 view .LVU1149
 3676 002a 0020     		movs	r0, #0
 3677              	.LVL320:
 3678              		.loc 1 2272 20 view .LVU1150
 3679 002c 7047     		bx	lr
 3680              	.LVL321:
 3681              	.L242:
2273:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2274:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 245


2275:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2276:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3682              		.loc 1 2276 20 view .LVU1151
 3683 002e 0120     		movs	r0, #1
 3684              	.LVL322:
 3685              		.loc 1 2276 20 view .LVU1152
 3686 0030 7047     		bx	lr
 3687              	.LVL323:
 3688              	.L243:
 3689              		.loc 1 2276 20 view .LVU1153
 3690 0032 0120     		movs	r0, #1
 3691              	.LVL324:
2277:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2278:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2279:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 3692              		.loc 1 2279 3 is_stmt 1 view .LVU1154
2280:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 3693              		.loc 1 2280 1 is_stmt 0 view .LVU1155
 3694 0034 7047     		bx	lr
 3695              		.cfi_endproc
 3696              	.LFE307:
 3698              		.section	.text.HAL_ADCEx_DisableVoltageRegulator,"ax",%progbits
 3699              		.align	1
 3700              		.global	HAL_ADCEx_DisableVoltageRegulator
 3701              		.syntax unified
 3702              		.thumb
 3703              		.thumb_func
 3705              	HAL_ADCEx_DisableVoltageRegulator:
 3706              	.LVL325:
 3707              	.LFB308:
2281:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2282:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2283:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Disable ADC voltage regulator.
2284:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Disabling voltage regulator allows to save power. This operation can
2285:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         be carried out only when ADC is disabled.
2286:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   To enable again the voltage regulator, the user is expected to
2287:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API.
2288:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2289:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2290:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2291:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_DisableVoltageRegulator(ADC_HandleTypeDef *hadc)
2292:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 3708              		.loc 1 2292 1 is_stmt 1 view -0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 0
 3711              		@ frame_needed = 0, uses_anonymous_args = 0
 3712              		@ link register save eliminated.
2293:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3713              		.loc 1 2293 3 view .LVU1157
2294:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2295:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2296:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3714              		.loc 1 2296 3 view .LVU1158
2297:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2298:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2299:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 3715              		.loc 1 2299 3 view .LVU1159
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 246


 3716              		.loc 1 2299 7 is_stmt 0 view .LVU1160
 3717 0000 0368     		ldr	r3, [r0]
 3718              	.LVL326:
 3719              	.LBB492:
 3720              	.LBI492:
6048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3721              		.loc 2 6048 26 is_stmt 1 view .LVU1161
 3722              	.LBB493:
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3723              		.loc 2 6050 3 view .LVU1162
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3724              		.loc 2 6050 12 is_stmt 0 view .LVU1163
 3725 0002 9A68     		ldr	r2, [r3, #8]
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3726              		.loc 2 6050 68 view .LVU1164
 3727 0004 12F0010F 		tst	r2, #1
 3728 0008 07D1     		bne	.L246
 3729              	.LVL327:
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3730              		.loc 2 6050 68 view .LVU1165
 3731              	.LBE493:
 3732              	.LBE492:
2300:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2301:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_DisableInternalRegulator(hadc->Instance);
 3733              		.loc 1 2301 5 is_stmt 1 view .LVU1166
 3734              	.LBB494:
 3735              	.LBI494:
5977:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3736              		.loc 2 5977 22 view .LVU1167
 3737              	.LBB495:
5979:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3738              		.loc 2 5979 3 view .LVU1168
 3739 000a 9A68     		ldr	r2, [r3, #8]
 3740 000c 22F01042 		bic	r2, r2, #-1879048192
 3741 0010 22F03F02 		bic	r2, r2, #63
 3742 0014 9A60     		str	r2, [r3, #8]
 3743              	.LVL328:
5979:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3744              		.loc 2 5979 3 is_stmt 0 view .LVU1169
 3745              	.LBE495:
 3746              	.LBE494:
2302:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3747              		.loc 1 2302 5 is_stmt 1 view .LVU1170
 3748              		.loc 1 2302 20 is_stmt 0 view .LVU1171
 3749 0016 0020     		movs	r0, #0
 3750              	.LVL329:
 3751              		.loc 1 2302 20 view .LVU1172
 3752 0018 7047     		bx	lr
 3753              	.LVL330:
 3754              	.L246:
2303:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2304:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2305:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2306:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3755              		.loc 1 2306 20 view .LVU1173
 3756 001a 0120     		movs	r0, #1
 3757              	.LVL331:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 247


2307:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2308:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2309:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 3758              		.loc 1 2309 3 is_stmt 1 view .LVU1174
2310:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 3759              		.loc 1 2310 1 is_stmt 0 view .LVU1175
 3760 001c 7047     		bx	lr
 3761              		.cfi_endproc
 3762              	.LFE308:
 3764              		.section	.text.HAL_ADCEx_EnterADCDeepPowerDownMode,"ax",%progbits
 3765              		.align	1
 3766              		.global	HAL_ADCEx_EnterADCDeepPowerDownMode
 3767              		.syntax unified
 3768              		.thumb
 3769              		.thumb_func
 3771              	HAL_ADCEx_EnterADCDeepPowerDownMode:
 3772              	.LVL332:
 3773              	.LFB309:
2311:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2312:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** /**
2313:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @brief  Enter ADC deep-power-down mode
2314:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   This mode is achieved in setting DEEPPWD bit and allows to save power
2315:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         in reducing leakage currents. It is particularly interesting before
2316:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         entering stop modes.
2317:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   Setting DEEPPWD automatically clears ADVREGEN bit and disables the
2318:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         ADC voltage regulator. This means that this API encompasses
2319:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         HAL_ADCEx_DisableVoltageRegulator(). Additionally, the internal
2320:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         calibration is lost.
2321:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @note   To exit the ADC deep-power-down mode, the user is expected to
2322:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         resort to HAL_ADC_Init() API as well as to relaunch a calibration
2323:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         with HAL_ADCEx_Calibration_Start() API or to re-apply a previously
2324:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   *         saved calibration factor.
2325:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @param hadc ADC handle
2326:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   * @retval HAL status
2327:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   */
2328:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** HAL_StatusTypeDef HAL_ADCEx_EnterADCDeepPowerDownMode(ADC_HandleTypeDef *hadc)
2329:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** {
 3774              		.loc 1 2329 1 is_stmt 1 view -0
 3775              		.cfi_startproc
 3776              		@ args = 0, pretend = 0, frame = 0
 3777              		@ frame_needed = 0, uses_anonymous_args = 0
 3778              		@ link register save eliminated.
2330:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   HAL_StatusTypeDef tmp_hal_status;
 3779              		.loc 1 2330 3 view .LVU1177
2331:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2332:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Check the parameters */
2333:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   assert_param(IS_ADC_ALL_INSTANCE(hadc->Instance));
 3780              		.loc 1 2333 3 view .LVU1178
2334:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2335:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   /* Setting of this feature is conditioned to ADC state: ADC must be ADC disabled */
2336:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   if (LL_ADC_IsEnabled(hadc->Instance) == 0UL)
 3781              		.loc 1 2336 3 view .LVU1179
 3782              		.loc 1 2336 7 is_stmt 0 view .LVU1180
 3783 0000 0268     		ldr	r2, [r0]
 3784              	.LVL333:
 3785              	.LBB496:
 3786              	.LBI496:
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 248


6048:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3787              		.loc 2 6048 26 is_stmt 1 view .LVU1181
 3788              	.LBB497:
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3789              		.loc 2 6050 3 view .LVU1182
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3790              		.loc 2 6050 12 is_stmt 0 view .LVU1183
 3791 0002 9368     		ldr	r3, [r2, #8]
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3792              		.loc 2 6050 68 view .LVU1184
 3793 0004 13F0010F 		tst	r3, #1
 3794 0008 09D1     		bne	.L249
 3795              	.LVL334:
6050:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** }
 3796              		.loc 2 6050 68 view .LVU1185
 3797              	.LBE497:
 3798              	.LBE496:
2337:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2338:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     LL_ADC_EnableDeepPowerDown(hadc->Instance);
 3799              		.loc 1 2338 5 is_stmt 1 view .LVU1186
 3800              	.LBB498:
 3801              	.LBI498:
5902:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h **** {
 3802              		.loc 2 5902 22 view .LVU1187
 3803              	.LBB499:
5907:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3804              		.loc 2 5907 3 view .LVU1188
 3805 000a 9368     		ldr	r3, [r2, #8]
 3806 000c 23F02043 		bic	r3, r3, #-1610612736
 3807 0010 23F03F03 		bic	r3, r3, #63
 3808 0014 43F00053 		orr	r3, r3, #536870912
 3809 0018 9360     		str	r3, [r2, #8]
 3810              	.LVL335:
5907:../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_ll_adc.h ****              ADC_CR_BITS_PROPERTY_RS,
 3811              		.loc 2 5907 3 is_stmt 0 view .LVU1189
 3812              	.LBE499:
 3813              	.LBE498:
2339:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_OK;
 3814              		.loc 1 2339 5 is_stmt 1 view .LVU1190
 3815              		.loc 1 2339 20 is_stmt 0 view .LVU1191
 3816 001a 0020     		movs	r0, #0
 3817              	.LVL336:
 3818              		.loc 1 2339 20 view .LVU1192
 3819 001c 7047     		bx	lr
 3820              	.LVL337:
 3821              	.L249:
2340:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2341:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   else
2342:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   {
2343:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****     tmp_hal_status = HAL_ERROR;
 3822              		.loc 1 2343 20 view .LVU1193
 3823 001e 0120     		movs	r0, #1
 3824              	.LVL338:
2344:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   }
2345:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** 
2346:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c ****   return tmp_hal_status;
 3825              		.loc 1 2346 3 is_stmt 1 view .LVU1194
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 249


2347:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_adc_ex.c **** }
 3826              		.loc 1 2347 1 is_stmt 0 view .LVU1195
 3827 0020 7047     		bx	lr
 3828              		.cfi_endproc
 3829              	.LFE309:
 3831              		.text
 3832              	.Letext0:
 3833              		.file 4 "c:\\gnuarm\\arm-none-eabi\\include\\machine\\_default_types.h"
 3834              		.file 5 "c:\\gnuarm\\arm-none-eabi\\include\\sys\\_stdint.h"
 3835              		.file 6 "../03_Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 3836              		.file 7 "../03_Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 3837              		.file 8 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 3838              		.file 9 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 3839              		.file 10 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc.h"
 3840              		.file 11 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_adc_ex.h"
 3841              		.file 12 "../03_Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 3842              		.file 13 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 250


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_adc_ex.c
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:20     .text.HAL_ADCEx_Calibration_Start:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:26     .text.HAL_ADCEx_Calibration_Start:00000000 HAL_ADCEx_Calibration_Start
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:188    .text.HAL_ADCEx_Calibration_GetValue:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:194    .text.HAL_ADCEx_Calibration_GetValue:00000000 HAL_ADCEx_Calibration_GetValue
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:235    .text.HAL_ADCEx_Calibration_SetValue:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:241    .text.HAL_ADCEx_Calibration_SetValue:00000000 HAL_ADCEx_Calibration_SetValue
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:419    .text.HAL_ADCEx_InjectedStart:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:425    .text.HAL_ADCEx_InjectedStart:00000000 HAL_ADCEx_InjectedStart
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:608    .text.HAL_ADCEx_InjectedStop:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:614    .text.HAL_ADCEx_InjectedStop:00000000 HAL_ADCEx_InjectedStop
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:714    .text.HAL_ADCEx_InjectedPollForConversion:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:720    .text.HAL_ADCEx_InjectedPollForConversion:00000000 HAL_ADCEx_InjectedPollForConversion
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:956    .text.HAL_ADCEx_InjectedStart_IT:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:962    .text.HAL_ADCEx_InjectedStart_IT:00000000 HAL_ADCEx_InjectedStart_IT
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1190   .text.HAL_ADCEx_InjectedStop_IT:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1196   .text.HAL_ADCEx_InjectedStop_IT:00000000 HAL_ADCEx_InjectedStop_IT
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1301   .text.HAL_ADCEx_InjectedGetValue:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1307   .text.HAL_ADCEx_InjectedGetValue:00000000 HAL_ADCEx_InjectedGetValue
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1370   .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1376   .text.HAL_ADCEx_InjectedConvCpltCallback:00000000 HAL_ADCEx_InjectedConvCpltCallback
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1391   .text.HAL_ADCEx_InjectedQueueOverflowCallback:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1397   .text.HAL_ADCEx_InjectedQueueOverflowCallback:00000000 HAL_ADCEx_InjectedQueueOverflowCallback
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1412   .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1418   .text.HAL_ADCEx_LevelOutOfWindow2Callback:00000000 HAL_ADCEx_LevelOutOfWindow2Callback
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1433   .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1439   .text.HAL_ADCEx_LevelOutOfWindow3Callback:00000000 HAL_ADCEx_LevelOutOfWindow3Callback
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1454   .text.HAL_ADCEx_EndOfSamplingCallback:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1460   .text.HAL_ADCEx_EndOfSamplingCallback:00000000 HAL_ADCEx_EndOfSamplingCallback
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1475   .text.HAL_ADCEx_RegularStop:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1481   .text.HAL_ADCEx_RegularStop:00000000 HAL_ADCEx_RegularStop
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1584   .text.HAL_ADCEx_RegularStop_IT:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1590   .text.HAL_ADCEx_RegularStop_IT:00000000 HAL_ADCEx_RegularStop_IT
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1698   .text.HAL_ADCEx_RegularStop_DMA:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1704   .text.HAL_ADCEx_RegularStop_DMA:00000000 HAL_ADCEx_RegularStop_DMA
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1853   .text.HAL_ADCEx_InjectedConfigChannel:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:1859   .text.HAL_ADCEx_InjectedConfigChannel:00000000 HAL_ADCEx_InjectedConfigChannel
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:2951   .text.HAL_ADCEx_InjectedConfigChannel:000003c0 $d
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:2972   .text.HAL_ADCEx_InjectedConfigChannel:000003e0 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:3492   .text.HAL_ADCEx_InjectedConfigChannel:00000578 $d
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:3500   .text.HAL_ADCEx_EnableInjectedQueue:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:3506   .text.HAL_ADCEx_EnableInjectedQueue:00000000 HAL_ADCEx_EnableInjectedQueue
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:3596   .text.HAL_ADCEx_DisableInjectedQueue:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:3602   .text.HAL_ADCEx_DisableInjectedQueue:00000000 HAL_ADCEx_DisableInjectedQueue
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:3699   .text.HAL_ADCEx_DisableVoltageRegulator:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:3705   .text.HAL_ADCEx_DisableVoltageRegulator:00000000 HAL_ADCEx_DisableVoltageRegulator
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:3765   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:00000000 $t
C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s:3771   .text.HAL_ADCEx_EnterADCDeepPowerDownMode:00000000 HAL_ADCEx_EnterADCDeepPowerDownMode

UNDEFINED SYMBOLS
ADC_Disable
ADC_Enable
ADC_ConversionStop
HAL_GetTick
HAL_DMA_Abort
SystemCoreClock
ARM GAS  C:\Users\minde\AppData\Local\Temp\ccjwv1lu.s 			page 251


