ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32l4xx_hal_pwr.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_PWR_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_PWR_DeInit
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_PWR_DeInit:
  27              	.LFB288:
  28              		.file 1 "../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c"
   1:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
   2:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   ******************************************************************************
   3:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @file    stm32l4xx_hal_pwr.c
   4:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @author  MCD Application Team
   5:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief   PWR HAL module driver.
   6:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This file provides firmware functions to manage the following
   7:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          functionalities of the Power Controller (PWR) peripheral:
   8:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           + Initialization/de-initialization functions
   9:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           + Peripheral Control functions
  10:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  11:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   ******************************************************************************
  12:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @attention
  13:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  14:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * Copyright (c) 2019 STMicroelectronics.
  15:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * All rights reserved.
  16:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  17:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * This software is licensed under terms that can be found in the LICENSE file
  18:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * in the root directory of this software component.
  19:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  20:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  21:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   ******************************************************************************
  22:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  23:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  24:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Includes ------------------------------------------------------------------*/
  25:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #include "stm32l4xx_hal.h"
  26:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  27:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @addtogroup STM32L4xx_HAL_Driver
  28:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  29:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  30:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 2


  31:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR PWR
  32:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief PWR HAL module driver
  33:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  34:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  35:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  36:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #ifdef HAL_PWR_MODULE_ENABLED
  37:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  38:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private typedef -----------------------------------------------------------*/
  39:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private define ------------------------------------------------------------*/
  40:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  41:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Private_Defines PWR Private Defines
  42:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  43:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  44:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  45:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_PVD_Mode_Mask PWR PVD Mode Mask
  46:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  47:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  48:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_MODE_IT               ((uint32_t)0x00010000)  /*!< Mask for interruption yielded by PVD
  49:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_MODE_EVT              ((uint32_t)0x00020000)  /*!< Mask for event yielded by PVD thresh
  50:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_RISING_EDGE           ((uint32_t)0x00000001)  /*!< Mask for rising edge set as PVD trig
  51:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #define PVD_FALLING_EDGE          ((uint32_t)0x00000002)  /*!< Mask for falling edge set as PVD tri
  52:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  53:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @}
  54:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  55:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  56:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  57:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @}
  58:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  59:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  60:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private macro -------------------------------------------------------------*/
  61:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private variables ---------------------------------------------------------*/
  62:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Private function prototypes -----------------------------------------------*/
  63:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* Exported functions --------------------------------------------------------*/
  64:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  65:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions PWR Exported Functions
  66:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  67:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  68:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  69:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group1 Initialization and de-initialization functions
  70:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *  @brief    Initialization and de-initialization functions
  71:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
  72:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @verbatim
  73:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
  74:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****               ##### Initialization and de-initialization functions #####
  75:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
  76:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
  77:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  78:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @endverbatim
  79:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
  80:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  81:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  82:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  83:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Deinitialize the HAL PWR peripheral registers to their default reset values.
  84:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
  85:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
  86:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DeInit(void)
  87:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 3


  29              		.loc 1 87 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  88:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_RCC_PWR_FORCE_RESET();
  34              		.loc 1 88 3 view .LVU1
  35 0000 044B     		ldr	r3, .L2
  36 0002 9A6B     		ldr	r2, [r3, #56]
  37 0004 42F08052 		orr	r2, r2, #268435456
  38 0008 9A63     		str	r2, [r3, #56]
  89:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_RCC_PWR_RELEASE_RESET();
  39              		.loc 1 89 3 view .LVU2
  40 000a 9A6B     		ldr	r2, [r3, #56]
  41 000c 22F08052 		bic	r2, r2, #268435456
  42 0010 9A63     		str	r2, [r3, #56]
  90:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
  43              		.loc 1 90 1 is_stmt 0 view .LVU3
  44 0012 7047     		bx	lr
  45              	.L3:
  46              		.align	2
  47              	.L2:
  48 0014 00100240 		.word	1073876992
  49              		.cfi_endproc
  50              	.LFE288:
  52              		.section	.text.HAL_PWR_EnableBkUpAccess,"ax",%progbits
  53              		.align	1
  54              		.global	HAL_PWR_EnableBkUpAccess
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	HAL_PWR_EnableBkUpAccess:
  60              	.LFB289:
  91:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
  92:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
  93:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable access to the backup domain
  94:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        (RTC registers, RTC backup data registers).
  95:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  After reset, the backup domain is protected against
  96:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        possible unwanted write accesses.
  97:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  RTCSEL that sets the RTC clock source selection is in the RTC back-up domain.
  98:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        In order to set or modify the RTC clock, the backup domain access must be
  99:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        disabled.
 100:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  LSEON bit that switches on and off the LSE crystal belongs as well to the
 101:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        back-up domain.
 102:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 103:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 104:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableBkUpAccess(void)
 105:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
  61              		.loc 1 105 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65              		@ link register save eliminated.
 106:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(PWR->CR1, PWR_CR1_DBP);
  66              		.loc 1 106 3 view .LVU5
  67 0000 024A     		ldr	r2, .L5
  68 0002 1368     		ldr	r3, [r2]
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 4


  69 0004 43F48073 		orr	r3, r3, #256
  70 0008 1360     		str	r3, [r2]
 107:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
  71              		.loc 1 107 1 is_stmt 0 view .LVU6
  72 000a 7047     		bx	lr
  73              	.L6:
  74              		.align	2
  75              	.L5:
  76 000c 00700040 		.word	1073770496
  77              		.cfi_endproc
  78              	.LFE289:
  80              		.section	.text.HAL_PWR_DisableBkUpAccess,"ax",%progbits
  81              		.align	1
  82              		.global	HAL_PWR_DisableBkUpAccess
  83              		.syntax unified
  84              		.thumb
  85              		.thumb_func
  87              	HAL_PWR_DisableBkUpAccess:
  88              	.LFB290:
 108:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 109:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 110:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable access to the backup domain
 111:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        (RTC registers, RTC backup data registers).
 112:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 113:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 114:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableBkUpAccess(void)
 115:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
  89              		.loc 1 115 1 is_stmt 1 view -0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 116:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR1, PWR_CR1_DBP);
  94              		.loc 1 116 3 view .LVU8
  95 0000 024A     		ldr	r2, .L8
  96 0002 1368     		ldr	r3, [r2]
  97 0004 23F48073 		bic	r3, r3, #256
  98 0008 1360     		str	r3, [r2]
 117:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
  99              		.loc 1 117 1 is_stmt 0 view .LVU9
 100 000a 7047     		bx	lr
 101              	.L9:
 102              		.align	2
 103              	.L8:
 104 000c 00700040 		.word	1073770496
 105              		.cfi_endproc
 106              	.LFE290:
 108              		.section	.text.HAL_PWR_ConfigPVD,"ax",%progbits
 109              		.align	1
 110              		.global	HAL_PWR_ConfigPVD
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 115              	HAL_PWR_ConfigPVD:
 116              	.LVL0:
 117              	.LFB291:
 118:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 5


 119:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 120:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 121:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 122:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 123:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @}
 124:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 125:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 126:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 127:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 128:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /** @defgroup PWR_Exported_Functions_Group2 Peripheral Control functions
 129:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *  @brief Low Power modes configuration functions
 130:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
 131:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @verbatim
 132:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 133:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
 134:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                  ##### Peripheral Control functions #####
 135:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****  ===============================================================================
 136:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 137:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      [..]
 138:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      *** PVD configuration ***
 139:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     =========================
 140:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 141:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) The PVD is used to monitor the VDD power supply by comparing it to a
 142:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           threshold selected by the PVD Level (PLS[2:0] bits in PWR_CR2 register).
 143:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 144:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) PVDO flag is available to indicate if VDD/VDDA is higher or lower
 145:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           than the PVD threshold. This event is internally connected to the EXTI
 146:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           line16 and can generate an interrupt if enabled. This is done through
 147:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           __HAL_PVD_EXTI_ENABLE_IT() macro.
 148:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) The PVD is stopped in Standby mode.
 149:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 150:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 151:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     *** WakeUp pin configuration ***
 152:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     ================================
 153:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 154:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WakeUp pins are used to wakeup the system from Standby mode or Shutdown mode.
 155:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The polarity of these pins can be set to configure event detection on high
 156:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           level (rising edge) or low level (falling edge).
 157:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 158:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 159:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 160:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     *** Low Power modes configuration ***
 161:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     =====================================
 162:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 163:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       The devices feature 8 low-power modes:
 164:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Low-power Run mode: core and peripherals are running, main regulator off, low power regul
 165:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Sleep mode: Cortex-M4 core stopped, peripherals kept running, main and low power regulato
 166:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Low-power Sleep mode: Cortex-M4 core stopped, peripherals kept running, main regulator of
 167:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Stop 0 mode: all clocks are stopped except LSI and LSE, main and low power regulators on.
 168:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Stop 1 mode: all clocks are stopped except LSI and LSE, main regulator off, low power reg
 169:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Stop 2 mode: all clocks are stopped except LSI and LSE, main regulator off, low power reg
 170:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Standby mode with SRAM2: all clocks are stopped except LSI and LSE, SRAM2 content preserv
 171:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Standby mode without SRAM2: all clocks are stopped except LSI and LSE, main and low power
 172:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Shutdown mode: all clocks are stopped except LSE, main and low power regulators off.
 173:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 174:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 175:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Low-power run mode ***
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 6


 176:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ==========================
 177:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 178:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry: (from main run mode)
 179:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) set LPR bit with HAL_PWREx_EnableLowPowerRunMode() API after having decreased the syst
 180:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 181:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Exit:
 182:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) clear LPR bit then wait for REGLP bit to be reset with HAL_PWREx_DisableLowPowerRunMod
 183:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              then can the system clock frequency be increased above 2 MHz.
 184:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 185:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 186:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Sleep mode / Low-power sleep mode ***
 187:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    =========================================
 188:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 189:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry:
 190:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The Sleep mode / Low-power Sleep mode is entered thru HAL_PWR_EnterSLEEPMode() API
 191:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           in specifying whether or not the regulator is forced to low-power mode and if exit is int
 192:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_MAINREGULATOR_ON: Sleep mode (regulator in main mode).
 193:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_LOWPOWERREGULATOR_ON: Low-power sleep (regulator in low power mode).
 194:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           In the latter case, the system clock frequency must have been decreased below 2 MHz befor
 195:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFI: enter SLEEP mode with WFI instruction
 196:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_SLEEPENTRY_WFE: enter SLEEP mode with WFE instruction
 197:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 198:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFI Exit:
 199:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) Any peripheral interrupt acknowledged by the nested vectored interrupt
 200:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              controller (NVIC) or any wake-up event.
 201:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 202:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFE Exit:
 203:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) Any wake-up event such as an EXTI line configured in event mode.
 204:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 205:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****          [..] When exiting the Low-power sleep mode by issuing an interrupt or a wakeup event,
 206:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              the MCU is in Low-power Run mode.
 207:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 208:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Stop 0, Stop 1 and Stop 2 modes ***
 209:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ===============================
 210:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 211:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry:
 212:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The Stop 0, Stop 1 or Stop 2 modes are entered thru the following API's:
 213:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) HAL_PWREx_EnterSTOP0Mode() for mode 0 or HAL_PWREx_EnterSTOP1Mode() for mode 1 or fo
 214:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) HAL_PWREx_EnterSTOP2Mode() for mode 2.
 215:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Regulator setting (applicable to HAL_PWR_EnterSTOPMode() only):
 216:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_MAINREGULATOR_ON
 217:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_LOWPOWERREGULATOR_ON
 218:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Exit (interrupt or event-triggered, specified when entering STOP mode):
 219:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_STOPENTRY_WFI: enter Stop mode with WFI instruction
 220:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) PWR_STOPENTRY_WFE: enter Stop mode with WFE instruction
 221:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 222:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFI Exit:
 223:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) Any EXTI Line (Internal or External) configured in Interrupt mode.
 224:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) Some specific communication peripherals (USART, LPUART, I2C) interrupts
 225:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                when programmed in wakeup mode.
 226:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) WFE Exit:
 227:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) Any EXTI Line (Internal or External) configured in Event mode.
 228:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 229:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****        [..]
 230:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           When exiting Stop 0 and Stop 1 modes, the MCU is either in Run mode or in Low-power Run m
 231:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           depending on the LPR bit setting.
 232:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           When exiting Stop 2 mode, the MCU is in Run mode.
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 7


 233:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 234:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Standby mode ***
 235:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ====================
 236:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      [..]
 237:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       The Standby mode offers two options:
 238:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) option a) all clocks off except LSI and LSE, RRS bit set (keeps voltage regulator in low 
 239:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         SRAM and registers contents are lost except for the SRAM2 content, the RTC registers, RTC b
 240:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         and Standby circuitry.
 241:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) option b) all clocks off except LSI and LSE, RRS bit cleared (voltage regulator then disa
 242:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         SRAM and register contents are lost except for the RTC registers, RTC backup registers
 243:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         and Standby circuitry.
 244:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 245:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (++) Entry:
 246:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (+++) The Standby mode is entered thru HAL_PWR_EnterSTANDBYMode() API.
 247:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 SRAM1 and register contents are lost except for registers in the Backup domain and
 248:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 Standby circuitry. SRAM2 content can be preserved if the bit RRS is set in PWR_CR3 
 249:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 To enable this feature, the user can resort to HAL_PWREx_EnableSRAM2ContentRetentio
 250:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 to set RRS bit.
 251:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 252:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (++) Exit:
 253:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (+++) WKUP pin rising edge, RTC alarm or wakeup, tamper event, time-stamp event,
 254:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                 external reset in NRST pin, IWDG reset.
 255:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 256:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       [..]    After waking up from Standby mode, program execution restarts in the same way as afte
 257:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 258:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 259:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     *** Shutdown mode ***
 260:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    ======================
 261:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****      [..]
 262:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       In Shutdown mode,
 263:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         voltage regulator is disabled, all clocks are off except LSE, RRS bit is cleared.
 264:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         SRAM and registers contents are lost except for backup domain registers.
 265:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 266:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Entry:
 267:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           The Shutdown mode is entered thru HAL_PWREx_EnterSHUTDOWNMode() API.
 268:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 269:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) Exit:
 270:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****           (++) WKUP pin rising edge, RTC alarm or wakeup, tamper event, time-stamp event,
 271:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****                external reset in NRST pin.
 272:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 273:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****          [..] After waking up from Shutdown mode, program execution restarts in the same way as aft
 274:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 275:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 276:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    *** Auto-wakeup (AWU) from low-power mode ***
 277:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    =============================================
 278:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     [..]
 279:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       The MCU can be woken up from low-power mode by an RTC Alarm event, an RTC
 280:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       Wakeup event, a tamper event or a time-stamp event, without depending on
 281:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       an external interrupt (Auto-wakeup mode).
 282:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 283:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       (+) RTC auto-wakeup (AWU) from the Stop, Standby and Shutdown modes
 284:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 285:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 286:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC alarm event, it is necessary to
 287:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              configure the RTC to generate the RTC alarm using the HAL_RTC_SetAlarm_IT() function.
 288:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 289:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC Tamper or time stamp event, it
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 8


 290:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              is necessary to configure the RTC to detect the tamper or time stamp event using the
 291:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****              HAL_RTCEx_SetTimeStamp_IT() or HAL_RTCEx_SetTamper_IT() functions.
 292:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 293:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         (++) To wake up from the Stop mode with an RTC WakeUp event, it is necessary to
 294:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****               configure the RTC to generate the RTC WakeUp event using the HAL_RTCEx_SetWakeUpTimer
 295:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 296:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** @endverbatim
 297:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @{
 298:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 299:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 300:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 301:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 302:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 303:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Configure the voltage threshold detected by the Power Voltage Detector (PVD).
 304:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param sConfigPVD: pointer to a PWR_PVDTypeDef structure that contains the PVD
 305:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        configuration information.
 306:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Refer to the electrical characteristics of your device datasheet for
 307:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         more details about the voltage thresholds corresponding to each
 308:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         detection level.
 309:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 310:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 311:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** HAL_StatusTypeDef HAL_PWR_ConfigPVD(PWR_PVDTypeDef *sConfigPVD)
 312:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 118              		.loc 1 312 1 is_stmt 1 view -0
 119              		.cfi_startproc
 120              		@ args = 0, pretend = 0, frame = 0
 121              		@ frame_needed = 0, uses_anonymous_args = 0
 122              		@ link register save eliminated.
 313:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Check the parameters */
 314:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_LEVEL(sConfigPVD->PVDLevel));
 123              		.loc 1 314 3 view .LVU11
 315:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_PVD_MODE(sConfigPVD->Mode));
 124              		.loc 1 315 3 view .LVU12
 316:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 317:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set PLS bits according to PVDLevel value */
 318:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR2, PWR_CR2_PLS, sConfigPVD->PVDLevel);
 125              		.loc 1 318 3 view .LVU13
 126 0000 1E4A     		ldr	r2, .L15
 127 0002 5368     		ldr	r3, [r2, #4]
 128 0004 23F00E03 		bic	r3, r3, #14
 129 0008 0168     		ldr	r1, [r0]
 130 000a 0B43     		orrs	r3, r3, r1
 131 000c 5360     		str	r3, [r2, #4]
 319:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 320:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear any previous config. Keep it clear if no event or IT mode is selected */
 321:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_EVENT();
 132              		.loc 1 321 3 view .LVU14
 133 000e 1C4B     		ldr	r3, .L15+4
 134 0010 5A68     		ldr	r2, [r3, #4]
 135 0012 22F48032 		bic	r2, r2, #65536
 136 0016 5A60     		str	r2, [r3, #4]
 322:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_IT();
 137              		.loc 1 322 3 view .LVU15
 138 0018 1A68     		ldr	r2, [r3]
 139 001a 22F48032 		bic	r2, r2, #65536
 140 001e 1A60     		str	r2, [r3]
 323:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_FALLING_EDGE();
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 9


 141              		.loc 1 323 3 view .LVU16
 142 0020 DA68     		ldr	r2, [r3, #12]
 143 0022 22F48032 		bic	r2, r2, #65536
 144 0026 DA60     		str	r2, [r3, #12]
 324:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __HAL_PWR_PVD_EXTI_DISABLE_RISING_EDGE();
 145              		.loc 1 324 3 view .LVU17
 146 0028 9A68     		ldr	r2, [r3, #8]
 147 002a 22F48032 		bic	r2, r2, #65536
 148 002e 9A60     		str	r2, [r3, #8]
 325:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 326:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Configure interrupt mode */
 327:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_IT) == PVD_MODE_IT)
 149              		.loc 1 327 3 view .LVU18
 150              		.loc 1 327 17 is_stmt 0 view .LVU19
 151 0030 4368     		ldr	r3, [r0, #4]
 152              		.loc 1 327 5 view .LVU20
 153 0032 13F4803F 		tst	r3, #65536
 154 0036 04D0     		beq	.L11
 328:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 329:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_IT();
 155              		.loc 1 329 5 is_stmt 1 view .LVU21
 156 0038 114A     		ldr	r2, .L15+4
 157 003a 1368     		ldr	r3, [r2]
 158 003c 43F48033 		orr	r3, r3, #65536
 159 0040 1360     		str	r3, [r2]
 160              	.L11:
 330:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 331:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 332:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Configure event mode */
 333:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_MODE_EVT) == PVD_MODE_EVT)
 161              		.loc 1 333 3 view .LVU22
 162              		.loc 1 333 17 is_stmt 0 view .LVU23
 163 0042 4368     		ldr	r3, [r0, #4]
 164              		.loc 1 333 5 view .LVU24
 165 0044 13F4003F 		tst	r3, #131072
 166 0048 04D0     		beq	.L12
 334:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 335:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_EVENT();
 167              		.loc 1 335 5 is_stmt 1 view .LVU25
 168 004a 0D4A     		ldr	r2, .L15+4
 169 004c 5368     		ldr	r3, [r2, #4]
 170 004e 43F48033 		orr	r3, r3, #65536
 171 0052 5360     		str	r3, [r2, #4]
 172              	.L12:
 336:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 337:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 338:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Configure the edge */
 339:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_RISING_EDGE) == PVD_RISING_EDGE)
 173              		.loc 1 339 3 view .LVU26
 174              		.loc 1 339 17 is_stmt 0 view .LVU27
 175 0054 4368     		ldr	r3, [r0, #4]
 176              		.loc 1 339 5 view .LVU28
 177 0056 13F0010F 		tst	r3, #1
 178 005a 04D0     		beq	.L13
 340:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 341:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_RISING_EDGE();
 179              		.loc 1 341 5 is_stmt 1 view .LVU29
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 10


 180 005c 084A     		ldr	r2, .L15+4
 181 005e 9368     		ldr	r3, [r2, #8]
 182 0060 43F48033 		orr	r3, r3, #65536
 183 0064 9360     		str	r3, [r2, #8]
 184              	.L13:
 342:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 343:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 344:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if((sConfigPVD->Mode & PVD_FALLING_EDGE) == PVD_FALLING_EDGE)
 185              		.loc 1 344 3 view .LVU30
 186              		.loc 1 344 17 is_stmt 0 view .LVU31
 187 0066 4368     		ldr	r3, [r0, #4]
 188              		.loc 1 344 5 view .LVU32
 189 0068 13F0020F 		tst	r3, #2
 190 006c 04D0     		beq	.L14
 345:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 346:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __HAL_PWR_PVD_EXTI_ENABLE_FALLING_EDGE();
 191              		.loc 1 346 5 is_stmt 1 view .LVU33
 192 006e 044A     		ldr	r2, .L15+4
 193 0070 D368     		ldr	r3, [r2, #12]
 194 0072 43F48033 		orr	r3, r3, #65536
 195 0076 D360     		str	r3, [r2, #12]
 196              	.L14:
 347:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 348:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 349:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   return HAL_OK;
 197              		.loc 1 349 3 view .LVU34
 350:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 198              		.loc 1 350 1 is_stmt 0 view .LVU35
 199 0078 0020     		movs	r0, #0
 200              	.LVL1:
 201              		.loc 1 350 1 view .LVU36
 202 007a 7047     		bx	lr
 203              	.L16:
 204              		.align	2
 205              	.L15:
 206 007c 00700040 		.word	1073770496
 207 0080 00040140 		.word	1073808384
 208              		.cfi_endproc
 209              	.LFE291:
 211              		.section	.text.HAL_PWR_EnablePVD,"ax",%progbits
 212              		.align	1
 213              		.global	HAL_PWR_EnablePVD
 214              		.syntax unified
 215              		.thumb
 216              		.thumb_func
 218              	HAL_PWR_EnablePVD:
 219              	.LFB292:
 351:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 352:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 353:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 354:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable the Power Voltage Detector (PVD).
 355:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 356:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 357:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnablePVD(void)
 358:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 220              		.loc 1 358 1 is_stmt 1 view -0
 221              		.cfi_startproc
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 11


 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 359:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(PWR->CR2, PWR_CR2_PVDE);
 225              		.loc 1 359 3 view .LVU38
 226 0000 024A     		ldr	r2, .L18
 227 0002 5368     		ldr	r3, [r2, #4]
 228 0004 43F00103 		orr	r3, r3, #1
 229 0008 5360     		str	r3, [r2, #4]
 360:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 230              		.loc 1 360 1 is_stmt 0 view .LVU39
 231 000a 7047     		bx	lr
 232              	.L19:
 233              		.align	2
 234              	.L18:
 235 000c 00700040 		.word	1073770496
 236              		.cfi_endproc
 237              	.LFE292:
 239              		.section	.text.HAL_PWR_DisablePVD,"ax",%progbits
 240              		.align	1
 241              		.global	HAL_PWR_DisablePVD
 242              		.syntax unified
 243              		.thumb
 244              		.thumb_func
 246              	HAL_PWR_DisablePVD:
 247              	.LFB293:
 361:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 362:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 363:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable the Power Voltage Detector (PVD).
 364:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 365:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 366:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisablePVD(void)
 367:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 248              		.loc 1 367 1 is_stmt 1 view -0
 249              		.cfi_startproc
 250              		@ args = 0, pretend = 0, frame = 0
 251              		@ frame_needed = 0, uses_anonymous_args = 0
 252              		@ link register save eliminated.
 368:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR2, PWR_CR2_PVDE);
 253              		.loc 1 368 3 view .LVU41
 254 0000 024A     		ldr	r2, .L21
 255 0002 5368     		ldr	r3, [r2, #4]
 256 0004 23F00103 		bic	r3, r3, #1
 257 0008 5360     		str	r3, [r2, #4]
 369:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 258              		.loc 1 369 1 is_stmt 0 view .LVU42
 259 000a 7047     		bx	lr
 260              	.L22:
 261              		.align	2
 262              	.L21:
 263 000c 00700040 		.word	1073770496
 264              		.cfi_endproc
 265              	.LFE293:
 267              		.section	.text.HAL_PWR_EnableWakeUpPin,"ax",%progbits
 268              		.align	1
 269              		.global	HAL_PWR_EnableWakeUpPin
 270              		.syntax unified
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 12


 271              		.thumb
 272              		.thumb_func
 274              	HAL_PWR_EnableWakeUpPin:
 275              	.LVL2:
 276              	.LFB294:
 370:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 371:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 372:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 373:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 374:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 375:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable the WakeUp PINx functionality.
 376:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param WakeUpPinPolarity: Specifies which Wake-Up pin to enable.
 377:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         This parameter can be one of the following legacy values which set the default polarity
 378:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         i.e. detection on high level (rising edge):
 379:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN1, PWR_WAKEUP_PIN2, PWR_WAKEUP_PIN3, PWR_WAKEUP_PIN4, PWR_WAK
 380:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *
 381:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         or one of the following value where the user can explicitly specify the enabled pin and
 382:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         the chosen polarity:
 383:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN1_HIGH or PWR_WAKEUP_PIN1_LOW
 384:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN2_HIGH or PWR_WAKEUP_PIN2_LOW
 385:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN3_HIGH or PWR_WAKEUP_PIN3_LOW
 386:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN4_HIGH or PWR_WAKEUP_PIN4_LOW
 387:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN5_HIGH or PWR_WAKEUP_PIN5_LOW
 388:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  PWR_WAKEUP_PINx and PWR_WAKEUP_PINx_HIGH are equivalent.
 389:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 390:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 391:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableWakeUpPin(uint32_t WakeUpPinPolarity)
 392:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 277              		.loc 1 392 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 393:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinPolarity));
 282              		.loc 1 393 3 view .LVU44
 394:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 395:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Specifies the Wake-Up pin polarity for the event detection
 396:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     (rising or falling edge) */
 397:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR4, (PWR_CR3_EWUP & WakeUpPinPolarity), (WakeUpPinPolarity >> PWR_WUP_POLARITY_S
 283              		.loc 1 397 3 view .LVU45
 284 0000 064A     		ldr	r2, .L24
 285 0002 D368     		ldr	r3, [r2, #12]
 286 0004 00F01F01 		and	r1, r0, #31
 287 0008 23EA0103 		bic	r3, r3, r1
 288 000c 43EA5010 		orr	r0, r3, r0, lsr #5
 289              	.LVL3:
 290              		.loc 1 397 3 is_stmt 0 view .LVU46
 291 0010 D060     		str	r0, [r2, #12]
 398:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 399:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Enable wake-up pin */
 400:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(PWR->CR3, (PWR_CR3_EWUP & WakeUpPinPolarity));
 292              		.loc 1 400 3 is_stmt 1 view .LVU47
 293 0012 9368     		ldr	r3, [r2, #8]
 294 0014 1943     		orrs	r1, r1, r3
 295 0016 9160     		str	r1, [r2, #8]
 401:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 402:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 13


 403:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 296              		.loc 1 403 1 is_stmt 0 view .LVU48
 297 0018 7047     		bx	lr
 298              	.L25:
 299 001a 00BF     		.align	2
 300              	.L24:
 301 001c 00700040 		.word	1073770496
 302              		.cfi_endproc
 303              	.LFE294:
 305              		.section	.text.HAL_PWR_DisableWakeUpPin,"ax",%progbits
 306              		.align	1
 307              		.global	HAL_PWR_DisableWakeUpPin
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 312              	HAL_PWR_DisableWakeUpPin:
 313              	.LVL4:
 314              	.LFB295:
 404:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 405:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 406:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable the WakeUp PINx functionality.
 407:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param WakeUpPinx: Specifies the Power Wake-Up pin to disable.
 408:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         This parameter can be one of the following values:
 409:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           @arg @ref PWR_WAKEUP_PIN1, PWR_WAKEUP_PIN2, PWR_WAKEUP_PIN3, PWR_WAKEUP_PIN4, PWR_WAK
 410:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 411:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 412:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableWakeUpPin(uint32_t WakeUpPinx)
 413:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 315              		.loc 1 413 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319              		@ link register save eliminated.
 414:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_WAKEUP_PIN(WakeUpPinx));
 320              		.loc 1 414 3 view .LVU50
 415:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 416:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(PWR->CR3, (PWR_CR3_EWUP & WakeUpPinx));
 321              		.loc 1 416 3 view .LVU51
 322 0000 034A     		ldr	r2, .L27
 323 0002 9368     		ldr	r3, [r2, #8]
 324 0004 00F01F00 		and	r0, r0, #31
 325              	.LVL5:
 326              		.loc 1 416 3 is_stmt 0 view .LVU52
 327 0008 23EA0003 		bic	r3, r3, r0
 328 000c 9360     		str	r3, [r2, #8]
 417:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 329              		.loc 1 417 1 view .LVU53
 330 000e 7047     		bx	lr
 331              	.L28:
 332              		.align	2
 333              	.L27:
 334 0010 00700040 		.word	1073770496
 335              		.cfi_endproc
 336              	.LFE295:
 338              		.section	.text.HAL_PWR_EnterSLEEPMode,"ax",%progbits
 339              		.align	1
 340              		.global	HAL_PWR_EnterSLEEPMode
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 14


 341              		.syntax unified
 342              		.thumb
 343              		.thumb_func
 345              	HAL_PWR_EnterSLEEPMode:
 346              	.LVL6:
 347              	.LFB296:
 418:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 419:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 420:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 421:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enter Sleep or Low-power Sleep mode.
 422:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  In Sleep/Low-power Sleep mode, all I/O pins keep the same state as in Run mode.
 423:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param Regulator: Specifies the regulator state in Sleep/Low-power Sleep mode.
 424:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 425:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_MAINREGULATOR_ON Sleep mode (regulator in main mode)
 426:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_LOWPOWERREGULATOR_ON Low-power Sleep mode (regulator in low-power mode
 427:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  Low-power Sleep mode is entered from Low-power Run mode. Therefore, if not yet
 428:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        in Low-power Run mode before calling HAL_PWR_EnterSLEEPMode() with Regulator set
 429:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        to PWR_LOWPOWERREGULATOR_ON, the user can optionally configure the
 430:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Flash in power-down monde in setting the SLEEP_PD bit in FLASH_ACR register.
 431:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Additionally, the clock frequency must be reduced below 2 MHz.
 432:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Setting SLEEP_PD in FLASH_ACR then appropriately reducing the clock frequency must
 433:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        be done before calling HAL_PWR_EnterSLEEPMode() API.
 434:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When exiting Low-power Sleep mode, the MCU is in Low-power Run mode. To move in
 435:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Run mode, the user must resort to HAL_PWREx_DisableLowPowerRunMode() API.
 436:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param SLEEPEntry: Specifies if Sleep mode is entered with WFI or WFE instruction.
 437:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *           This parameter can be one of the following values:
 438:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_SLEEPENTRY_WFI enter Sleep or Low-power Sleep mode with WFI instructio
 439:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_SLEEPENTRY_WFE enter Sleep or Low-power Sleep mode with WFE instructio
 440:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When WFI entry is used, tick interrupt have to be disabled if not desired as
 441:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        the interrupt wake up source.
 442:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 443:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 444:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnterSLEEPMode(uint32_t Regulator, uint8_t SLEEPEntry)
 445:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 348              		.loc 1 445 1 is_stmt 1 view -0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352              		.loc 1 445 1 is_stmt 0 view .LVU55
 353 0000 10B5     		push	{r4, lr}
 354              	.LCFI0:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 4, -8
 357              		.cfi_offset 14, -4
 358 0002 0C46     		mov	r4, r1
 446:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Check the parameters */
 447:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 359              		.loc 1 447 3 is_stmt 1 view .LVU56
 448:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_SLEEP_ENTRY(SLEEPEntry));
 360              		.loc 1 448 3 view .LVU57
 449:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 450:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set Regulator parameter */
 451:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if (Regulator == PWR_MAINREGULATOR_ON)
 361              		.loc 1 451 3 view .LVU58
 362              		.loc 1 451 6 is_stmt 0 view .LVU59
 363 0004 A0B9     		cbnz	r0, .L30
 452:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 15


 453:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* If in low-power run mode at this point, exit it */
 454:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF))
 364              		.loc 1 454 5 is_stmt 1 view .LVU60
 365              		.loc 1 454 9 is_stmt 0 view .LVU61
 366 0006 0F4B     		ldr	r3, .L37
 367 0008 5B69     		ldr	r3, [r3, #20]
 368              		.loc 1 454 8 view .LVU62
 369 000a 13F4007F 		tst	r3, #512
 370 000e 0AD1     		bne	.L35
 371              	.LVL7:
 372              	.L31:
 455:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 456:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       if (HAL_PWREx_DisableLowPowerRunMode() != HAL_OK)
 457:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       {
 458:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****         return ;
 459:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       }
 460:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     }
 461:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* Regulator now in main mode. */
 462:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 463:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   else
 464:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 465:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* If in run mode, first move to low-power run mode.
 466:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****        The system clock frequency must be below 2 MHz at this point. */
 467:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     if (HAL_IS_BIT_SET(PWR->SR2, PWR_SR2_REGLPF) == RESET)
 468:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 469:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       HAL_PWREx_EnableLowPowerRunMode();
 470:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     }
 471:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 472:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 473:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear SLEEPDEEP bit of Cortex System Control Register */
 474:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 373              		.loc 1 474 3 is_stmt 1 view .LVU63
 374 0010 0D4A     		ldr	r2, .L37+4
 375 0012 1369     		ldr	r3, [r2, #16]
 376 0014 23F00403 		bic	r3, r3, #4
 377 0018 1361     		str	r3, [r2, #16]
 475:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 476:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Select SLEEP mode entry -------------------------------------------------*/
 477:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if(SLEEPEntry == PWR_SLEEPENTRY_WFI)
 378              		.loc 1 477 3 view .LVU64
 379              		.loc 1 477 5 is_stmt 0 view .LVU65
 380 001a 012C     		cmp	r4, #1
 381 001c 10D0     		beq	.L36
 478:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 479:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* Request Wait For Interrupt */
 480:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __WFI();
 481:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 482:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   else
 483:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 484:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     /* Request Wait For Event */
 485:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __SEV();
 382              		.loc 1 485 5 is_stmt 1 view .LVU66
 383              		.syntax unified
 384              	@ 485 "../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 385 001e 40BF     		sev
 386              	@ 0 "" 2
 486:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __WFE();
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 16


 387              		.loc 1 486 5 view .LVU67
 388              	@ 486 "../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 389 0020 20BF     		wfe
 390              	@ 0 "" 2
 487:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     __WFE();
 391              		.loc 1 487 5 view .LVU68
 392              	@ 487 "../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 393 0022 20BF     		wfe
 394              	@ 0 "" 2
 395              		.thumb
 396              		.syntax unified
 397              	.L29:
 488:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 489:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 490:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 398              		.loc 1 490 1 is_stmt 0 view .LVU69
 399 0024 10BD     		pop	{r4, pc}
 400              	.LVL8:
 401              	.L35:
 456:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       {
 402              		.loc 1 456 7 is_stmt 1 view .LVU70
 456:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       {
 403              		.loc 1 456 11 is_stmt 0 view .LVU71
 404 0026 FFF7FEFF 		bl	HAL_PWREx_DisableLowPowerRunMode
 405              	.LVL9:
 456:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****       {
 406              		.loc 1 456 10 view .LVU72
 407 002a 0028     		cmp	r0, #0
 408 002c F0D0     		beq	.L31
 409 002e F9E7     		b	.L29
 410              	.LVL10:
 411              	.L30:
 467:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 412              		.loc 1 467 5 is_stmt 1 view .LVU73
 467:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 413              		.loc 1 467 9 is_stmt 0 view .LVU74
 414 0030 044B     		ldr	r3, .L37
 415 0032 5B69     		ldr	r3, [r3, #20]
 467:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     {
 416              		.loc 1 467 8 view .LVU75
 417 0034 13F4007F 		tst	r3, #512
 418 0038 EAD1     		bne	.L31
 469:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     }
 419              		.loc 1 469 7 is_stmt 1 view .LVU76
 420 003a FFF7FEFF 		bl	HAL_PWREx_EnableLowPowerRunMode
 421              	.LVL11:
 469:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     }
 422              		.loc 1 469 7 is_stmt 0 view .LVU77
 423 003e E7E7     		b	.L31
 424              	.L36:
 480:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 425              		.loc 1 480 5 is_stmt 1 view .LVU78
 426              		.syntax unified
 427              	@ 480 "../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 428 0040 30BF     		wfi
 429              	@ 0 "" 2
 430              		.thumb
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 17


 431              		.syntax unified
 432 0042 EFE7     		b	.L29
 433              	.L38:
 434              		.align	2
 435              	.L37:
 436 0044 00700040 		.word	1073770496
 437 0048 00ED00E0 		.word	-536810240
 438              		.cfi_endproc
 439              	.LFE296:
 441              		.section	.text.HAL_PWR_EnterSTOPMode,"ax",%progbits
 442              		.align	1
 443              		.global	HAL_PWR_EnterSTOPMode
 444              		.syntax unified
 445              		.thumb
 446              		.thumb_func
 448              	HAL_PWR_EnterSTOPMode:
 449              	.LVL12:
 450              	.LFB297:
 491:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 492:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 493:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 494:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enter Stop mode
 495:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  This API is named HAL_PWR_EnterSTOPMode to ensure compatibility with legacy code running
 496:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        on devices where only "Stop mode" is mentioned with main or low power regulator ON.
 497:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  In Stop mode, all I/O pins keep the same state as in Run mode.
 498:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  All clocks in the VCORE domain are stopped; the PLL, the MSI,
 499:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        the HSI and the HSE oscillators are disabled. Some peripherals with the wakeup capabilit
 500:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        (I2Cx, USARTx and LPUART) can switch on the HSI to receive a frame, and switch off the H
 501:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        after receiving the frame if it is not a wakeup frame. In this case, the HSI clock is pr
 502:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        only to the peripheral requesting it.
 503:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        SRAM1, SRAM2 and register contents are preserved.
 504:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        The BOR is available.
 505:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        The voltage regulator can be configured either in normal (Stop 0) or low-power mode (Sto
 506:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When exiting Stop 0 or Stop 1 mode by issuing an interrupt or a wakeup event,
 507:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         the HSI RC oscillator is selected as system clock if STOPWUCK bit in RCC_CFGR register
 508:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         is set; the MSI oscillator is selected if STOPWUCK is cleared.
 509:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  When the voltage regulator operates in low power mode (Stop 1), an additional
 510:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         startup delay is incurred when waking up.
 511:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         By keeping the internal regulator ON during Stop mode (Stop 0), the consumption
 512:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *         is higher although the startup time is reduced.
 513:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param Regulator: Specifies the regulator state in Stop mode.
 514:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 515:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_MAINREGULATOR_ON  Stop 0 mode (main regulator ON)
 516:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_LOWPOWERREGULATOR_ON  Stop 1 mode (low power regulator ON)
 517:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @param STOPEntry: Specifies Stop 0 or Stop 1 mode is entered with WFI or WFE instruction.
 518:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *          This parameter can be one of the following values:
 519:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_STOPENTRY_WFI  Enter Stop 0 or Stop 1 mode with WFI instruction.
 520:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *            @arg @ref PWR_STOPENTRY_WFE  Enter Stop 0 or Stop 1 mode with WFE instruction.
 521:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 522:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 523:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnterSTOPMode(uint32_t Regulator, uint8_t STOPEntry)
 524:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 451              		.loc 1 524 1 view -0
 452              		.cfi_startproc
 453              		@ args = 0, pretend = 0, frame = 0
 454              		@ frame_needed = 0, uses_anonymous_args = 0
 455              		.loc 1 524 1 is_stmt 0 view .LVU80
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 18


 456 0000 08B5     		push	{r3, lr}
 457              	.LCFI1:
 458              		.cfi_def_cfa_offset 8
 459              		.cfi_offset 3, -8
 460              		.cfi_offset 14, -4
 525:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Check the parameters */
 526:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   assert_param(IS_PWR_REGULATOR(Regulator));
 461              		.loc 1 526 3 is_stmt 1 view .LVU81
 527:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 528:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   if(Regulator == PWR_LOWPOWERREGULATOR_ON)
 462              		.loc 1 528 3 view .LVU82
 463              		.loc 1 528 5 is_stmt 0 view .LVU83
 464 0002 B0F5804F 		cmp	r0, #16384
 465 0006 03D0     		beq	.L43
 529:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 530:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     HAL_PWREx_EnterSTOP1Mode(STOPEntry);
 531:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 532:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   else
 533:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   {
 534:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****     HAL_PWREx_EnterSTOP0Mode(STOPEntry);
 466              		.loc 1 534 5 is_stmt 1 view .LVU84
 467 0008 0846     		mov	r0, r1
 468              	.LVL13:
 469              		.loc 1 534 5 is_stmt 0 view .LVU85
 470 000a FFF7FEFF 		bl	HAL_PWREx_EnterSTOP0Mode
 471              	.LVL14:
 472              	.L39:
 535:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 536:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 473              		.loc 1 536 1 view .LVU86
 474 000e 08BD     		pop	{r3, pc}
 475              	.LVL15:
 476              	.L43:
 530:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 477              		.loc 1 530 5 is_stmt 1 view .LVU87
 478 0010 0846     		mov	r0, r1
 479              	.LVL16:
 530:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 480              		.loc 1 530 5 is_stmt 0 view .LVU88
 481 0012 FFF7FEFF 		bl	HAL_PWREx_EnterSTOP1Mode
 482              	.LVL17:
 530:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   }
 483              		.loc 1 530 5 view .LVU89
 484 0016 FAE7     		b	.L39
 485              		.cfi_endproc
 486              	.LFE297:
 488              		.section	.text.HAL_PWR_EnterSTANDBYMode,"ax",%progbits
 489              		.align	1
 490              		.global	HAL_PWR_EnterSTANDBYMode
 491              		.syntax unified
 492              		.thumb
 493              		.thumb_func
 495              	HAL_PWR_EnterSTANDBYMode:
 496              	.LFB298:
 537:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 538:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 539:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enter Standby mode.
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 19


 540:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  In Standby mode, the PLL, the HSI, the MSI and the HSE oscillators are switched
 541:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        off. The voltage regulator is disabled, except when SRAM2 content is preserved
 542:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        in which case the regulator is in low-power mode.
 543:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        SRAM1 and register contents are lost except for registers in the Backup domain and
 544:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Standby circuitry. SRAM2 content can be preserved if the bit RRS is set in PWR_CR3 regis
 545:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        To enable this feature, the user can resort to HAL_PWREx_EnableSRAM2ContentRetention() A
 546:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        to set RRS bit.
 547:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        The BOR is available.
 548:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note  The I/Os can be configured either with a pull-up or pull-down or can be kept in analog s
 549:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        HAL_PWREx_EnableGPIOPullUp() and HAL_PWREx_EnableGPIOPullDown() respectively enable Pull
 550:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        Pull Down state, HAL_PWREx_DisableGPIOPullUp() and HAL_PWREx_DisableGPIOPullDown() disab
 551:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        same.
 552:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        These states are effective in Standby mode only if APC bit is set through
 553:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *        HAL_PWREx_EnablePullUpPullDownConfig() API.
 554:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 555:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 556:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnterSTANDBYMode(void)
 557:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 497              		.loc 1 557 1 is_stmt 1 view -0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 558:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set Stand-by mode */
 559:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   MODIFY_REG(PWR->CR1, PWR_CR1_LPMS, PWR_CR1_LPMS_STANDBY);
 502              		.loc 1 559 3 view .LVU91
 503 0000 064A     		ldr	r2, .L45
 504 0002 1368     		ldr	r3, [r2]
 505 0004 23F00703 		bic	r3, r3, #7
 506 0008 43F00303 		orr	r3, r3, #3
 507 000c 1360     		str	r3, [r2]
 560:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 561:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set SLEEPDEEP bit of Cortex System Control Register */
 562:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPDEEP_Msk));
 508              		.loc 1 562 3 view .LVU92
 509 000e 044A     		ldr	r2, .L45+4
 510 0010 1369     		ldr	r3, [r2, #16]
 511 0012 43F00403 		orr	r3, r3, #4
 512 0016 1361     		str	r3, [r2, #16]
 563:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 564:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /* This option is used to ensure that store operations are completed */
 565:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #if defined ( __CC_ARM)
 566:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __force_stores();
 567:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** #endif
 568:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Request Wait For Interrupt */
 569:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   __WFI();
 513              		.loc 1 569 3 view .LVU93
 514              		.syntax unified
 515              	@ 569 "../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c" 1
 516 0018 30BF     		wfi
 517              	@ 0 "" 2
 570:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 518              		.loc 1 570 1 is_stmt 0 view .LVU94
 519              		.thumb
 520              		.syntax unified
 521 001a 7047     		bx	lr
 522              	.L46:
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 20


 523              		.align	2
 524              	.L45:
 525 001c 00700040 		.word	1073770496
 526 0020 00ED00E0 		.word	-536810240
 527              		.cfi_endproc
 528              	.LFE298:
 530              		.section	.text.HAL_PWR_EnableSleepOnExit,"ax",%progbits
 531              		.align	1
 532              		.global	HAL_PWR_EnableSleepOnExit
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 537              	HAL_PWR_EnableSleepOnExit:
 538              	.LFB299:
 571:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 572:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 573:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 574:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 575:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Indicate Sleep-On-Exit when returning from Handler mode to Thread mode.
 576:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Set SLEEPONEXIT bit of SCR register. When this bit is set, the processor
 577:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 578:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       Setting this bit is useful when the processor is expected to run only on
 579:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       interruptions handling.
 580:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 581:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 582:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableSleepOnExit(void)
 583:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 539              		.loc 1 583 1 is_stmt 1 view -0
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 0
 542              		@ frame_needed = 0, uses_anonymous_args = 0
 543              		@ link register save eliminated.
 584:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set SLEEPONEXIT bit of Cortex System Control Register */
 585:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 544              		.loc 1 585 3 view .LVU96
 545 0000 024A     		ldr	r2, .L48
 546 0002 1369     		ldr	r3, [r2, #16]
 547 0004 43F00203 		orr	r3, r3, #2
 548 0008 1361     		str	r3, [r2, #16]
 586:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 549              		.loc 1 586 1 is_stmt 0 view .LVU97
 550 000a 7047     		bx	lr
 551              	.L49:
 552              		.align	2
 553              	.L48:
 554 000c 00ED00E0 		.word	-536810240
 555              		.cfi_endproc
 556              	.LFE299:
 558              		.section	.text.HAL_PWR_DisableSleepOnExit,"ax",%progbits
 559              		.align	1
 560              		.global	HAL_PWR_DisableSleepOnExit
 561              		.syntax unified
 562              		.thumb
 563              		.thumb_func
 565              	HAL_PWR_DisableSleepOnExit:
 566              	.LFB300:
 587:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 21


 588:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 589:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 590:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable Sleep-On-Exit feature when returning from Handler mode to Thread mode.
 591:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Clear SLEEPONEXIT bit of SCR register. When this bit is set, the processor
 592:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       re-enters SLEEP mode when an interruption handling is over.
 593:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 594:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 595:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableSleepOnExit(void)
 596:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 567              		.loc 1 596 1 is_stmt 1 view -0
 568              		.cfi_startproc
 569              		@ args = 0, pretend = 0, frame = 0
 570              		@ frame_needed = 0, uses_anonymous_args = 0
 571              		@ link register save eliminated.
 597:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear SLEEPONEXIT bit of Cortex System Control Register */
 598:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SLEEPONEXIT_Msk));
 572              		.loc 1 598 3 view .LVU99
 573 0000 024A     		ldr	r2, .L51
 574 0002 1369     		ldr	r3, [r2, #16]
 575 0004 23F00203 		bic	r3, r3, #2
 576 0008 1361     		str	r3, [r2, #16]
 599:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 577              		.loc 1 599 1 is_stmt 0 view .LVU100
 578 000a 7047     		bx	lr
 579              	.L52:
 580              		.align	2
 581              	.L51:
 582 000c 00ED00E0 		.word	-536810240
 583              		.cfi_endproc
 584              	.LFE300:
 586              		.section	.text.HAL_PWR_EnableSEVOnPend,"ax",%progbits
 587              		.align	1
 588              		.global	HAL_PWR_EnableSEVOnPend
 589              		.syntax unified
 590              		.thumb
 591              		.thumb_func
 593              	HAL_PWR_EnableSEVOnPend:
 594              	.LFB301:
 600:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 601:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 602:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 603:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 604:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Enable CORTEX M4 SEVONPEND bit.
 605:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Set SEVONPEND bit of SCR register. When this bit is set, this causes
 606:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 607:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 608:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 609:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_EnableSEVOnPend(void)
 610:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 595              		.loc 1 610 1 is_stmt 1 view -0
 596              		.cfi_startproc
 597              		@ args = 0, pretend = 0, frame = 0
 598              		@ frame_needed = 0, uses_anonymous_args = 0
 599              		@ link register save eliminated.
 611:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Set SEVONPEND bit of Cortex System Control Register */
 612:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   SET_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 600              		.loc 1 612 3 view .LVU102
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 22


 601 0000 024A     		ldr	r2, .L54
 602 0002 1369     		ldr	r3, [r2, #16]
 603 0004 43F01003 		orr	r3, r3, #16
 604 0008 1361     		str	r3, [r2, #16]
 613:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 605              		.loc 1 613 1 is_stmt 0 view .LVU103
 606 000a 7047     		bx	lr
 607              	.L55:
 608              		.align	2
 609              	.L54:
 610 000c 00ED00E0 		.word	-536810240
 611              		.cfi_endproc
 612              	.LFE301:
 614              		.section	.text.HAL_PWR_DisableSEVOnPend,"ax",%progbits
 615              		.align	1
 616              		.global	HAL_PWR_DisableSEVOnPend
 617              		.syntax unified
 618              		.thumb
 619              		.thumb_func
 621              	HAL_PWR_DisableSEVOnPend:
 622              	.LFB302:
 614:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 615:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 616:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 617:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief Disable CORTEX M4 SEVONPEND bit.
 618:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @note Clear SEVONPEND bit of SCR register. When this bit is set, this causes
 619:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   *       WFE to wake up when an interrupt moves from inactive to pended.
 620:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 621:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 622:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** void HAL_PWR_DisableSEVOnPend(void)
 623:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 623              		.loc 1 623 1 is_stmt 1 view -0
 624              		.cfi_startproc
 625              		@ args = 0, pretend = 0, frame = 0
 626              		@ frame_needed = 0, uses_anonymous_args = 0
 627              		@ link register save eliminated.
 624:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* Clear SEVONPEND bit of Cortex System Control Register */
 625:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   CLEAR_BIT(SCB->SCR, ((uint32_t)SCB_SCR_SEVONPEND_Msk));
 628              		.loc 1 625 3 view .LVU105
 629 0000 024A     		ldr	r2, .L57
 630 0002 1369     		ldr	r3, [r2, #16]
 631 0004 23F01003 		bic	r3, r3, #16
 632 0008 1361     		str	r3, [r2, #16]
 626:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 633              		.loc 1 626 1 is_stmt 0 view .LVU106
 634 000a 7047     		bx	lr
 635              	.L58:
 636              		.align	2
 637              	.L57:
 638 000c 00ED00E0 		.word	-536810240
 639              		.cfi_endproc
 640              	.LFE302:
 642              		.section	.text.HAL_PWR_PVDCallback,"ax",%progbits
 643              		.align	1
 644              		.weak	HAL_PWR_PVDCallback
 645              		.syntax unified
 646              		.thumb
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 23


 647              		.thumb_func
 649              	HAL_PWR_PVDCallback:
 650              	.LFB303:
 627:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 628:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 629:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 630:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 631:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** 
 632:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** /**
 633:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @brief PWR PVD interrupt callback
 634:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   * @retval None
 635:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   */
 636:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** __weak void HAL_PWR_PVDCallback(void)
 637:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** {
 651              		.loc 1 637 1 is_stmt 1 view -0
 652              		.cfi_startproc
 653              		@ args = 0, pretend = 0, frame = 0
 654              		@ frame_needed = 0, uses_anonymous_args = 0
 655              		@ link register save eliminated.
 638:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****   /* NOTE : This function should not be modified; when the callback is needed,
 639:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****             the HAL_PWR_PVDCallback can be implemented in the user file
 640:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c ****    */
 641:../03_Drivers/STM32L4xx_HAL_Driver/Src/stm32l4xx_hal_pwr.c **** }
 656              		.loc 1 641 1 view .LVU108
 657 0000 7047     		bx	lr
 658              		.cfi_endproc
 659              	.LFE303:
 661              		.text
 662              	.Letext0:
 663              		.file 2 "c:\\gnuarm\\arm-none-eabi\\include\\machine\\_default_types.h"
 664              		.file 3 "c:\\gnuarm\\arm-none-eabi\\include\\sys\\_stdint.h"
 665              		.file 4 "../03_Drivers/CMSIS/Include/core_cm4.h"
 666              		.file 5 "../03_Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 667              		.file 6 "../03_Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l4xx.h"
 668              		.file 7 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 669              		.file 8 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 670              		.file 9 "../03_Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
ARM GAS  C:\Users\minde\AppData\Local\Temp\cczhgFJX.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l4xx_hal_pwr.c
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:20     .text.HAL_PWR_DeInit:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:26     .text.HAL_PWR_DeInit:00000000 HAL_PWR_DeInit
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:48     .text.HAL_PWR_DeInit:00000014 $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:53     .text.HAL_PWR_EnableBkUpAccess:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:59     .text.HAL_PWR_EnableBkUpAccess:00000000 HAL_PWR_EnableBkUpAccess
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:76     .text.HAL_PWR_EnableBkUpAccess:0000000c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:81     .text.HAL_PWR_DisableBkUpAccess:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:87     .text.HAL_PWR_DisableBkUpAccess:00000000 HAL_PWR_DisableBkUpAccess
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:104    .text.HAL_PWR_DisableBkUpAccess:0000000c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:109    .text.HAL_PWR_ConfigPVD:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:115    .text.HAL_PWR_ConfigPVD:00000000 HAL_PWR_ConfigPVD
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:206    .text.HAL_PWR_ConfigPVD:0000007c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:212    .text.HAL_PWR_EnablePVD:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:218    .text.HAL_PWR_EnablePVD:00000000 HAL_PWR_EnablePVD
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:235    .text.HAL_PWR_EnablePVD:0000000c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:240    .text.HAL_PWR_DisablePVD:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:246    .text.HAL_PWR_DisablePVD:00000000 HAL_PWR_DisablePVD
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:263    .text.HAL_PWR_DisablePVD:0000000c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:268    .text.HAL_PWR_EnableWakeUpPin:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:274    .text.HAL_PWR_EnableWakeUpPin:00000000 HAL_PWR_EnableWakeUpPin
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:301    .text.HAL_PWR_EnableWakeUpPin:0000001c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:306    .text.HAL_PWR_DisableWakeUpPin:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:312    .text.HAL_PWR_DisableWakeUpPin:00000000 HAL_PWR_DisableWakeUpPin
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:334    .text.HAL_PWR_DisableWakeUpPin:00000010 $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:339    .text.HAL_PWR_EnterSLEEPMode:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:345    .text.HAL_PWR_EnterSLEEPMode:00000000 HAL_PWR_EnterSLEEPMode
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:436    .text.HAL_PWR_EnterSLEEPMode:00000044 $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:442    .text.HAL_PWR_EnterSTOPMode:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:448    .text.HAL_PWR_EnterSTOPMode:00000000 HAL_PWR_EnterSTOPMode
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:489    .text.HAL_PWR_EnterSTANDBYMode:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:495    .text.HAL_PWR_EnterSTANDBYMode:00000000 HAL_PWR_EnterSTANDBYMode
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:525    .text.HAL_PWR_EnterSTANDBYMode:0000001c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:531    .text.HAL_PWR_EnableSleepOnExit:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:537    .text.HAL_PWR_EnableSleepOnExit:00000000 HAL_PWR_EnableSleepOnExit
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:554    .text.HAL_PWR_EnableSleepOnExit:0000000c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:559    .text.HAL_PWR_DisableSleepOnExit:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:565    .text.HAL_PWR_DisableSleepOnExit:00000000 HAL_PWR_DisableSleepOnExit
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:582    .text.HAL_PWR_DisableSleepOnExit:0000000c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:587    .text.HAL_PWR_EnableSEVOnPend:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:593    .text.HAL_PWR_EnableSEVOnPend:00000000 HAL_PWR_EnableSEVOnPend
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:610    .text.HAL_PWR_EnableSEVOnPend:0000000c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:615    .text.HAL_PWR_DisableSEVOnPend:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:621    .text.HAL_PWR_DisableSEVOnPend:00000000 HAL_PWR_DisableSEVOnPend
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:638    .text.HAL_PWR_DisableSEVOnPend:0000000c $d
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:643    .text.HAL_PWR_PVDCallback:00000000 $t
C:\Users\minde\AppData\Local\Temp\cczhgFJX.s:649    .text.HAL_PWR_PVDCallback:00000000 HAL_PWR_PVDCallback

UNDEFINED SYMBOLS
HAL_PWREx_DisableLowPowerRunMode
HAL_PWREx_EnableLowPowerRunMode
HAL_PWREx_EnterSTOP0Mode
HAL_PWREx_EnterSTOP1Mode
